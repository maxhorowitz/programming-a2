import list

def Stack(l):
    result = {
        .stack: [],
        .size: 0, # how do we make sure the max size is l
        .max_size: l, # capture maxSize parameter
        .valid: 0,#+1 to this when '(' and -1 when ')'
        .ever_negative: False, #whenever pushing, check after if valid is negative and if so make True
        .problem_index: -1,
    }

def push(s, c):
    atomically when s.size < s.max_size:
        s.stack = list.append(s.stack, c)
        s.size += 1
        if c == "(":
            s.valid += 1
        elif c == ")":
            s.valid -= 1
        if valid < 0:
            s.ever_negative = True
            s.problem_index = (s.size-1)

def pop(s):
    atomically when s.size > 0:
        let rev = list.reversed(s.stack):
            c = list.head(rev)
            result = c
            s.stack = list.reversed(list.tail(rev))
        s.size -= 1
        if c == "(":
            s.valid -= 1
        elif c == ")":
            s.valid += 1
        if s.size == s.problem_index:
            s.problem_index = -1
            s.ever_negative = False

def validate(s):
    atomically when s.size == s.max_size:
        result = (s.ever_negative == false && s.valid == 0)