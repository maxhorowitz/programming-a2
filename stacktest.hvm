{
  "labels": {
    "__end__": 1565
  },
  "code": [
    { "op": "Frame", "name": "__init__", "args": "()" },
    { "op": "Jump", "pc": "52" },
    { "op": "Frame", "name": "subseq", "args": "(s, b, e)" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "StoreVar", "value": "$accu3" },
    { "op": "LoadVar", "value": "b" },
    { "op": "DelVar", "value": "b" },
    { "op": "LoadVar", "value": "e" },
    { "op": "DelVar", "value": "e" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Nary", "arity": 2, "value": ".." },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "x" },
    { "op": "JumpCond", "pc": "25", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$accu3" },
    { "op": "DelVar", "value": "$accu3" },
    { "op": "LoadVar", "value": "s" },
    { "op": "LoadVar", "value": "x" },
    { "op": "DelVar", "value": "x" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "StoreVar", "value": "$accu3" },
    { "op": "Jump", "pc": "14" },
    { "op": "DelVar", "value": "s" },
    { "op": "DelVar", "value": "x" },
    { "op": "LoadVar", "value": "$accu3" },
    { "op": "DelVar", "value": "$accu3" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "52" },
    { "op": "Frame", "name": "append", "args": "(s, e)" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "e" },
    { "op": "DelVar", "value": "e" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "52" },
    { "op": "Frame", "name": "head", "args": "s" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "pc", "value": "55" } },
    { "op": "Builtin", "value": "list$tail" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "tail", "args": "s" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "2" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Nary", "arity": 1, "value": "len" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "sum", "args": "a" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "a" },
    { "op": "DelVar", "value": "a" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "v" },
    { "op": "JumpCond", "pc": "87", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "result" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "78" },
    { "op": "DelVar", "value": "v" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "set", "args": "a" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "StoreVar", "value": "$accu71" },
    { "op": "LoadVar", "value": "a" },
    { "op": "DelVar", "value": "a" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "v" },
    { "op": "JumpCond", "pc": "106", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$accu71" },
    { "op": "DelVar", "value": "$accu71" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "StoreVar", "value": "$accu71" },
    { "op": "Jump", "pc": "97" },
    { "op": "DelVar", "value": "v" },
    { "op": "LoadVar", "value": "$accu71" },
    { "op": "DelVar", "value": "$accu71" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "list", "args": "a" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "StoreVar", "value": "$accu87" },
    { "op": "LoadVar", "value": "a" },
    { "op": "DelVar", "value": "a" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "v" },
    { "op": "JumpCond", "pc": "128", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$accu87" },
    { "op": "DelVar", "value": "$accu87" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "StoreVar", "value": "$accu87" },
    { "op": "Jump", "pc": "119" },
    { "op": "DelVar", "value": "v" },
    { "op": "LoadVar", "value": "$accu87" },
    { "op": "DelVar", "value": "$accu87" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "values", "args": "d" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "StoreVar", "value": "$accu103" },
    { "op": "LoadVar", "value": "d" },
    { "op": "DelVar", "value": "d" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "key": "_", "value": "v" },
    { "op": "DelVar", "value": "_" },
    { "op": "JumpCond", "pc": "151", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$accu103" },
    { "op": "DelVar", "value": "$accu103" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "StoreVar", "value": "$accu103" },
    { "op": "Jump", "pc": "141" },
    { "op": "DelVar", "value": "v" },
    { "op": "LoadVar", "value": "$accu103" },
    { "op": "DelVar", "value": "$accu103" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "items", "args": "d" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "StoreVar", "value": "$accu119" },
    { "op": "LoadVar", "value": "d" },
    { "op": "DelVar", "value": "d" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "key": "k", "value": "v" },
    { "op": "JumpCond", "pc": "178", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$accu119" },
    { "op": "DelVar", "value": "$accu119" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "k" },
    { "op": "DelVar", "value": "k" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "StoreVar", "value": "$accu119" },
    { "op": "Jump", "pc": "164" },
    { "op": "DelVar", "value": "k" },
    { "op": "DelVar", "value": "v" },
    { "op": "LoadVar", "value": "$accu119" },
    { "op": "DelVar", "value": "$accu119" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "qsort", "args": "a" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "a" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "195", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "a" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "265" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Push", "value": { "type": "pc", "value": "44" } },
    { "op": "LoadVar", "value": "a" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Push", "value": { "type": "pc", "value": "55" } },
    { "op": "LoadVar", "value": "a" },
    { "op": "DelVar", "value": "a" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "StoreVar", "value": "(pivot, rest)" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "StoreVar", "value": "$accu156" },
    { "op": "LoadVar", "value": "rest" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "DelVar", "value": "v" },
    { "op": "Cut", "value": "v" },
    { "op": "JumpCond", "pc": "224", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "v" },
    { "op": "LoadVar", "value": "pivot" },
    { "op": "Nary", "arity": 2, "value": "<" },
    { "op": "JumpCond", "pc": "210", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$accu156" },
    { "op": "DelVar", "value": "$accu156" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "StoreVar", "value": "$accu156" },
    { "op": "Jump", "pc": "210" },
    { "op": "DelVar", "value": "v" },
    { "op": "LoadVar", "value": "$accu156" },
    { "op": "DelVar", "value": "$accu156" },
    { "op": "StoreVar", "value": "lower" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "StoreVar", "value": "$accu173" },
    { "op": "LoadVar", "value": "rest" },
    { "op": "DelVar", "value": "rest" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "DelVar", "value": "v" },
    { "op": "Cut", "value": "v" },
    { "op": "JumpCond", "pc": "247", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "v" },
    { "op": "LoadVar", "value": "pivot" },
    { "op": "Nary", "arity": 2, "value": ">=" },
    { "op": "JumpCond", "pc": "233", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$accu173" },
    { "op": "DelVar", "value": "$accu173" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "StoreVar", "value": "$accu173" },
    { "op": "Jump", "pc": "233" },
    { "op": "DelVar", "value": "v" },
    { "op": "LoadVar", "value": "$accu173" },
    { "op": "DelVar", "value": "$accu173" },
    { "op": "StoreVar", "value": "higher" },
    { "op": "Push", "value": { "type": "pc", "value": "185" } },
    { "op": "LoadVar", "value": "lower" },
    { "op": "DelVar", "value": "lower" },
    { "op": "Apply" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "pivot" },
    { "op": "DelVar", "value": "pivot" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Push", "value": { "type": "pc", "value": "185" } },
    { "op": "LoadVar", "value": "higher" },
    { "op": "DelVar", "value": "higher" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "+" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "sorted", "args": "d" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "185" } },
    { "op": "Push", "value": { "type": "pc", "value": "112" } },
    { "op": "LoadVar", "value": "d" },
    { "op": "DelVar", "value": "d" },
    { "op": "Apply" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "reversed", "args": "d" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "d" },
    { "op": "Nary", "arity": 1, "value": "len" },
    { "op": "StoreVar", "value": "n" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "StoreVar", "value": "$accu216" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "n" },
    { "op": "Nary", "arity": 2, "value": ".." },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "i" },
    { "op": "JumpCond", "pc": "302", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$accu216" },
    { "op": "DelVar", "value": "$accu216" },
    { "op": "LoadVar", "value": "d" },
    { "op": "LoadVar", "value": "n" },
    { "op": "LoadVar", "value": "i" },
    { "op": "DelVar", "value": "i" },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "StoreVar", "value": "$accu216" },
    { "op": "Jump", "pc": "289" },
    { "op": "DelVar", "value": "d" },
    { "op": "DelVar", "value": "i" },
    { "op": "DelVar", "value": "n" },
    { "op": "LoadVar", "value": "$accu216" },
    { "op": "DelVar", "value": "$accu216" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "empty", "args": "()" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "fromSet", "args": "s" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "StoreVar", "value": "$accu243" },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "elt" },
    { "op": "JumpCond", "pc": "333", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$accu243" },
    { "op": "DelVar", "value": "$accu243" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "StoreVar", "value": "$accu243" },
    { "op": "Jump", "pc": "323" },
    { "op": "DelVar", "value": "elt" },
    { "op": "LoadVar", "value": "$accu243" },
    { "op": "DelVar", "value": "$accu243" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "fromList", "args": "a" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "a" },
    { "op": "DelVar", "value": "a" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "v" },
    { "op": "JumpCond", "pc": "369", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "v" },
    { "op": "LoadVar", "value": "result" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "JumpCond", "pc": "362", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "LoadVar" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar" },
    { "op": "Jump", "pc": "346" },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "StoreVar" },
    { "op": "Jump", "pc": "346" },
    { "op": "DelVar", "value": "v" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "pc", "value": "374" } },
    { "op": "Builtin", "value": "bag$multiplicity" },
    { "op": "Jump", "pc": "392" },
    { "op": "Frame", "name": "multiplicity", "args": "(bg, elt)" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "JumpCond", "pc": "387", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "391" },
    { "op": "DelVar", "value": "bg" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "pc", "value": "395" } },
    { "op": "Builtin", "value": "bag$size" },
    { "op": "Jump", "pc": "414" },
    { "op": "Frame", "name": "size", "args": "bg" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "key": "_", "value": "c" },
    { "op": "DelVar", "value": "_" },
    { "op": "JumpCond", "pc": "412", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "result" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "c" },
    { "op": "DelVar", "value": "c" },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "402" },
    { "op": "DelVar", "value": "c" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "pc", "value": "417" } },
    { "op": "Builtin", "value": "bag$bmin" },
    { "op": "Jump", "pc": "433" },
    { "op": "Frame", "name": "bmin", "args": "bg" },
    { "op": "DelVar", "value": "result" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Nary", "arity": 2, "value": "!=" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "Nary", "arity": 1, "value": "min" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "pc", "value": "436" } },
    { "op": "Builtin", "value": "bag$bmax" },
    { "op": "Jump", "pc": "461" },
    { "op": "Frame", "name": "bmax", "args": "bg" },
    { "op": "DelVar", "value": "result" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Nary", "arity": 2, "value": "!=" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "Nary", "arity": 1, "value": "max" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "461" },
    { "op": "Frame", "name": "bchoose", "args": "bg" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "Choose" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "pc", "value": "464" } },
    { "op": "Builtin", "value": "bag$add" },
    { "op": "Jump", "pc": "490" },
    { "op": "Frame", "name": "add", "args": "(bg, elt)" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "LoadVar", "value": "result" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "JumpCond", "pc": "483", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "elt" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "LoadVar" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar" },
    { "op": "Jump", "pc": "489" },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "elt" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "StoreVar" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "pc", "value": "493" } },
    { "op": "Builtin", "value": "bag$remove" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "remove", "args": "(bg, elt)" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "LoadVar", "value": "result" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "JumpCond", "pc": "510", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "elt" },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "LoadVar" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "StoreVar" },
    { "op": "LoadVar", "value": "result" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "Apply" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": "<=" },
    { "op": "JumpCond", "pc": "521", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "elt" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Address" },
    { "op": "DelVar" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "combinations", "args": "(bg, k)" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "k" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "535", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "bg" },
    { "op": "DelVar", "value": "k" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "dict", "value": [] }] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "616" },
    { "op": "Push", "value": { "type": "pc", "value": "395" } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "n" },
    { "op": "LoadVar", "value": "k" },
    { "op": "LoadVar", "value": "n" },
    { "op": "Nary", "arity": 2, "value": ">" },
    { "op": "JumpCond", "pc": "549", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "bg" },
    { "op": "DelVar", "value": "k" },
    { "op": "DelVar", "value": "n" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "616" },
    { "op": "LoadVar", "value": "k" },
    { "op": "LoadVar", "value": "n" },
    { "op": "DelVar", "value": "n" },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "561", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "k" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "616" },
    { "op": "Push", "value": { "type": "pc", "value": "417" } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "hd" },
    { "op": "Push", "value": { "type": "pc", "value": "493" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "hd" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "tl" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "StoreVar", "value": "$accu454" },
    { "op": "Push", "value": { "type": "pc", "value": "524" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "tl" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "k" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "x" },
    { "op": "JumpCond", "pc": "601", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$accu454" },
    { "op": "DelVar", "value": "$accu454" },
    { "op": "Push", "value": { "type": "pc", "value": "464" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "x" },
    { "op": "DelVar", "value": "x" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "hd" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "StoreVar", "value": "$accu454" },
    { "op": "Jump", "pc": "586" },
    { "op": "DelVar", "value": "hd" },
    { "op": "DelVar", "value": "x" },
    { "op": "LoadVar", "value": "$accu454" },
    { "op": "DelVar", "value": "$accu454" },
    { "op": "Push", "value": { "type": "pc", "value": "524" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "tl" },
    { "op": "DelVar", "value": "tl" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "k" },
    { "op": "DelVar", "value": "k" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "|" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "atomic_load", "args": "p" },
    { "op": "DelVar", "value": "result" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "p" },
    { "op": "DelVar", "value": "p" },
    { "op": "Load" },
    { "op": "StoreVar", "value": "result" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "atomic_store", "args": "(p, v)" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "p" },
    { "op": "DelVar", "value": "p" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "tas", "args": "lk" },
    { "op": "DelVar", "value": "result" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "lk" },
    { "op": "Load" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "lk" },
    { "op": "DelVar", "value": "lk" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "cas", "args": "(p, old, new)" },
    { "op": "DelVar", "value": "result" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "p" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "old" },
    { "op": "DelVar", "value": "old" },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "result" },
    { "op": "JumpCond", "pc": "667", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "p" },
    { "op": "DelVar", "value": "p" },
    { "op": "LoadVar", "value": "new" },
    { "op": "DelVar", "value": "new" },
    { "op": "Store" },
    { "op": "DelVar", "value": "new" },
    { "op": "DelVar", "value": "p" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "BinSema", "args": "acquired" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "acquired" },
    { "op": "DelVar", "value": "acquired" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "Lock", "args": "()" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "672" } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "acquired", "args": "binsema" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "DelVar", "value": "binsema" },
    { "op": "Load" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "acquire", "args": "binsema" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "ReadonlyInc" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "Load" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "JumpCond", "pc": "703", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "706" },
    { "op": "ReadonlyDec" },
    { "op": "AtomicDec" },
    { "op": "Jump", "pc": "696" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "DelVar", "value": "binsema" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "release", "args": "binsema" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "Load" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "DelVar", "value": "binsema" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "held", "args": "binsema" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "DelVar", "value": "binsema" },
    { "op": "Load" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "Condition", "args": "()" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "310" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "wait", "args": "(c, lk)" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "cnt" },
    { "op": "DelVar", "value": "cnt" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Save" },
    { "op": "Continue" },
    { "op": "StoreVar", "value": "((), ctx)" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "pc", "value": "374" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "c" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "ctx" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "cnt" },
    { "op": "LoadVar", "value": "c" },
    { "op": "Push", "value": { "type": "pc", "value": "464" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "c" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "ctx" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "lk" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "ReadonlyInc" },
    { "op": "LoadVar", "value": "lk" },
    { "op": "Load" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "JumpCond", "pc": "795", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "pc", "value": "374" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "c" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "ctx" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "LoadVar", "value": "cnt" },
    { "op": "Nary", "arity": 2, "value": "<=" },
    { "op": "Jump", "pc": "796" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "JumpCond", "pc": "801", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "c" },
    { "op": "DelVar", "value": "cnt" },
    { "op": "DelVar", "value": "ctx" },
    { "op": "Jump", "pc": "804" },
    { "op": "ReadonlyDec" },
    { "op": "AtomicDec" },
    { "op": "Jump", "pc": "778" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "lk" },
    { "op": "DelVar", "value": "lk" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "notify", "args": "c" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "c" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "pc", "value": "310" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "!=" },
    { "op": "JumpCond", "pc": "835", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "c" },
    { "op": "Push", "value": { "type": "pc", "value": "493" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "c" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Push", "value": { "type": "pc", "value": "453" } },
    { "op": "LoadVar", "value": "c" },
    { "op": "DelVar", "value": "c" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "DelVar", "value": "c" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "notifyAll", "args": "c" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "c" },
    { "op": "DelVar", "value": "c" },
    { "op": "Push", "value": { "type": "pc", "value": "310" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "Semaphore", "args": "cnt" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "cnt" },
    { "op": "DelVar", "value": "cnt" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "P", "args": "sema" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "ReadonlyInc" },
    { "op": "LoadVar", "value": "sema" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": ">" },
    { "op": "JumpCond", "pc": "866", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "869" },
    { "op": "ReadonlyDec" },
    { "op": "AtomicDec" },
    { "op": "Jump", "pc": "858" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "sema" },
    { "op": "DelVar", "value": "sema" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "V", "args": "sema" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "sema" },
    { "op": "DelVar", "value": "sema" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "Queue", "args": "()" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "get", "args": "q" },
    { "op": "DelVar", "value": "result" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "ReadonlyInc" },
    { "op": "LoadVar", "value": "q" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Nary", "arity": 2, "value": "!=" },
    { "op": "JumpCond", "pc": "908", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "911" },
    { "op": "ReadonlyDec" },
    { "op": "AtomicDec" },
    { "op": "Jump", "pc": "899" },
    { "op": "ReadonlyDec" },
    { "op": "Push", "value": { "type": "pc", "value": "44" } },
    { "op": "LoadVar", "value": "q" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "q" },
    { "op": "Push", "value": { "type": "pc", "value": "55" } },
    { "op": "LoadVar", "value": "q" },
    { "op": "DelVar", "value": "q" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "put", "args": "(q, item)" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "q" },
    { "op": "Push", "value": { "type": "pc", "value": "32" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "q" },
    { "op": "DelVar", "value": "q" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "item" },
    { "op": "DelVar", "value": "item" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "Stack", "args": "l" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Push", "value": { "type": "pc", "value": "672" } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "push_gate" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "atom", "value": "sema" } },
    { "op": "Push", "value": { "type": "pc", "value": "672" } },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "pop_gate" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "atom", "value": "sema" } },
    { "op": "Push", "value": { "type": "pc", "value": "672" } },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "validate_gate" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "atom", "value": "sema" } },
    { "op": "Push", "value": { "type": "pc", "value": "672" } },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "stack" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "max_size" } },
    { "op": "LoadVar", "value": "l" },
    { "op": "DelVar", "value": "l" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "valid" } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "ever_negative" } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "problem_index" } },
    { "op": "Push", "value": { "type": "int", "value": -1 } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "push", "args": "(s, c)" },
    { "op": "Push", "value": { "type": "pc", "value": "695" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "max_size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "<" },
    { "op": "JumpCond", "pc": "1058", "cond": { "type": "bool", "value": "True" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "push_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store" },
    { "op": "Push", "value": { "type": "pc", "value": "714" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Push", "value": { "type": "pc", "value": "695" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "push_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "sema" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "push_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "stack" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "pc", "value": "32" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "stack" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "c" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "c" },
    { "op": "Push", "value": { "type": "atom", "value": "(" } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "1094", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "c" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "valid" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store" },
    { "op": "Jump", "pc": "1107" },
    { "op": "LoadVar", "value": "c" },
    { "op": "DelVar", "value": "c" },
    { "op": "Push", "value": { "type": "atom", "value": ")" } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "1107", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "valid" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "valid" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": "<" },
    { "op": "JumpCond", "pc": "1120", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "ever_negative" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "Jump", "pc": "1121" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "JumpCond", "pc": "1137", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "ever_negative" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Store" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "problem_index" } },
    { "op": "Address" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "Push", "value": { "type": "pc", "value": "1349" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "pop", "args": "s" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "695" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": ">" },
    { "op": "JumpCond", "pc": "1193", "cond": { "type": "bool", "value": "True" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "pop_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store" },
    { "op": "Push", "value": { "type": "pc", "value": "714" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Push", "value": { "type": "pc", "value": "695" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "pop_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "sema" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "pop_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "Push", "value": { "type": "pc", "value": "278" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "stack" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "rev" },
    { "op": "Push", "value": { "type": "pc", "value": "44" } },
    { "op": "LoadVar", "value": "rev" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "stack" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "pc", "value": "278" } },
    { "op": "Push", "value": { "type": "pc", "value": "55" } },
    { "op": "LoadVar", "value": "rev" },
    { "op": "DelVar", "value": "rev" },
    { "op": "Apply" },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "result" },
    { "op": "Push", "value": { "type": "atom", "value": "(" } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "1235", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "valid" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "Jump", "pc": "1247" },
    { "op": "LoadVar", "value": "result" },
    { "op": "Push", "value": { "type": "atom", "value": ")" } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "1247", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "valid" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "problem_index" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "1267", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "problem_index" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "int", "value": -1 } },
    { "op": "Store" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "ever_negative" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Store" },
    { "op": "Push", "value": { "type": "pc", "value": "1349" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "validate", "args": "s" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "695" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "max_size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "1326", "cond": { "type": "bool", "value": "True" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "validate_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store" },
    { "op": "Push", "value": { "type": "pc", "value": "714" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Push", "value": { "type": "pc", "value": "695" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "validate_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "sema" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "validate_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "ever_negative" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "1340", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "valid" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "Jump", "pc": "1341" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "1349" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1448" },
    { "op": "Frame", "name": "release_one", "args": "s" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "max_size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "!=" },
    { "op": "JumpCond", "pc": "1369", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "push_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": ">" },
    { "op": "Jump", "pc": "1370" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "JumpCond", "pc": "1381", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "pc", "value": "714" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "push_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "sema" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Jump", "pc": "1447" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": "!=" },
    { "op": "JumpCond", "pc": "1397", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "pop_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": ">" },
    { "op": "Jump", "pc": "1398" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "JumpCond", "pc": "1409", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "pc", "value": "714" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "pop_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "sema" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Jump", "pc": "1447" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "max_size" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "1428", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "validate_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "count" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": ">" },
    { "op": "Jump", "pc": "1429" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "JumpCond", "pc": "1440", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "pc", "value": "714" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "validate_gate" } },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "sema" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Jump", "pc": "1447" },
    { "op": "Push", "value": { "type": "pc", "value": "714" } },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "pc", "value": "944" } },
    { "op": "Push", "value": { "type": "int", "value": 2 } },
    { "op": "Apply" },
    { "op": "Store", "value": [{ "type": "atom", "value": "s"}] },
    { "op": "Jump", "pc": "1518" },
    { "op": "Frame", "name": "push_test", "args": "(self, char)" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Push", "value": { "type": "atom", "value": "call push" } },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "self" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "char" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Print" },
    { "op": "Push", "value": { "type": "pc", "value": "1007" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "s" }] } },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "char" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Push", "value": { "type": "atom", "value": "done push" } },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "self" },
    { "op": "DelVar", "value": "self" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "char" },
    { "op": "DelVar", "value": "char" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Print" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1518" },
    { "op": "Frame", "name": "pop_test", "args": "self" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Push", "value": { "type": "atom", "value": "call pop" } },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "self" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Print" },
    { "op": "Push", "value": { "type": "pc", "value": "1144" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "s" }] } },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "v" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Push", "value": { "type": "atom", "value": "done pop" } },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "self" },
    { "op": "DelVar", "value": "self" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Print" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1518" },
    { "op": "Frame", "name": "validate_test", "args": "()" },
    { "op": "Push", "value": { "type": "atom", "value": "call validate" } },
    { "op": "Print" },
    { "op": "Push", "value": { "type": "pc", "value": "1274" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "s" }] } },
    { "op": "Apply" },
    { "op": "JumpCond", "pc": "1515", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "atom", "value": "hooray :)" } },
    { "op": "Print" },
    { "op": "Jump", "pc": "1517" },
    { "op": "Push", "value": { "type": "atom", "value": "boo :(" } },
    { "op": "Print" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }, { "type": "int", "value": 2 }] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "i" },
    { "op": "JumpCond", "pc": "1532", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "pc", "value": "1453" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "i" },
    { "op": "DelVar", "value": "i" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "(" } },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Jump", "pc": "1520" },
    { "op": "DelVar", "value": "i" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "i" },
    { "op": "JumpCond", "pc": "1547", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "pc", "value": "1453" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "i" },
    { "op": "DelVar", "value": "i" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Push", "value": { "type": "atom", "value": ")" } },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Jump", "pc": "1535" },
    { "op": "DelVar", "value": "i" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Cut", "value": "i" },
    { "op": "JumpCond", "pc": "1558", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "pc", "value": "1482" } },
    { "op": "LoadVar", "value": "i" },
    { "op": "DelVar", "value": "i" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Jump", "pc": "1550" },
    { "op": "DelVar", "value": "i" },
    { "op": "Push", "value": { "type": "pc", "value": "1505" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Return" },
    { "op": "DelVar", "value": "result" }
  ],
  "pretty": [
    ["Frame __init__()","start of method __init__"],
    ["Jump 52","jump over method definition: set program counter to 52"],
    ["Frame subseq(s, b, e)","start of method subseq"],
    ["DelVar result","delete method variable result"],
    ["Push ()","initialize accumulator for list comprehension: push constant ()"],
    ["StoreVar $accu3","initialize accumulator for list comprehension: pop a value and store in $accu3"],
    ["LoadVar b","push the value of b"],
    ["DelVar b","delete method variable b"],
    ["LoadVar e","push the value of e"],
    ["DelVar e","delete method variable e"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["2-ary ..","pop 2 values and push the result of applying .."],
    ["Push 0","push constant 0"],
    ["Cut(x)","get next element and assign to x; push False or True depending on success"],
    ["JumpCond False 25","check if loop is done: pop a value and jump to 25 if the value is False"],
    ["LoadVar $accu3","load accumulator: push the value of $accu3"],
    ["DelVar $accu3","delete method variable $accu3"],
    ["LoadVar s","push the value of s"],
    ["LoadVar x","push the value of x"],
    ["DelVar x","delete method variable x"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["StoreVar $accu3","update accumulator: pop a value and store in $accu3"],
    ["Jump 14","set program counter to 14"],
    ["DelVar s","delete method variable s"],
    ["DelVar x","delete method variable x"],
    ["LoadVar $accu3","load final accumulator result: push the value of $accu3"],
    ["DelVar $accu3","delete method variable $accu3"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 52","jump over method definition: set program counter to 52"],
    ["Frame append(s, e)","start of method append"],
    ["DelVar result","delete method variable result"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar e","push the value of e"],
    ["DelVar e","delete method variable e"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 52","jump over method definition: set program counter to 52"],
    ["Frame head(s)","start of method head"],
    ["DelVar result","delete method variable result"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Push 0","push constant 0"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Push PC(55)","push constant PC(55)"],
    ["Builtin(list$tail)","top of stack is a built-in operation called list$tail"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame tail(s)","start of method tail"],
    ["DelVar result","delete method variable result"],
    ["Push PC(2)","push constant PC(2)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar s","push the value of s"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Push 1","push constant 1"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["1-ary len","pop 1 value and push the result of applying len"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame sum(a)","start of method sum"],
    ["DelVar result","delete method variable result"],
    ["Push 0","push constant 0"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar a","push the value of a"],
    ["DelVar a","delete method variable a"],
    ["Push 0","push constant 0"],
    ["Cut(v)","get next element and assign to v; push False or True depending on success"],
    ["JumpCond False 87","check if loop is done: pop a value and jump to 87 if the value is False"],
    ["LoadVar result","push the value of result"],
    ["DelVar result","delete method variable result"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 78","set program counter to 78"],
    ["DelVar v","delete method variable v"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame set(a)","start of method set"],
    ["DelVar result","delete method variable result"],
    ["Push {}","initialize accumulator for set comprehension: push constant {}"],
    ["StoreVar $accu71","initialize accumulator for set comprehension: pop a value and store in $accu71"],
    ["LoadVar a","push the value of a"],
    ["DelVar a","delete method variable a"],
    ["Push 0","push constant 0"],
    ["Cut(v)","get next element and assign to v; push False or True depending on success"],
    ["JumpCond False 106","check if loop is done: pop a value and jump to 106 if the value is False"],
    ["LoadVar $accu71","load accumulator: push the value of $accu71"],
    ["DelVar $accu71","delete method variable $accu71"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["StoreVar $accu71","update accumulator: pop a value and store in $accu71"],
    ["Jump 97","set program counter to 97"],
    ["DelVar v","delete method variable v"],
    ["LoadVar $accu71","load final accumulator result: push the value of $accu71"],
    ["DelVar $accu71","delete method variable $accu71"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame list(a)","start of method list"],
    ["DelVar result","delete method variable result"],
    ["Push ()","initialize accumulator for list comprehension: push constant ()"],
    ["StoreVar $accu87","initialize accumulator for list comprehension: pop a value and store in $accu87"],
    ["LoadVar a","push the value of a"],
    ["DelVar a","delete method variable a"],
    ["Push 0","push constant 0"],
    ["Cut(v)","get next element and assign to v; push False or True depending on success"],
    ["JumpCond False 128","check if loop is done: pop a value and jump to 128 if the value is False"],
    ["LoadVar $accu87","load accumulator: push the value of $accu87"],
    ["DelVar $accu87","delete method variable $accu87"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["StoreVar $accu87","update accumulator: pop a value and store in $accu87"],
    ["Jump 119","set program counter to 119"],
    ["DelVar v","delete method variable v"],
    ["LoadVar $accu87","load final accumulator result: push the value of $accu87"],
    ["DelVar $accu87","delete method variable $accu87"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame values(d)","start of method values"],
    ["DelVar result","delete method variable result"],
    ["Push ()","initialize accumulator for list comprehension: push constant ()"],
    ["StoreVar $accu103","initialize accumulator for list comprehension: pop a value and store in $accu103"],
    ["LoadVar d","push the value of d"],
    ["DelVar d","delete method variable d"],
    ["Push 0","push constant 0"],
    ["Cut(_, v)","get next element and assign to _:v; push False or True depending on success"],
    ["DelVar _","delete method variable _"],
    ["JumpCond False 151","check if loop is done: pop a value and jump to 151 if the value is False"],
    ["LoadVar $accu103","load accumulator: push the value of $accu103"],
    ["DelVar $accu103","delete method variable $accu103"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["StoreVar $accu103","update accumulator: pop a value and store in $accu103"],
    ["Jump 141","set program counter to 141"],
    ["DelVar v","delete method variable v"],
    ["LoadVar $accu103","load final accumulator result: push the value of $accu103"],
    ["DelVar $accu103","delete method variable $accu103"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame items(d)","start of method items"],
    ["DelVar result","delete method variable result"],
    ["Push ()","initialize accumulator for list comprehension: push constant ()"],
    ["StoreVar $accu119","initialize accumulator for list comprehension: pop a value and store in $accu119"],
    ["LoadVar d","push the value of d"],
    ["DelVar d","delete method variable d"],
    ["Push 0","push constant 0"],
    ["Cut(k, v)","get next element and assign to k:v; push False or True depending on success"],
    ["JumpCond False 178","check if loop is done: pop a value and jump to 178 if the value is False"],
    ["LoadVar $accu119","load accumulator: push the value of $accu119"],
    ["DelVar $accu119","delete method variable $accu119"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar k","push the value of k"],
    ["DelVar k","delete method variable k"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["StoreVar $accu119","update accumulator: pop a value and store in $accu119"],
    ["Jump 164","set program counter to 164"],
    ["DelVar k","delete method variable k"],
    ["DelVar v","delete method variable v"],
    ["LoadVar $accu119","load final accumulator result: push the value of $accu119"],
    ["DelVar $accu119","delete method variable $accu119"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame qsort(a)","start of method qsort"],
    ["DelVar result","delete method variable result"],
    ["LoadVar a","push the value of a"],
    ["Push ()","push constant ()"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 195","pop a value and jump to 195 if the value is False"],
    ["DelVar a","delete method variable a"],
    ["Push ()","push constant ()"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 265","set program counter to 265"],
    ["Push ()","building a tuple: push constant ()"],
    ["Push PC(44)","push constant PC(44)"],
    ["LoadVar a","push the value of a"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Push PC(55)","push constant PC(55)"],
    ["LoadVar a","push the value of a"],
    ["DelVar a","delete method variable a"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["StoreVar (pivot, rest)","pop a value and store in (pivot, rest)"],
    ["Push ()","initialize accumulator for list comprehension: push constant ()"],
    ["StoreVar $accu156","initialize accumulator for list comprehension: pop a value and store in $accu156"],
    ["LoadVar rest","push the value of rest"],
    ["Push 0","push constant 0"],
    ["DelVar v","delete method variable v"],
    ["Cut(v)","get next element and assign to v; push False or True depending on success"],
    ["JumpCond False 224","check if loop is done: pop a value and jump to 224 if the value is False"],
    ["LoadVar v","push the value of v"],
    ["LoadVar pivot","push the value of pivot"],
    ["2-ary <","pop 2 values and push the result of applying <"],
    ["JumpCond False 210","pop a value and jump to 210 if the value is False"],
    ["LoadVar $accu156","load accumulator: push the value of $accu156"],
    ["DelVar $accu156","delete method variable $accu156"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["StoreVar $accu156","update accumulator: pop a value and store in $accu156"],
    ["Jump 210","set program counter to 210"],
    ["DelVar v","delete method variable v"],
    ["LoadVar $accu156","load final accumulator result: push the value of $accu156"],
    ["DelVar $accu156","delete method variable $accu156"],
    ["StoreVar lower","pop a value and store in lower"],
    ["Push ()","initialize accumulator for list comprehension: push constant ()"],
    ["StoreVar $accu173","initialize accumulator for list comprehension: pop a value and store in $accu173"],
    ["LoadVar rest","push the value of rest"],
    ["DelVar rest","delete method variable rest"],
    ["Push 0","push constant 0"],
    ["DelVar v","delete method variable v"],
    ["Cut(v)","get next element and assign to v; push False or True depending on success"],
    ["JumpCond False 247","check if loop is done: pop a value and jump to 247 if the value is False"],
    ["LoadVar v","push the value of v"],
    ["LoadVar pivot","push the value of pivot"],
    ["2-ary >=","pop 2 values and push the result of applying >="],
    ["JumpCond False 233","pop a value and jump to 233 if the value is False"],
    ["LoadVar $accu173","load accumulator: push the value of $accu173"],
    ["DelVar $accu173","delete method variable $accu173"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["StoreVar $accu173","update accumulator: pop a value and store in $accu173"],
    ["Jump 233","set program counter to 233"],
    ["DelVar v","delete method variable v"],
    ["LoadVar $accu173","load final accumulator result: push the value of $accu173"],
    ["DelVar $accu173","delete method variable $accu173"],
    ["StoreVar higher","pop a value and store in higher"],
    ["Push PC(185)","push constant PC(185)"],
    ["LoadVar lower","push the value of lower"],
    ["DelVar lower","delete method variable lower"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar pivot","push the value of pivot"],
    ["DelVar pivot","delete method variable pivot"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Push PC(185)","push constant PC(185)"],
    ["LoadVar higher","push the value of higher"],
    ["DelVar higher","delete method variable higher"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary +","pop 3 values and push the result of applying +"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame sorted(d)","start of method sorted"],
    ["DelVar result","delete method variable result"],
    ["Push PC(185)","push constant PC(185)"],
    ["Push PC(112)","push constant PC(112)"],
    ["LoadVar d","push the value of d"],
    ["DelVar d","delete method variable d"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame reversed(d)","start of method reversed"],
    ["DelVar result","delete method variable result"],
    ["LoadVar d","push the value of d"],
    ["1-ary len","pop 1 value and push the result of applying len"],
    ["StoreVar n","pop a value and store in n"],
    ["Push ()","initialize accumulator for list comprehension: push constant ()"],
    ["StoreVar $accu216","initialize accumulator for list comprehension: pop a value and store in $accu216"],
    ["Push 1","push constant 1"],
    ["LoadVar n","push the value of n"],
    ["2-ary ..","pop 2 values and push the result of applying .."],
    ["Push 0","push constant 0"],
    ["Cut(i)","get next element and assign to i; push False or True depending on success"],
    ["JumpCond False 302","check if loop is done: pop a value and jump to 302 if the value is False"],
    ["LoadVar $accu216","load accumulator: push the value of $accu216"],
    ["DelVar $accu216","delete method variable $accu216"],
    ["LoadVar d","push the value of d"],
    ["LoadVar n","push the value of n"],
    ["LoadVar i","push the value of i"],
    ["DelVar i","delete method variable i"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["StoreVar $accu216","update accumulator: pop a value and store in $accu216"],
    ["Jump 289","set program counter to 289"],
    ["DelVar d","delete method variable d"],
    ["DelVar i","delete method variable i"],
    ["DelVar n","delete method variable n"],
    ["LoadVar $accu216","load final accumulator result: push the value of $accu216"],
    ["DelVar $accu216","delete method variable $accu216"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame empty()","start of method empty"],
    ["DelVar result","delete method variable result"],
    ["Push {:}","push constant {:}"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame fromSet(s)","start of method fromSet"],
    ["DelVar result","delete method variable result"],
    ["Push {:}","initialize accumulator for dict comprehension: push constant {:}"],
    ["StoreVar $accu243","initialize accumulator for dict comprehension: pop a value and store in $accu243"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Push 0","push constant 0"],
    ["Cut(elt)","get next element and assign to elt; push False or True depending on success"],
    ["JumpCond False 333","check if loop is done: pop a value and jump to 333 if the value is False"],
    ["LoadVar $accu243","load accumulator: push the value of $accu243"],
    ["DelVar $accu243","delete method variable $accu243"],
    ["LoadVar elt","push the value of elt"],
    ["DelVar elt","delete method variable elt"],
    ["Push 1","push constant 1"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["StoreVar $accu243","update accumulator: pop a value and store in $accu243"],
    ["Jump 323","set program counter to 323"],
    ["DelVar elt","delete method variable elt"],
    ["LoadVar $accu243","load final accumulator result: push the value of $accu243"],
    ["DelVar $accu243","delete method variable $accu243"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","jump over method definition: set program counter to 371"],
    ["Frame fromList(a)","start of method fromList"],
    ["DelVar result","delete method variable result"],
    ["Push {:}","push constant {:}"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar a","push the value of a"],
    ["DelVar a","delete method variable a"],
    ["Push 0","push constant 0"],
    ["Cut(v)","get next element and assign to v; push False or True depending on success"],
    ["JumpCond False 369","check if loop is done: pop a value and jump to 369 if the value is False"],
    ["LoadVar v","push the value of v"],
    ["LoadVar result","push the value of result"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["JumpCond False 362","pop a value and jump to 362 if the value is False"],
    ["Push ?result","push constant ?result"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["LoadVar [result]","pop the address of a method variable and push the value of that variable"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar [result]","pop a value and the address of a method variable and store the value at that address"],
    ["Jump 346","set program counter to 346"],
    ["Push ?result","push constant ?result"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push 1","push constant 1"],
    ["StoreVar [result]","pop a value and the address of a method variable and store the value at that address"],
    ["Jump 346","set program counter to 346"],
    ["DelVar v","delete method variable v"],
    ["Return","restore caller method state and push result"],
    ["Push PC(374)","push constant PC(374)"],
    ["Builtin(bag$multiplicity)","top of stack is a built-in operation called bag$multiplicity"],
    ["Jump 392","jump over method definition: set program counter to 392"],
    ["Frame multiplicity(bg, elt)","start of method multiplicity"],
    ["DelVar result","delete method variable result"],
    ["LoadVar elt","push the value of elt"],
    ["LoadVar bg","push the value of bg"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["JumpCond False 387","pop a value and jump to 387 if the value is False"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["LoadVar elt","push the value of elt"],
    ["DelVar elt","delete method variable elt"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 391","set program counter to 391"],
    ["DelVar bg","delete method variable bg"],
    ["DelVar elt","delete method variable elt"],
    ["Push 0","push constant 0"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Push PC(395)","push constant PC(395)"],
    ["Builtin(bag$size)","top of stack is a built-in operation called bag$size"],
    ["Jump 414","jump over method definition: set program counter to 414"],
    ["Frame size(bg)","start of method size"],
    ["DelVar result","delete method variable result"],
    ["Push 0","push constant 0"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["Push 0","push constant 0"],
    ["Cut(_, c)","get next element and assign to _:c; push False or True depending on success"],
    ["DelVar _","delete method variable _"],
    ["JumpCond False 412","check if loop is done: pop a value and jump to 412 if the value is False"],
    ["LoadVar result","push the value of result"],
    ["DelVar result","delete method variable result"],
    ["LoadVar c","push the value of c"],
    ["DelVar c","delete method variable c"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 402","set program counter to 402"],
    ["DelVar c","delete method variable c"],
    ["Return","restore caller method state and push result"],
    ["Push PC(417)","push constant PC(417)"],
    ["Builtin(bag$bmin)","top of stack is a built-in operation called bag$bmin"],
    ["Jump 433","jump over method definition: set program counter to 433"],
    ["Frame bmin(bg)","start of method bmin"],
    ["DelVar result","delete method variable result"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar bg","push the value of bg"],
    ["Push {:}","push constant {:}"],
    ["2-ary !=","pop 2 values and push the result of applying !="],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["1-ary min","pop 1 value and push the result of applying min"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Push PC(436)","push constant PC(436)"],
    ["Builtin(bag$bmax)","top of stack is a built-in operation called bag$bmax"],
    ["Jump 461","jump over method definition: set program counter to 461"],
    ["Frame bmax(bg)","start of method bmax"],
    ["DelVar result","delete method variable result"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar bg","push the value of bg"],
    ["Push {:}","push constant {:}"],
    ["2-ary !=","pop 2 values and push the result of applying !="],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["1-ary max","pop 1 value and push the result of applying max"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 461","jump over method definition: set program counter to 461"],
    ["Frame bchoose(bg)","start of method bchoose"],
    ["DelVar result","delete method variable result"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["Choose","pop a set value and push one of its elements"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Push PC(464)","push constant PC(464)"],
    ["Builtin(bag$add)","top of stack is a built-in operation called bag$add"],
    ["Jump 490","jump over method definition: set program counter to 490"],
    ["Frame add(bg, elt)","start of method add"],
    ["DelVar result","delete method variable result"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar elt","push the value of elt"],
    ["LoadVar result","push the value of result"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["JumpCond False 483","pop a value and jump to 483 if the value is False"],
    ["Push ?result","push constant ?result"],
    ["LoadVar elt","push the value of elt"],
    ["DelVar elt","delete method variable elt"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["LoadVar [result]","pop the address of a method variable and push the value of that variable"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar [result]","pop a value and the address of a method variable and store the value at that address"],
    ["Jump 489","set program counter to 489"],
    ["Push ?result","push constant ?result"],
    ["LoadVar elt","push the value of elt"],
    ["DelVar elt","delete method variable elt"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push 1","push constant 1"],
    ["StoreVar [result]","pop a value and the address of a method variable and store the value at that address"],
    ["Return","restore caller method state and push result"],
    ["Push PC(493)","push constant PC(493)"],
    ["Builtin(bag$remove)","top of stack is a built-in operation called bag$remove"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame remove(bg, elt)","start of method remove"],
    ["DelVar result","delete method variable result"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar elt","push the value of elt"],
    ["LoadVar result","push the value of result"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["JumpCond False 510","pop a value and jump to 510 if the value is False"],
    ["Push ?result","push constant ?result"],
    ["LoadVar elt","push the value of elt"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["LoadVar [result]","pop the address of a method variable and push the value of that variable"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["StoreVar [result]","pop a value and the address of a method variable and store the value at that address"],
    ["LoadVar result","push the value of result"],
    ["LoadVar elt","push the value of elt"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Push 0","push constant 0"],
    ["2-ary <=","pop 2 values and push the result of applying <="],
    ["JumpCond False 521","pop a value and jump to 521 if the value is False"],
    ["Push ?result","push constant ?result"],
    ["LoadVar elt","push the value of elt"],
    ["DelVar elt","delete method variable elt"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["DelVar [result]","pop an address of a method variable and delete that variable"],
    ["DelVar elt","delete method variable elt"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame combinations(bg, k)","start of method combinations"],
    ["DelVar result","delete method variable result"],
    ["LoadVar k","push the value of k"],
    ["Push 0","push constant 0"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 535","pop a value and jump to 535 if the value is False"],
    ["DelVar bg","delete method variable bg"],
    ["DelVar k","delete method variable k"],
    ["Push { {:} }","push constant { {:} }"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 616","set program counter to 616"],
    ["Push PC(395)","push constant PC(395)"],
    ["LoadVar bg","push the value of bg"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar n","pop a value and store in n"],
    ["LoadVar k","push the value of k"],
    ["LoadVar n","push the value of n"],
    ["2-ary >","pop 2 values and push the result of applying >"],
    ["JumpCond False 549","pop a value and jump to 549 if the value is False"],
    ["DelVar bg","delete method variable bg"],
    ["DelVar k","delete method variable k"],
    ["DelVar n","delete method variable n"],
    ["Push {}","push constant {}"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 616","set program counter to 616"],
    ["LoadVar k","push the value of k"],
    ["LoadVar n","push the value of n"],
    ["DelVar n","delete method variable n"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 561","pop a value and jump to 561 if the value is False"],
    ["DelVar k","delete method variable k"],
    ["Push {}","push constant {}"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 616","set program counter to 616"],
    ["Push PC(417)","push constant PC(417)"],
    ["LoadVar bg","push the value of bg"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar hd","pop a value and store in hd"],
    ["Push PC(493)","push constant PC(493)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar hd","push the value of hd"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar tl","pop a value and store in tl"],
    ["Push {}","initialize accumulator for set comprehension: push constant {}"],
    ["StoreVar $accu454","initialize accumulator for set comprehension: pop a value and store in $accu454"],
    ["Push PC(524)","push constant PC(524)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar tl","push the value of tl"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar k","push the value of k"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Push 0","push constant 0"],
    ["Cut(x)","get next element and assign to x; push False or True depending on success"],
    ["JumpCond False 601","check if loop is done: pop a value and jump to 601 if the value is False"],
    ["LoadVar $accu454","load accumulator: push the value of $accu454"],
    ["DelVar $accu454","delete method variable $accu454"],
    ["Push PC(464)","push constant PC(464)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar x","push the value of x"],
    ["DelVar x","delete method variable x"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar hd","push the value of hd"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["StoreVar $accu454","update accumulator: pop a value and store in $accu454"],
    ["Jump 586","set program counter to 586"],
    ["DelVar hd","delete method variable hd"],
    ["DelVar x","delete method variable x"],
    ["LoadVar $accu454","load final accumulator result: push the value of $accu454"],
    ["DelVar $accu454","delete method variable $accu454"],
    ["Push PC(524)","push constant PC(524)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar tl","push the value of tl"],
    ["DelVar tl","delete method variable tl"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar k","push the value of k"],
    ["DelVar k","delete method variable k"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary |","pop 2 values and push the result of applying |"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame atomic_load(p)","start of method atomic_load"],
    ["DelVar result","delete method variable result"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar p","push the value of p"],
    ["DelVar p","delete method variable p"],
    ["Load","pop an address and push the value at the address"],
    ["StoreVar result","pop a value and store in result"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame atomic_store(p, v)","start of method atomic_store"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar p","push the value of p"],
    ["DelVar p","delete method variable p"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame tas(lk)","start of method tas"],
    ["DelVar result","delete method variable result"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar lk","push the value of lk"],
    ["Load","pop an address and push the value at the address"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar lk","push the value of lk"],
    ["DelVar lk","delete method variable lk"],
    ["Push True","push constant True"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame cas(p, old, new)","start of method cas"],
    ["DelVar result","delete method variable result"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar p","push the value of p"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar old","push the value of old"],
    ["DelVar old","delete method variable old"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar result","push the value of result"],
    ["JumpCond False 667","pop a value and jump to 667 if the value is False"],
    ["LoadVar p","push the value of p"],
    ["DelVar p","delete method variable p"],
    ["LoadVar new","push the value of new"],
    ["DelVar new","delete method variable new"],
    ["Store","pop a value and an address and store the value at the address"],
    ["DelVar new","delete method variable new"],
    ["DelVar p","delete method variable p"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame BinSema(acquired)","start of method BinSema"],
    ["DelVar result","delete method variable result"],
    ["LoadVar acquired","push the value of acquired"],
    ["DelVar acquired","delete method variable acquired"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame Lock()","start of method Lock"],
    ["DelVar result","delete method variable result"],
    ["Push PC(672)","push constant PC(672)"],
    ["Push False","push constant False"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame acquired(binsema)","start of method acquired"],
    ["DelVar result","delete method variable result"],
    ["LoadVar binsema","push the value of binsema"],
    ["DelVar binsema","delete method variable binsema"],
    ["Load","pop an address and push the value at the address"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame acquire(binsema)","start of method acquire"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["LoadVar binsema","push the value of binsema"],
    ["Load","pop an address and push the value at the address"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["JumpCond False 703","pop a value and jump to 703 if the value is False"],
    ["Jump 706","set program counter to 706"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Jump 696","set program counter to 696"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar binsema","push the value of binsema"],
    ["DelVar binsema","delete method variable binsema"],
    ["Push True","push constant True"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame release(binsema)","start of method release"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar binsema","push the value of binsema"],
    ["Load","pop an address and push the value at the address"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar binsema","push the value of binsema"],
    ["DelVar binsema","delete method variable binsema"],
    ["Push False","push constant False"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame held(binsema)","start of method held"],
    ["DelVar result","delete method variable result"],
    ["LoadVar binsema","push the value of binsema"],
    ["DelVar binsema","delete method variable binsema"],
    ["Load","pop an address and push the value at the address"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame Condition()","start of method Condition"],
    ["DelVar result","delete method variable result"],
    ["Push PC(310)","push constant PC(310)"],
    ["Push ()","push constant ()"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame wait(c, lk)","start of method wait"],
    ["Push 0","push constant 0"],
    ["StoreVar cnt","pop a value and store in cnt"],
    ["DelVar cnt","delete method variable cnt"],
    ["Push ()","push constant ()"],
    ["Save","pop a value and save context"],
    ["Continue","a no-op, must follow a Stop operation"],
    ["StoreVar ((), ctx)","pop a value and store in ((), ctx)"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push PC(374)","push constant PC(374)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar c","push the value of c"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar ctx","push the value of ctx"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar cnt","pop a value and store in cnt"],
    ["LoadVar c","push the value of c"],
    ["Push PC(464)","push constant PC(464)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar c","push the value of c"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar ctx","push the value of ctx"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar lk","push the value of lk"],
    ["Push False","push constant False"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["LoadVar lk","push the value of lk"],
    ["Load","pop an address and push the value at the address"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["JumpCond False 795","pop a value and jump to 795 if the value is False"],
    ["Push PC(374)","push constant PC(374)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar c","push the value of c"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar ctx","push the value of ctx"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["LoadVar cnt","push the value of cnt"],
    ["2-ary <=","pop 2 values and push the result of applying <="],
    ["Jump 796","set program counter to 796"],
    ["Push False","push constant False"],
    ["JumpCond False 801","pop a value and jump to 801 if the value is False"],
    ["DelVar c","delete method variable c"],
    ["DelVar cnt","delete method variable cnt"],
    ["DelVar ctx","delete method variable ctx"],
    ["Jump 804","set program counter to 804"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Jump 778","set program counter to 778"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar lk","push the value of lk"],
    ["DelVar lk","delete method variable lk"],
    ["Push True","push constant True"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame notify(c)","start of method notify"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar c","push the value of c"],
    ["Load","pop an address and push the value at the address"],
    ["Push PC(310)","push constant PC(310)"],
    ["Push ()","push constant ()"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary !=","pop 2 values and push the result of applying !="],
    ["JumpCond False 835","pop a value and jump to 835 if the value is False"],
    ["LoadVar c","push the value of c"],
    ["Push PC(493)","push constant PC(493)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar c","push the value of c"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Push PC(453)","push constant PC(453)"],
    ["LoadVar c","push the value of c"],
    ["DelVar c","delete method variable c"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["DelVar c","delete method variable c"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame notifyAll(c)","start of method notifyAll"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar c","push the value of c"],
    ["DelVar c","delete method variable c"],
    ["Push PC(310)","push constant PC(310)"],
    ["Push ()","push constant ()"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame Semaphore(cnt)","start of method Semaphore"],
    ["DelVar result","delete method variable result"],
    ["LoadVar cnt","push the value of cnt"],
    ["DelVar cnt","delete method variable cnt"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame P(sema)","start of method P"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["LoadVar sema","push the value of sema"],
    ["Load","pop an address and push the value at the address"],
    ["Push 0","push constant 0"],
    ["2-ary >","pop 2 values and push the result of applying >"],
    ["JumpCond False 866","pop a value and jump to 866 if the value is False"],
    ["Jump 869","set program counter to 869"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Jump 858","set program counter to 858"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar sema","push the value of sema"],
    ["DelVar sema","delete method variable sema"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame V(sema)","start of method V"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar sema","push the value of sema"],
    ["DelVar sema","delete method variable sema"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame Queue()","start of method Queue"],
    ["DelVar result","delete method variable result"],
    ["Push ()","push constant ()"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame get(q)","start of method get"],
    ["DelVar result","delete method variable result"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["LoadVar q","push the value of q"],
    ["Load","pop an address and push the value at the address"],
    ["Push ()","push constant ()"],
    ["2-ary !=","pop 2 values and push the result of applying !="],
    ["JumpCond False 908","pop a value and jump to 908 if the value is False"],
    ["Jump 911","set program counter to 911"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Jump 899","set program counter to 899"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["Push PC(44)","push constant PC(44)"],
    ["LoadVar q","push the value of q"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar q","push the value of q"],
    ["Push PC(55)","push constant PC(55)"],
    ["LoadVar q","push the value of q"],
    ["DelVar q","delete method variable q"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame put(q, item)","start of method put"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar q","push the value of q"],
    ["Push PC(32)","push constant PC(32)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar q","push the value of q"],
    ["DelVar q","delete method variable q"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar item","push the value of item"],
    ["DelVar item","delete method variable item"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame Stack(l)","start of method Stack"],
    ["DelVar result","delete method variable result"],
    ["Push {:}","push constant {:}"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Push PC(672)","push constant PC(672)"],
    ["Push False","push constant False"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"push_gate\"","push constant \"push_gate\""],
    ["Push {:}","push constant {:}"],
    ["Push \"sema\"","push constant \"sema\""],
    ["Push PC(672)","push constant PC(672)"],
    ["Push True","push constant True"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"count\"","push constant \"count\""],
    ["Push 0","push constant 0"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"pop_gate\"","push constant \"pop_gate\""],
    ["Push {:}","push constant {:}"],
    ["Push \"sema\"","push constant \"sema\""],
    ["Push PC(672)","push constant PC(672)"],
    ["Push True","push constant True"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"count\"","push constant \"count\""],
    ["Push 0","push constant 0"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"validate_gate\"","push constant \"validate_gate\""],
    ["Push {:}","push constant {:}"],
    ["Push \"sema\"","push constant \"sema\""],
    ["Push PC(672)","push constant PC(672)"],
    ["Push True","push constant True"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"count\"","push constant \"count\""],
    ["Push 0","push constant 0"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"stack\"","push constant \"stack\""],
    ["Push ()","push constant ()"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"size\"","push constant \"size\""],
    ["Push 0","push constant 0"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"max_size\"","push constant \"max_size\""],
    ["LoadVar l","push the value of l"],
    ["DelVar l","delete method variable l"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"valid\"","push constant \"valid\""],
    ["Push 0","push constant 0"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"ever_negative\"","push constant \"ever_negative\""],
    ["Push False","push constant False"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"problem_index\"","push constant \"problem_index\""],
    ["Push -1","push constant -1"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame push(s, c)","start of method push"],
    ["Push PC(695)","push constant PC(695)"],
    ["LoadVar s","push the value of s"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["LoadVar s","push the value of s"],
    ["Push \"size\"","push constant \"size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"max_size\"","push constant \"max_size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary <","pop 2 values and push the result of applying <"],
    ["JumpCond True 1058","pop a value and jump to 1058 if the value is True"],
    ["LoadVar s","push the value of s"],
    ["Push \"push_gate\"","push constant \"push_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"count\"","push constant \"count\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Push PC(714)","push constant PC(714)"],
    ["LoadVar s","push the value of s"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Push PC(695)","push constant PC(695)"],
    ["LoadVar s","push the value of s"],
    ["Push \"push_gate\"","push constant \"push_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"sema\"","push constant \"sema\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["LoadVar s","push the value of s"],
    ["Push \"push_gate\"","push constant \"push_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"count\"","push constant \"count\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"stack\"","push constant \"stack\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push PC(32)","push constant PC(32)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar s","push the value of s"],
    ["Push \"stack\"","push constant \"stack\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar c","push the value of c"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"size\"","push constant \"size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar c","push the value of c"],
    ["Push \"(\"","push constant \"(\""],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 1094","pop a value and jump to 1094 if the value is False"],
    ["DelVar c","delete method variable c"],
    ["LoadVar s","push the value of s"],
    ["Push \"valid\"","push constant \"valid\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Jump 1107","set program counter to 1107"],
    ["LoadVar c","push the value of c"],
    ["DelVar c","delete method variable c"],
    ["Push \")\"","push constant \")\""],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 1107","pop a value and jump to 1107 if the value is False"],
    ["LoadVar s","push the value of s"],
    ["Push \"valid\"","push constant \"valid\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"valid\"","push constant \"valid\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Push 0","push constant 0"],
    ["2-ary <","pop 2 values and push the result of applying <"],
    ["JumpCond False 1120","pop a value and jump to 1120 if the value is False"],
    ["LoadVar s","push the value of s"],
    ["Push \"ever_negative\"","push constant \"ever_negative\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["Jump 1121","set program counter to 1121"],
    ["Push False","push constant False"],
    ["JumpCond False 1137","pop a value and jump to 1137 if the value is False"],
    ["LoadVar s","push the value of s"],
    ["Push \"ever_negative\"","push constant \"ever_negative\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push True","push constant True"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"problem_index\"","push constant \"problem_index\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["LoadVar s","push the value of s"],
    ["Push \"size\"","push constant \"size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Push PC(1349)","push constant PC(1349)"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame pop(s)","start of method pop"],
    ["DelVar result","delete method variable result"],
    ["Push PC(695)","push constant PC(695)"],
    ["LoadVar s","push the value of s"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["LoadVar s","push the value of s"],
    ["Push \"size\"","push constant \"size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Push 0","push constant 0"],
    ["2-ary >","pop 2 values and push the result of applying >"],
    ["JumpCond True 1193","pop a value and jump to 1193 if the value is True"],
    ["LoadVar s","push the value of s"],
    ["Push \"pop_gate\"","push constant \"pop_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"count\"","push constant \"count\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Push PC(714)","push constant PC(714)"],
    ["LoadVar s","push the value of s"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Push PC(695)","push constant PC(695)"],
    ["LoadVar s","push the value of s"],
    ["Push \"pop_gate\"","push constant \"pop_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"sema\"","push constant \"sema\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["LoadVar s","push the value of s"],
    ["Push \"pop_gate\"","push constant \"pop_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"count\"","push constant \"count\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Push PC(278)","push constant PC(278)"],
    ["LoadVar s","push the value of s"],
    ["Push \"stack\"","push constant \"stack\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar rev","pop a value and store in rev"],
    ["Push PC(44)","push constant PC(44)"],
    ["LoadVar rev","push the value of rev"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar s","push the value of s"],
    ["Push \"stack\"","push constant \"stack\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push PC(278)","push constant PC(278)"],
    ["Push PC(55)","push constant PC(55)"],
    ["LoadVar rev","push the value of rev"],
    ["DelVar rev","delete method variable rev"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"size\"","push constant \"size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar result","push the value of result"],
    ["Push \"(\"","push constant \"(\""],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 1235","pop a value and jump to 1235 if the value is False"],
    ["LoadVar s","push the value of s"],
    ["Push \"valid\"","push constant \"valid\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Jump 1247","set program counter to 1247"],
    ["LoadVar result","push the value of result"],
    ["Push \")\"","push constant \")\""],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 1247","pop a value and jump to 1247 if the value is False"],
    ["LoadVar s","push the value of s"],
    ["Push \"valid\"","push constant \"valid\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"size\"","push constant \"size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"problem_index\"","push constant \"problem_index\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 1267","pop a value and jump to 1267 if the value is False"],
    ["LoadVar s","push the value of s"],
    ["Push \"problem_index\"","push constant \"problem_index\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push -1","push constant -1"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"ever_negative\"","push constant \"ever_negative\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push False","push constant False"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Push PC(1349)","push constant PC(1349)"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame validate(s)","start of method validate"],
    ["DelVar result","delete method variable result"],
    ["Push PC(695)","push constant PC(695)"],
    ["LoadVar s","push the value of s"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["LoadVar s","push the value of s"],
    ["Push \"size\"","push constant \"size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"max_size\"","push constant \"max_size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond True 1326","pop a value and jump to 1326 if the value is True"],
    ["LoadVar s","push the value of s"],
    ["Push \"validate_gate\"","push constant \"validate_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"count\"","push constant \"count\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Push PC(714)","push constant PC(714)"],
    ["LoadVar s","push the value of s"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Push PC(695)","push constant PC(695)"],
    ["LoadVar s","push the value of s"],
    ["Push \"validate_gate\"","push constant \"validate_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"sema\"","push constant \"sema\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["LoadVar s","push the value of s"],
    ["Push \"validate_gate\"","push constant \"validate_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"count\"","push constant \"count\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"ever_negative\"","push constant \"ever_negative\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Push False","push constant False"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 1340","pop a value and jump to 1340 if the value is False"],
    ["LoadVar s","push the value of s"],
    ["Push \"valid\"","push constant \"valid\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Push 0","push constant 0"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["Jump 1341","set program counter to 1341"],
    ["Push False","push constant False"],
    ["StoreVar result","pop a value and store in result"],
    ["Push PC(1349)","push constant PC(1349)"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Return","restore caller method state and push result"],
    ["Jump 1448","jump over method definition: set program counter to 1448"],
    ["Frame release_one(s)","start of method release_one"],
    ["LoadVar s","push the value of s"],
    ["Push \"size\"","push constant \"size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"max_size\"","push constant \"max_size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary !=","pop 2 values and push the result of applying !="],
    ["JumpCond False 1369","pop a value and jump to 1369 if the value is False"],
    ["LoadVar s","push the value of s"],
    ["Push \"push_gate\"","push constant \"push_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"count\"","push constant \"count\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Push 0","push constant 0"],
    ["2-ary >","pop 2 values and push the result of applying >"],
    ["Jump 1370","set program counter to 1370"],
    ["Push False","push constant False"],
    ["JumpCond False 1381","pop a value and jump to 1381 if the value is False"],
    ["Push PC(714)","push constant PC(714)"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Push \"push_gate\"","push constant \"push_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"sema\"","push constant \"sema\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Jump 1447","set program counter to 1447"],
    ["LoadVar s","push the value of s"],
    ["Push \"size\"","push constant \"size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Push 0","push constant 0"],
    ["2-ary !=","pop 2 values and push the result of applying !="],
    ["JumpCond False 1397","pop a value and jump to 1397 if the value is False"],
    ["LoadVar s","push the value of s"],
    ["Push \"pop_gate\"","push constant \"pop_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"count\"","push constant \"count\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Push 0","push constant 0"],
    ["2-ary >","pop 2 values and push the result of applying >"],
    ["Jump 1398","set program counter to 1398"],
    ["Push False","push constant False"],
    ["JumpCond False 1409","pop a value and jump to 1409 if the value is False"],
    ["Push PC(714)","push constant PC(714)"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Push \"pop_gate\"","push constant \"pop_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"sema\"","push constant \"sema\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Jump 1447","set program counter to 1447"],
    ["LoadVar s","push the value of s"],
    ["Push \"size\"","push constant \"size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar s","push the value of s"],
    ["Push \"max_size\"","push constant \"max_size\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 1428","pop a value and jump to 1428 if the value is False"],
    ["LoadVar s","push the value of s"],
    ["Push \"validate_gate\"","push constant \"validate_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"count\"","push constant \"count\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Push 0","push constant 0"],
    ["2-ary >","pop 2 values and push the result of applying >"],
    ["Jump 1429","set program counter to 1429"],
    ["Push False","push constant False"],
    ["JumpCond False 1440","pop a value and jump to 1440 if the value is False"],
    ["Push PC(714)","push constant PC(714)"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Push \"validate_gate\"","push constant \"validate_gate\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"sema\"","push constant \"sema\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Jump 1447","set program counter to 1447"],
    ["Push PC(714)","push constant PC(714)"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Return","restore caller method state and push result"],
    ["Push PC(944)","push constant PC(944)"],
    ["Push 2","push constant 2"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store s","pop a value and store it in shared variable s"],
    ["Jump 1518","jump over method definition: set program counter to 1518"],
    ["Frame push_test(self, char)","start of method push_test"],
    ["Push ()","building a tuple: push constant ()"],
    ["Push \"call push\"","push constant \"call push\""],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar self","push the value of self"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar char","push the value of char"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Print","pop a value and add to print history"],
    ["Push PC(1007)","push constant PC(1007)"],
    ["Push ()","building a tuple: push constant ()"],
    ["Push ?s","push constant ?s"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar char","push the value of char"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Push ()","building a tuple: push constant ()"],
    ["Push \"done push\"","push constant \"done push\""],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar self","push the value of self"],
    ["DelVar self","delete method variable self"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar char","push the value of char"],
    ["DelVar char","delete method variable char"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Print","pop a value and add to print history"],
    ["Return","restore caller method state and push result"],
    ["Jump 1518","jump over method definition: set program counter to 1518"],
    ["Frame pop_test(self)","start of method pop_test"],
    ["Push ()","building a tuple: push constant ()"],
    ["Push \"call pop\"","push constant \"call pop\""],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar self","push the value of self"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Print","pop a value and add to print history"],
    ["Push PC(1144)","push constant PC(1144)"],
    ["Push ?s","push constant ?s"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar v","pop a value and store in v"],
    ["Push ()","building a tuple: push constant ()"],
    ["Push \"done pop\"","push constant \"done pop\""],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar self","push the value of self"],
    ["DelVar self","delete method variable self"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Print","pop a value and add to print history"],
    ["Return","restore caller method state and push result"],
    ["Jump 1518","jump over method definition: set program counter to 1518"],
    ["Frame validate_test()","start of method validate_test"],
    ["Push \"call validate\"","push constant \"call validate\""],
    ["Print","pop a value and add to print history"],
    ["Push PC(1274)","push constant PC(1274)"],
    ["Push ?s","push constant ?s"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["JumpCond False 1515","pop a value and jump to 1515 if the value is False"],
    ["Push \"hooray :)\"","push constant \"hooray :)\""],
    ["Print","pop a value and add to print history"],
    ["Jump 1517","set program counter to 1517"],
    ["Push \"boo :(\"","push constant \"boo :(\""],
    ["Print","pop a value and add to print history"],
    ["Return","restore caller method state and push result"],
    ["Push { 1, 2 }","push constant { 1, 2 }"],
    ["Push 0","push constant 0"],
    ["Cut(i)","get next element and assign to i; push False or True depending on success"],
    ["JumpCond False 1532","check if loop is done: pop a value and jump to 1532 if the value is False"],
    ["Push PC(1453)","push constant PC(1453)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar i","push the value of i"],
    ["DelVar i","delete method variable i"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Push \"(\"","push constant \"(\""],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Push {:}","push constant {:}"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Jump 1520","set program counter to 1520"],
    ["DelVar i","delete method variable i"],
    ["Push { 1 }","push constant { 1 }"],
    ["Push 0","push constant 0"],
    ["Cut(i)","get next element and assign to i; push False or True depending on success"],
    ["JumpCond False 1547","check if loop is done: pop a value and jump to 1547 if the value is False"],
    ["Push PC(1453)","push constant PC(1453)"],
    ["Push ()","building a tuple: push constant ()"],
    ["LoadVar i","push the value of i"],
    ["DelVar i","delete method variable i"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Push \")\"","push constant \")\""],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Push {:}","push constant {:}"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Jump 1535","set program counter to 1535"],
    ["DelVar i","delete method variable i"],
    ["Push { 1 }","push constant { 1 }"],
    ["Push 0","push constant 0"],
    ["Cut(i)","get next element and assign to i; push False or True depending on success"],
    ["JumpCond False 1558","check if loop is done: pop a value and jump to 1558 if the value is False"],
    ["Push PC(1482)","push constant PC(1482)"],
    ["LoadVar i","push the value of i"],
    ["DelVar i","delete method variable i"],
    ["Push {:}","push constant {:}"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Jump 1550","set program counter to 1550"],
    ["DelVar i","delete method variable i"],
    ["Push PC(1505)","push constant PC(1505)"],
    ["Push ()","push constant ()"],
    ["Push {:}","push constant {:}"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Return","restore caller method state and push result"],
    ["DelVar result","delete method variable result"]
  ],
  "locations": {
    "0": { "file": "stacktest.hny", "line": 1, "column": 1, "endline": 33, "endcolumn": 28, "stmt": [1,1,33,28], "code": "import stack" },
    "1": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 2, "column": 1, "endline": 2, "endcolumn": 3, "stmt": [2,1,2,20], "code": "def subseq(s, b, e):" },
    "2": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 2, "column": 1, "endline": 2, "endcolumn": 20, "stmt": [2,1,2,20], "code": "def subseq(s, b, e):" },
    "3": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "4": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "5": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "6": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 31, "endline": 3, "endcolumn": 31, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "7": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 31, "endline": 3, "endcolumn": 31, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "8": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 34, "endline": 3, "endcolumn": 34, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "9": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 34, "endline": 3, "endcolumn": 34, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "10": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 36, "endline": 3, "endcolumn": 36, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "11": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 34, "endline": 3, "endcolumn": 36, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "12": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 31, "endline": 3, "endcolumn": 36, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "13": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 16, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "14": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 16, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "15": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 16, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "16": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "17": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "18": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 16, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "19": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 18, "endline": 3, "endcolumn": 18, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "20": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 18, "endline": 3, "endcolumn": 18, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "21": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 19, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "22": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "23": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "24": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 37, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "25": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "26": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "27": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "28": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 16, "endline": 3, "endcolumn": 37, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "29": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 3, "column": 5, "endline": 3, "endcolumn": 12, "stmt": [3,5,3,39], "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "30": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 2, "column": 1, "endline": 2, "endcolumn": 20, "stmt": [2,1,2,20], "code": "def subseq(s, b, e):" },
    "31": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 5, "column": 1, "endline": 5, "endcolumn": 3, "stmt": [5,1,5,17], "code": "def append(s, e):" },
    "32": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 5, "column": 1, "endline": 5, "endcolumn": 17, "stmt": [5,1,5,17], "code": "def append(s, e):" },
    "33": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 6, "column": 14, "endline": 6, "endcolumn": 14, "stmt": [6,5,6,21], "code": "    result = s + [e,]" },
    "34": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 6, "column": 14, "endline": 6, "endcolumn": 14, "stmt": [6,5,6,21], "code": "    result = s + [e,]" },
    "35": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 6, "column": 14, "endline": 6, "endcolumn": 14, "stmt": [6,5,6,21], "code": "    result = s + [e,]" },
    "36": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 6, "column": 19, "endline": 6, "endcolumn": 20, "stmt": [6,5,6,21], "code": "    result = s + [e,]" },
    "37": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 6, "column": 19, "endline": 6, "endcolumn": 19, "stmt": [6,5,6,21], "code": "    result = s + [e,]" },
    "38": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 6, "column": 19, "endline": 6, "endcolumn": 19, "stmt": [6,5,6,21], "code": "    result = s + [e,]" },
    "39": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 6, "column": 19, "endline": 6, "endcolumn": 20, "stmt": [6,5,6,21], "code": "    result = s + [e,]" },
    "40": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 6, "column": 14, "endline": 6, "endcolumn": 21, "stmt": [6,5,6,21], "code": "    result = s + [e,]" },
    "41": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 6, "column": 5, "endline": 6, "endcolumn": 12, "stmt": [6,5,6,21], "code": "    result = s + [e,]" },
    "42": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 5, "column": 1, "endline": 5, "endcolumn": 17, "stmt": [5,1,5,17], "code": "def append(s, e):" },
    "43": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 8, "column": 1, "endline": 8, "endcolumn": 3, "stmt": [8,1,8,12], "code": "def head(s):" },
    "44": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 8, "column": 1, "endline": 8, "endcolumn": 12, "stmt": [8,1,8,12], "code": "def head(s):" },
    "45": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 9, "column": 14, "endline": 9, "endcolumn": 14, "stmt": [9,5,9,17], "code": "    result = s[0]" },
    "46": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 9, "column": 14, "endline": 9, "endcolumn": 14, "stmt": [9,5,9,17], "code": "    result = s[0]" },
    "47": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 9, "column": 14, "endline": 9, "endcolumn": 14, "stmt": [9,5,9,17], "code": "    result = s[0]" },
    "48": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 9, "column": 16, "endline": 9, "endcolumn": 16, "stmt": [9,5,9,17], "code": "    result = s[0]" },
    "49": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 9, "column": 14, "endline": 9, "endcolumn": 17, "stmt": [9,5,9,17], "code": "    result = s[0]" },
    "50": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 9, "column": 5, "endline": 9, "endcolumn": 12, "stmt": [9,5,9,17], "code": "    result = s[0]" },
    "51": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 8, "column": 1, "endline": 8, "endcolumn": 12, "stmt": [8,1,8,12], "code": "def head(s):" },
    "52": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 11, "column": 9, "endline": 11, "endcolumn": 12, "stmt": [11,1,11,24], "code": "builtin tail \"list$tail\"" },
    "53": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 11, "column": 1, "endline": 11, "endcolumn": 24, "stmt": [11,1,11,24], "code": "builtin tail \"list$tail\"" },
    "54": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 12, "column": 1, "endline": 12, "endcolumn": 3, "stmt": [12,1,12,12], "code": "def tail(s):" },
    "55": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 12, "column": 1, "endline": 12, "endcolumn": 12, "stmt": [12,1,12,12], "code": "def tail(s):" },
    "56": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 14, "endline": 13, "endcolumn": 19, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "57": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 14, "endline": 13, "endcolumn": 19, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "58": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 21, "endline": 13, "endcolumn": 32, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "59": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 21, "endline": 13, "endcolumn": 21, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "60": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 21, "endline": 13, "endcolumn": 32, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "61": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 24, "endline": 13, "endcolumn": 24, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "62": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 21, "endline": 13, "endcolumn": 32, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "63": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 31, "endline": 13, "endcolumn": 31, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "64": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 31, "endline": 13, "endcolumn": 31, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "65": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 27, "endline": 13, "endcolumn": 32, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "66": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 21, "endline": 13, "endcolumn": 32, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "67": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 14, "endline": 13, "endcolumn": 33, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "68": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 13, "column": 5, "endline": 13, "endcolumn": 12, "stmt": [13,5,13,33], "code": "    result = subseq(s, 1, len(s))" },
    "69": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 12, "column": 1, "endline": 12, "endcolumn": 12, "stmt": [12,1,12,12], "code": "def tail(s):" },
    "70": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 16, "column": 1, "endline": 16, "endcolumn": 3, "stmt": [16,1,16,11], "code": "def sum(a):" },
    "71": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 16, "column": 1, "endline": 16, "endcolumn": 11, "stmt": [16,1,16,11], "code": "def sum(a):" },
    "72": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 17, "column": 14, "endline": 17, "endcolumn": 14, "stmt": [17,5,17,14], "code": "    result = 0" },
    "73": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 17, "column": 14, "endline": 17, "endcolumn": 14, "stmt": [17,5,17,14], "code": "    result = 0" },
    "74": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 17, "column": 5, "endline": 17, "endcolumn": 12, "stmt": [17,5,17,14], "code": "    result = 0" },
    "75": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 18, "column": 14, "endline": 18, "endcolumn": 14, "stmt": [18,5,18,14], "code": "    for v in a:" },
    "76": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 18, "column": 14, "endline": 18, "endcolumn": 14, "stmt": [18,5,18,14], "code": "    for v in a:" },
    "77": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 18, "column": 5, "endline": 18, "endcolumn": 7, "stmt": [18,5,18,14], "code": "    for v in a:" },
    "78": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 18, "column": 5, "endline": 18, "endcolumn": 7, "stmt": [18,5,18,14], "code": "    for v in a:" },
    "79": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 18, "column": 5, "endline": 18, "endcolumn": 7, "stmt": [18,5,18,14], "code": "    for v in a:" },
    "80": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 19, "column": 9, "endline": 19, "endcolumn": 19, "stmt": [19,9,19,19], "code": "        result += v" },
    "81": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 19, "column": 9, "endline": 19, "endcolumn": 19, "stmt": [19,9,19,19], "code": "        result += v" },
    "82": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 19, "column": 19, "endline": 19, "endcolumn": 19, "stmt": [19,9,19,19], "code": "        result += v" },
    "83": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 19, "column": 19, "endline": 19, "endcolumn": 19, "stmt": [19,9,19,19], "code": "        result += v" },
    "84": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 19, "column": 9, "endline": 19, "endcolumn": 19, "stmt": [19,9,19,19], "code": "        result += v" },
    "85": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 19, "column": 9, "endline": 19, "endcolumn": 17, "stmt": [19,9,19,19], "code": "        result += v" },
    "86": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 18, "column": 14, "endline": 18, "endcolumn": 14, "stmt": [18,5,18,14], "code": "    for v in a:" },
    "87": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 16, "column": 1, "endline": 16, "endcolumn": 11, "stmt": [16,1,16,11], "code": "def sum(a):" },
    "88": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 16, "column": 1, "endline": 16, "endcolumn": 11, "stmt": [16,1,16,11], "code": "def sum(a):" },
    "89": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 22, "column": 1, "endline": 22, "endcolumn": 3, "stmt": [22,1,22,11], "code": "def set(a):" },
    "90": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 22, "column": 1, "endline": 22, "endcolumn": 11, "stmt": [22,1,22,11], "code": "def set(a):" },
    "91": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "92": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "93": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "94": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 27, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "95": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 27, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "96": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 16, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "97": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 16, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "98": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 16, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "99": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "100": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "101": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 16, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "102": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 16, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "103": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "104": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "105": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 27, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "106": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "107": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "108": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 16, "endline": 23, "endcolumn": 27, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "109": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 23, "column": 5, "endline": 23, "endcolumn": 12, "stmt": [23,5,23,29], "code": "    result = { v for v in a }" },
    "110": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 22, "column": 1, "endline": 22, "endcolumn": 11, "stmt": [22,1,22,11], "code": "def set(a):" },
    "111": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 26, "column": 1, "endline": 26, "endcolumn": 3, "stmt": [26,1,26,12], "code": "def list(a):" },
    "112": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 26, "column": 1, "endline": 26, "endcolumn": 12, "stmt": [26,1,26,12], "code": "def list(a):" },
    "113": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "114": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "115": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "116": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 27, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "117": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 27, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "118": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 16, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "119": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 16, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "120": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 16, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "121": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "122": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "123": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 16, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "124": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 16, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "125": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "126": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "127": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 27, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "128": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "129": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "130": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 16, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "131": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 27, "column": 5, "endline": 27, "endcolumn": 12, "stmt": [27,5,27,29], "code": "    result = [ v for v in a ]" },
    "132": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 26, "column": 1, "endline": 26, "endcolumn": 12, "stmt": [26,1,26,12], "code": "def list(a):" },
    "133": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 30, "column": 1, "endline": 30, "endcolumn": 3, "stmt": [30,1,30,14], "code": "def values(d):" },
    "134": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 30, "column": 1, "endline": 30, "endcolumn": 14, "stmt": [30,1,30,14], "code": "def values(d):" },
    "135": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "136": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "137": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "138": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 29, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "139": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 29, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "140": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 16, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "141": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 16, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "142": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 16, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "143": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 16, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "144": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "145": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "146": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 16, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "147": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 16, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "148": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "149": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "150": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 29, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "151": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "152": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "153": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 29, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "154": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 12, "stmt": [31,5,31,31], "code": "    result = [ v for _:v in d ]" },
    "155": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 30, "column": 1, "endline": 30, "endcolumn": 14, "stmt": [30,1,30,14], "code": "def values(d):" },
    "156": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 34, "column": 1, "endline": 34, "endcolumn": 3, "stmt": [34,1,34,13], "code": "def items(d):" },
    "157": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 34, "column": 1, "endline": 34, "endcolumn": 13, "stmt": [34,1,34,13], "code": "def items(d):" },
    "158": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "159": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "160": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "161": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 34, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "162": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 34, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "163": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 16, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "164": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 16, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "165": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 16, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "166": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "167": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "168": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 17, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "169": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 17, "endline": 35, "endcolumn": 17, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "170": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 17, "endline": 35, "endcolumn": 17, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "171": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 17, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "172": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 20, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "173": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 20, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "174": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 17, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "175": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "176": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "177": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 34, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "178": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "179": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "180": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "181": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 16, "endline": 35, "endcolumn": 34, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "182": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 35, "column": 5, "endline": 35, "endcolumn": 12, "stmt": [35,5,35,36], "code": "    result = [ (k, v) for k:v in d ]" },
    "183": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 34, "column": 1, "endline": 34, "endcolumn": 13, "stmt": [34,1,34,13], "code": "def items(d):" },
    "184": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 38, "column": 1, "endline": 38, "endcolumn": 3, "stmt": [38,1,38,13], "code": "def qsort(a):" },
    "185": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 38, "column": 1, "endline": 38, "endcolumn": 13, "stmt": [38,1,38,13], "code": "def qsort(a):" },
    "186": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 39, "column": 8, "endline": 39, "endcolumn": 8, "stmt": [39,5,39,15], "code": "    if a == []:" },
    "187": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 39, "column": 8, "endline": 39, "endcolumn": 8, "stmt": [39,5,39,15], "code": "    if a == []:" },
    "188": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 39, "column": 13, "endline": 39, "endcolumn": 14, "stmt": [39,5,39,15], "code": "    if a == []:" },
    "189": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 39, "column": 8, "endline": 39, "endcolumn": 14, "stmt": [39,5,39,15], "code": "    if a == []:" },
    "190": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 39, "column": 5, "endline": 39, "endcolumn": 6, "stmt": [39,5,39,15], "code": "    if a == []:" },
    "191": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 40, "column": 18, "endline": 40, "endcolumn": 19, "stmt": [40,9,40,19], "code": "        result = []" },
    "192": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 40, "column": 18, "endline": 40, "endcolumn": 19, "stmt": [40,9,40,19], "code": "        result = []" },
    "193": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 40, "column": 9, "endline": 40, "endcolumn": 16, "stmt": [40,9,40,19], "code": "        result = []" },
    "194": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 39, "column": 5, "endline": 39, "endcolumn": 15, "stmt": [39,5,39,15], "code": "    if a == []:" },
    "195": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 29, "endline": 42, "endcolumn": 44, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "196": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 29, "endline": 42, "endcolumn": 32, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "197": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 34, "endline": 42, "endcolumn": 34, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "198": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 29, "endline": 42, "endcolumn": 35, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "199": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 29, "endline": 42, "endcolumn": 44, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "200": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 38, "endline": 42, "endcolumn": 41, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "201": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 43, "endline": 42, "endcolumn": 43, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "202": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 43, "endline": 42, "endcolumn": 43, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "203": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 38, "endline": 42, "endcolumn": 44, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "204": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 29, "endline": 42, "endcolumn": 44, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "205": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 42, "column": 9, "endline": 42, "endcolumn": 27, "stmt": [42,9,42,53], "code": "        let (pivot, rest) = head(a), tail(a)" },
    "206": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "207": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "208": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 34, "endline": 43, "endcolumn": 37, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "209": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 23, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "210": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 23, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "211": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 23, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "212": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 23, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "213": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 45, "endline": 43, "endcolumn": 45, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "214": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 49, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "215": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 45, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "216": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "217": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "218": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "219": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 23, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "220": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 23, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "221": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "222": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "223": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 49, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "224": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "225": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "226": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 53, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "227": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 43, "column": 9, "endline": 43, "endcolumn": 19, "stmt": [43,9,43,64], "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "228": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "229": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "230": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 35, "endline": 44, "endcolumn": 38, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "231": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 35, "endline": 44, "endcolumn": 38, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "232": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 24, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "233": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 24, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "234": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 24, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "235": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 24, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "236": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 46, "endline": 44, "endcolumn": 46, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "237": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 51, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "238": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 46, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "239": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "240": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "241": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "242": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 24, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "243": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 24, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "244": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "245": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "246": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 51, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "247": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "248": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "249": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 24, "endline": 44, "endcolumn": 55, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "250": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 44, "column": 9, "endline": 44, "endcolumn": 20, "stmt": [44,9,44,57], "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "251": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 22, "endline": 45, "endcolumn": 26, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "252": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 28, "endline": 45, "endcolumn": 32, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "253": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 28, "endline": 45, "endcolumn": 32, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "254": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 22, "endline": 45, "endcolumn": 33, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "255": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 38, "endline": 45, "endcolumn": 43, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "256": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 38, "endline": 45, "endcolumn": 42, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "257": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 38, "endline": 45, "endcolumn": 42, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "258": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 38, "endline": 45, "endcolumn": 43, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "259": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 48, "endline": 45, "endcolumn": 52, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "260": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 54, "endline": 45, "endcolumn": 59, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "261": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 54, "endline": 45, "endcolumn": 59, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "262": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 48, "endline": 45, "endcolumn": 60, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "263": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 22, "endline": 45, "endcolumn": 60, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "264": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 45, "column": 13, "endline": 45, "endcolumn": 20, "stmt": [45,13,45,60], "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "265": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 38, "column": 1, "endline": 38, "endcolumn": 13, "stmt": [38,1,38,13], "code": "def qsort(a):" },
    "266": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 48, "column": 1, "endline": 48, "endcolumn": 3, "stmt": [48,1,48,14], "code": "def sorted(d):" },
    "267": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 48, "column": 1, "endline": 48, "endcolumn": 14, "stmt": [48,1,48,14], "code": "def sorted(d):" },
    "268": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 49, "column": 14, "endline": 49, "endcolumn": 18, "stmt": [49,5,49,27], "code": "    result = qsort(list(d))" },
    "269": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 49, "column": 14, "endline": 49, "endcolumn": 18, "stmt": [49,5,49,27], "code": "    result = qsort(list(d))" },
    "270": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 49, "column": 20, "endline": 49, "endcolumn": 23, "stmt": [49,5,49,27], "code": "    result = qsort(list(d))" },
    "271": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 49, "column": 25, "endline": 49, "endcolumn": 25, "stmt": [49,5,49,27], "code": "    result = qsort(list(d))" },
    "272": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 49, "column": 25, "endline": 49, "endcolumn": 25, "stmt": [49,5,49,27], "code": "    result = qsort(list(d))" },
    "273": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 49, "column": 20, "endline": 49, "endcolumn": 26, "stmt": [49,5,49,27], "code": "    result = qsort(list(d))" },
    "274": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 49, "column": 14, "endline": 49, "endcolumn": 27, "stmt": [49,5,49,27], "code": "    result = qsort(list(d))" },
    "275": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 49, "column": 5, "endline": 49, "endcolumn": 12, "stmt": [49,5,49,27], "code": "    result = qsort(list(d))" },
    "276": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 48, "column": 1, "endline": 48, "endcolumn": 14, "stmt": [48,1,48,14], "code": "def sorted(d):" },
    "277": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 52, "column": 1, "endline": 52, "endcolumn": 3, "stmt": [52,1,52,16], "code": "def reversed(d):" },
    "278": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 52, "column": 1, "endline": 52, "endcolumn": 16, "stmt": [52,1,52,16], "code": "def reversed(d):" },
    "279": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 53, "column": 17, "endline": 53, "endcolumn": 17, "stmt": [53,5,53,18], "code": "    let n = len(d):" },
    "280": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 53, "column": 17, "endline": 53, "endcolumn": 17, "stmt": [53,5,53,18], "code": "    let n = len(d):" },
    "281": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 53, "column": 13, "endline": 53, "endcolumn": 18, "stmt": [53,5,53,18], "code": "    let n = len(d):" },
    "282": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 53, "column": 5, "endline": 53, "endcolumn": 11, "stmt": [53,5,53,18], "code": "    let n = len(d):" },
    "283": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "284": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "285": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 38, "endline": 54, "endcolumn": 38, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "286": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 41, "endline": 54, "endcolumn": 41, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "287": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 38, "endline": 54, "endcolumn": 41, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "288": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 20, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "289": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 20, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "290": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 20, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "291": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "292": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "293": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 20, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "294": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 22, "endline": 54, "endcolumn": 22, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "295": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 24, "endline": 54, "endcolumn": 24, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "296": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 24, "endline": 54, "endcolumn": 24, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "297": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 22, "endline": 54, "endcolumn": 24, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "298": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 25, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "299": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "300": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "301": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 43, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "302": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "303": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "304": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "305": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "306": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 20, "endline": 54, "endcolumn": 43, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "307": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 54, "column": 9, "endline": 54, "endcolumn": 16, "stmt": [54,9,54,45], "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "308": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/list.hny", "line": 52, "column": 1, "endline": 52, "endcolumn": 16, "stmt": [52,1,52,16], "code": "def reversed(d):" },
    "309": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 1, "column": 1, "endline": 1, "endcolumn": 3, "stmt": [1,1,1,12], "code": "def empty():" },
    "310": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 1, "column": 1, "endline": 1, "endcolumn": 12, "stmt": [1,1,1,12], "code": "def empty():" },
    "311": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 2, "column": 14, "endline": 2, "endcolumn": 16, "stmt": [2,5,2,16], "code": "    result = {:}" },
    "312": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 2, "column": 14, "endline": 2, "endcolumn": 16, "stmt": [2,5,2,16], "code": "    result = {:}" },
    "313": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 2, "column": 5, "endline": 2, "endcolumn": 12, "stmt": [2,5,2,16], "code": "    result = {:}" },
    "314": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 1, "column": 1, "endline": 1, "endcolumn": 12, "stmt": [1,1,1,12], "code": "def empty():" },
    "315": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 4, "column": 1, "endline": 4, "endcolumn": 3, "stmt": [4,1,4,15], "code": "def fromSet(s):" },
    "316": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 4, "column": 1, "endline": 4, "endcolumn": 15, "stmt": [4,1,4,15], "code": "def fromSet(s):" },
    "317": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "318": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "319": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "320": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 33, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "321": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 33, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "322": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 18, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "323": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 18, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "324": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 18, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "325": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "326": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "327": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 18, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "328": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 18, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "329": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 20, "endline": 5, "endcolumn": 20, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "330": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "331": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "332": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 33, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "333": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "334": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "335": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 33, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "336": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 5, "column": 5, "endline": 5, "endcolumn": 12, "stmt": [5,5,5,35], "code": "    result = { elt:1 for elt in s }" },
    "337": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 4, "column": 1, "endline": 4, "endcolumn": 15, "stmt": [4,1,4,15], "code": "def fromSet(s):" },
    "338": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 7, "column": 1, "endline": 7, "endcolumn": 3, "stmt": [7,1,7,16], "code": "def fromList(a):" },
    "339": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 7, "column": 1, "endline": 7, "endcolumn": 16, "stmt": [7,1,7,16], "code": "def fromList(a):" },
    "340": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 8, "column": 14, "endline": 8, "endcolumn": 16, "stmt": [8,5,8,16], "code": "    result = {:}" },
    "341": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 8, "column": 14, "endline": 8, "endcolumn": 16, "stmt": [8,5,8,16], "code": "    result = {:}" },
    "342": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 8, "column": 5, "endline": 8, "endcolumn": 12, "stmt": [8,5,8,16], "code": "    result = {:}" },
    "343": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 9, "column": 14, "endline": 9, "endcolumn": 14, "stmt": [9,5,9,14], "code": "    for v in a:" },
    "344": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 9, "column": 14, "endline": 9, "endcolumn": 14, "stmt": [9,5,9,14], "code": "    for v in a:" },
    "345": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 9, "column": 5, "endline": 9, "endcolumn": 7, "stmt": [9,5,9,14], "code": "    for v in a:" },
    "346": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 9, "column": 5, "endline": 9, "endcolumn": 7, "stmt": [9,5,9,14], "code": "    for v in a:" },
    "347": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 9, "column": 5, "endline": 9, "endcolumn": 7, "stmt": [9,5,9,14], "code": "    for v in a:" },
    "348": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 10, "column": 12, "endline": 10, "endcolumn": 12, "stmt": [10,9,10,23], "code": "        if v in result:" },
    "349": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 10, "column": 17, "endline": 10, "endcolumn": 22, "stmt": [10,9,10,23], "code": "        if v in result:" },
    "350": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 10, "column": 12, "endline": 10, "endcolumn": 22, "stmt": [10,9,10,23], "code": "        if v in result:" },
    "351": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 10, "column": 9, "endline": 10, "endcolumn": 10, "stmt": [10,9,10,23], "code": "        if v in result:" },
    "352": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 11, "column": 13, "endline": 11, "endcolumn": 18, "stmt": [11,13,11,26], "code": "            result[v] += 1" },
    "353": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 11, "column": 20, "endline": 11, "endcolumn": 20, "stmt": [11,13,11,26], "code": "            result[v] += 1" },
    "354": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 11, "column": 20, "endline": 11, "endcolumn": 20, "stmt": [11,13,11,26], "code": "            result[v] += 1" },
    "355": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 11, "column": 13, "endline": 11, "endcolumn": 21, "stmt": [11,13,11,26], "code": "            result[v] += 1" },
    "356": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 11, "column": 13, "endline": 11, "endcolumn": 26, "stmt": [11,13,11,26], "code": "            result[v] += 1" },
    "357": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 11, "column": 13, "endline": 11, "endcolumn": 26, "stmt": [11,13,11,26], "code": "            result[v] += 1" },
    "358": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 11, "column": 26, "endline": 11, "endcolumn": 26, "stmt": [11,13,11,26], "code": "            result[v] += 1" },
    "359": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 11, "column": 13, "endline": 11, "endcolumn": 26, "stmt": [11,13,11,26], "code": "            result[v] += 1" },
    "360": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 11, "column": 13, "endline": 11, "endcolumn": 24, "stmt": [11,13,11,26], "code": "            result[v] += 1" },
    "361": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 10, "column": 9, "endline": 10, "endcolumn": 23, "stmt": [10,9,10,23], "code": "        if v in result:" },
    "362": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 13, "column": 13, "endline": 13, "endcolumn": 18, "stmt": [13,13,13,25], "code": "            result[v] = 1" },
    "363": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 13, "column": 20, "endline": 13, "endcolumn": 20, "stmt": [13,13,13,25], "code": "            result[v] = 1" },
    "364": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 13, "column": 20, "endline": 13, "endcolumn": 20, "stmt": [13,13,13,25], "code": "            result[v] = 1" },
    "365": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 13, "column": 13, "endline": 13, "endcolumn": 21, "stmt": [13,13,13,25], "code": "            result[v] = 1" },
    "366": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 13, "column": 25, "endline": 13, "endcolumn": 25, "stmt": [13,13,13,25], "code": "            result[v] = 1" },
    "367": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 13, "column": 13, "endline": 13, "endcolumn": 23, "stmt": [13,13,13,25], "code": "            result[v] = 1" },
    "368": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 9, "column": 14, "endline": 9, "endcolumn": 14, "stmt": [9,5,9,14], "code": "    for v in a:" },
    "369": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 7, "column": 1, "endline": 7, "endcolumn": 16, "stmt": [7,1,7,16], "code": "def fromList(a):" },
    "370": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 7, "column": 1, "endline": 7, "endcolumn": 16, "stmt": [7,1,7,16], "code": "def fromList(a):" },
    "371": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 15, "column": 9, "endline": 15, "endcolumn": 20, "stmt": [15,1,15,39], "code": "builtin multiplicity \"bag$multiplicity\"" },
    "372": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 15, "column": 1, "endline": 15, "endcolumn": 39, "stmt": [15,1,15,39], "code": "builtin multiplicity \"bag$multiplicity\"" },
    "373": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 16, "column": 1, "endline": 16, "endcolumn": 3, "stmt": [16,1,16,26], "code": "def multiplicity(bg, elt):" },
    "374": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 16, "column": 1, "endline": 16, "endcolumn": 26, "stmt": [16,1,16,26], "code": "def multiplicity(bg, elt):" },
    "375": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 17, "column": 8, "endline": 17, "endcolumn": 10, "stmt": [17,5,17,17], "code": "    if elt in bg:" },
    "376": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 17, "column": 8, "endline": 17, "endcolumn": 10, "stmt": [17,5,17,17], "code": "    if elt in bg:" },
    "377": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 17, "column": 15, "endline": 17, "endcolumn": 16, "stmt": [17,5,17,17], "code": "    if elt in bg:" },
    "378": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 17, "column": 8, "endline": 17, "endcolumn": 16, "stmt": [17,5,17,17], "code": "    if elt in bg:" },
    "379": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 17, "column": 5, "endline": 17, "endcolumn": 6, "stmt": [17,5,17,17], "code": "    if elt in bg:" },
    "380": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 18, "column": 18, "endline": 18, "endcolumn": 19, "stmt": [18,9,18,24], "code": "        result = bg[elt]" },
    "381": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 18, "column": 18, "endline": 18, "endcolumn": 19, "stmt": [18,9,18,24], "code": "        result = bg[elt]" },
    "382": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 18, "column": 21, "endline": 18, "endcolumn": 23, "stmt": [18,9,18,24], "code": "        result = bg[elt]" },
    "383": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 18, "column": 21, "endline": 18, "endcolumn": 23, "stmt": [18,9,18,24], "code": "        result = bg[elt]" },
    "384": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 18, "column": 18, "endline": 18, "endcolumn": 24, "stmt": [18,9,18,24], "code": "        result = bg[elt]" },
    "385": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 18, "column": 9, "endline": 18, "endcolumn": 16, "stmt": [18,9,18,24], "code": "        result = bg[elt]" },
    "386": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 17, "column": 5, "endline": 17, "endcolumn": 17, "stmt": [17,5,17,17], "code": "    if elt in bg:" },
    "387": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 20, "column": 18, "endline": 20, "endcolumn": 18, "stmt": [20,9,20,18], "code": "        result = 0" },
    "388": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 20, "column": 18, "endline": 20, "endcolumn": 18, "stmt": [20,9,20,18], "code": "        result = 0" },
    "389": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 20, "column": 18, "endline": 20, "endcolumn": 18, "stmt": [20,9,20,18], "code": "        result = 0" },
    "390": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 20, "column": 9, "endline": 20, "endcolumn": 16, "stmt": [20,9,20,18], "code": "        result = 0" },
    "391": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 16, "column": 1, "endline": 16, "endcolumn": 26, "stmt": [16,1,16,26], "code": "def multiplicity(bg, elt):" },
    "392": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 22, "column": 9, "endline": 22, "endcolumn": 12, "stmt": [22,1,22,23], "code": "builtin size \"bag$size\"" },
    "393": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 22, "column": 1, "endline": 22, "endcolumn": 23, "stmt": [22,1,22,23], "code": "builtin size \"bag$size\"" },
    "394": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 23, "column": 1, "endline": 23, "endcolumn": 3, "stmt": [23,1,23,13], "code": "def size(bg):" },
    "395": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 23, "column": 1, "endline": 23, "endcolumn": 13, "stmt": [23,1,23,13], "code": "def size(bg):" },
    "396": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 24, "column": 14, "endline": 24, "endcolumn": 14, "stmt": [24,5,24,14], "code": "    result = 0" },
    "397": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 24, "column": 14, "endline": 24, "endcolumn": 14, "stmt": [24,5,24,14], "code": "    result = 0" },
    "398": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 24, "column": 5, "endline": 24, "endcolumn": 12, "stmt": [24,5,24,14], "code": "    result = 0" },
    "399": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 25, "column": 16, "endline": 25, "endcolumn": 17, "stmt": [25,5,25,17], "code": "    for _:c in bg:" },
    "400": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 25, "column": 16, "endline": 25, "endcolumn": 17, "stmt": [25,5,25,17], "code": "    for _:c in bg:" },
    "401": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 25, "column": 5, "endline": 25, "endcolumn": 7, "stmt": [25,5,25,17], "code": "    for _:c in bg:" },
    "402": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 25, "column": 5, "endline": 25, "endcolumn": 7, "stmt": [25,5,25,17], "code": "    for _:c in bg:" },
    "403": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 25, "column": 5, "endline": 25, "endcolumn": 7, "stmt": [25,5,25,17], "code": "    for _:c in bg:" },
    "404": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 25, "column": 5, "endline": 25, "endcolumn": 7, "stmt": [25,5,25,17], "code": "    for _:c in bg:" },
    "405": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 26, "column": 9, "endline": 26, "endcolumn": 19, "stmt": [26,9,26,19], "code": "        result += c" },
    "406": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 26, "column": 9, "endline": 26, "endcolumn": 19, "stmt": [26,9,26,19], "code": "        result += c" },
    "407": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 26, "column": 19, "endline": 26, "endcolumn": 19, "stmt": [26,9,26,19], "code": "        result += c" },
    "408": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 26, "column": 19, "endline": 26, "endcolumn": 19, "stmt": [26,9,26,19], "code": "        result += c" },
    "409": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 26, "column": 9, "endline": 26, "endcolumn": 19, "stmt": [26,9,26,19], "code": "        result += c" },
    "410": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 26, "column": 9, "endline": 26, "endcolumn": 17, "stmt": [26,9,26,19], "code": "        result += c" },
    "411": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 25, "column": 17, "endline": 25, "endcolumn": 17, "stmt": [25,5,25,17], "code": "    for _:c in bg:" },
    "412": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 23, "column": 1, "endline": 23, "endcolumn": 13, "stmt": [23,1,23,13], "code": "def size(bg):" },
    "413": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 23, "column": 1, "endline": 23, "endcolumn": 13, "stmt": [23,1,23,13], "code": "def size(bg):" },
    "414": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 28, "column": 9, "endline": 28, "endcolumn": 12, "stmt": [28,1,28,23], "code": "builtin bmin \"bag$bmin\"" },
    "415": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 28, "column": 1, "endline": 28, "endcolumn": 23, "stmt": [28,1,28,23], "code": "builtin bmin \"bag$bmin\"" },
    "416": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 29, "column": 1, "endline": 29, "endcolumn": 3, "stmt": [29,1,29,13], "code": "def bmin(bg):" },
    "417": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 29, "column": 1, "endline": 29, "endcolumn": 13, "stmt": [29,1,29,13], "code": "def bmin(bg):" },
    "418": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 30, "column": 5, "endline": 30, "endcolumn": 20, "stmt": [30,5,30,20], "code": "    assert bg != {:}" },
    "419": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 30, "column": 5, "endline": 30, "endcolumn": 20, "stmt": [30,5,30,20], "code": "    assert bg != {:}" },
    "420": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 30, "column": 5, "endline": 30, "endcolumn": 20, "stmt": [30,5,30,20], "code": "    assert bg != {:}" },
    "421": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 30, "column": 12, "endline": 30, "endcolumn": 13, "stmt": [30,5,30,20], "code": "    assert bg != {:}" },
    "422": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 30, "column": 18, "endline": 30, "endcolumn": 20, "stmt": [30,5,30,20], "code": "    assert bg != {:}" },
    "423": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 30, "column": 12, "endline": 30, "endcolumn": 20, "stmt": [30,5,30,20], "code": "    assert bg != {:}" },
    "424": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 30, "column": 5, "endline": 30, "endcolumn": 10, "stmt": [30,5,30,20], "code": "    assert bg != {:}" },
    "425": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 30, "column": 5, "endline": 30, "endcolumn": 20, "stmt": [30,5,30,20], "code": "    assert bg != {:}" },
    "426": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 30, "column": 5, "endline": 30, "endcolumn": 20, "stmt": [30,5,30,20], "code": "    assert bg != {:}" },
    "427": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 31, "column": 23, "endline": 31, "endcolumn": 24, "stmt": [31,5,31,26], "code": "    result = min(keys(bg))" },
    "428": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 31, "column": 23, "endline": 31, "endcolumn": 24, "stmt": [31,5,31,26], "code": "    result = min(keys(bg))" },
    "429": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 31, "column": 18, "endline": 31, "endcolumn": 25, "stmt": [31,5,31,26], "code": "    result = min(keys(bg))" },
    "430": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 31, "column": 14, "endline": 31, "endcolumn": 26, "stmt": [31,5,31,26], "code": "    result = min(keys(bg))" },
    "431": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 12, "stmt": [31,5,31,26], "code": "    result = min(keys(bg))" },
    "432": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 29, "column": 1, "endline": 29, "endcolumn": 13, "stmt": [29,1,29,13], "code": "def bmin(bg):" },
    "433": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 33, "column": 9, "endline": 33, "endcolumn": 12, "stmt": [33,1,33,23], "code": "builtin bmax \"bag$bmax\"" },
    "434": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 33, "column": 1, "endline": 33, "endcolumn": 23, "stmt": [33,1,33,23], "code": "builtin bmax \"bag$bmax\"" },
    "435": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 34, "column": 1, "endline": 34, "endcolumn": 3, "stmt": [34,1,34,13], "code": "def bmax(bg):" },
    "436": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 34, "column": 1, "endline": 34, "endcolumn": 13, "stmt": [34,1,34,13], "code": "def bmax(bg):" },
    "437": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 35, "column": 5, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,20], "code": "    assert bg != {:}" },
    "438": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 35, "column": 5, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,20], "code": "    assert bg != {:}" },
    "439": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 35, "column": 5, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,20], "code": "    assert bg != {:}" },
    "440": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 35, "column": 12, "endline": 35, "endcolumn": 13, "stmt": [35,5,35,20], "code": "    assert bg != {:}" },
    "441": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 35, "column": 18, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,20], "code": "    assert bg != {:}" },
    "442": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 35, "column": 12, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,20], "code": "    assert bg != {:}" },
    "443": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 35, "column": 5, "endline": 35, "endcolumn": 10, "stmt": [35,5,35,20], "code": "    assert bg != {:}" },
    "444": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 35, "column": 5, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,20], "code": "    assert bg != {:}" },
    "445": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 35, "column": 5, "endline": 35, "endcolumn": 20, "stmt": [35,5,35,20], "code": "    assert bg != {:}" },
    "446": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 36, "column": 23, "endline": 36, "endcolumn": 24, "stmt": [36,5,36,26], "code": "    result = max(keys(bg))" },
    "447": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 36, "column": 23, "endline": 36, "endcolumn": 24, "stmt": [36,5,36,26], "code": "    result = max(keys(bg))" },
    "448": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 36, "column": 18, "endline": 36, "endcolumn": 25, "stmt": [36,5,36,26], "code": "    result = max(keys(bg))" },
    "449": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 36, "column": 14, "endline": 36, "endcolumn": 26, "stmt": [36,5,36,26], "code": "    result = max(keys(bg))" },
    "450": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 36, "column": 5, "endline": 36, "endcolumn": 12, "stmt": [36,5,36,26], "code": "    result = max(keys(bg))" },
    "451": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 34, "column": 1, "endline": 34, "endcolumn": 13, "stmt": [34,1,34,13], "code": "def bmax(bg):" },
    "452": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 38, "column": 1, "endline": 38, "endcolumn": 3, "stmt": [38,1,38,16], "code": "def bchoose(bg):" },
    "453": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 38, "column": 1, "endline": 38, "endcolumn": 16, "stmt": [38,1,38,16], "code": "def bchoose(bg):" },
    "454": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 39, "column": 26, "endline": 39, "endcolumn": 27, "stmt": [39,5,39,29], "code": "    result = choose(keys(bg))" },
    "455": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 39, "column": 26, "endline": 39, "endcolumn": 27, "stmt": [39,5,39,29], "code": "    result = choose(keys(bg))" },
    "456": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 39, "column": 26, "endline": 39, "endcolumn": 27, "stmt": [39,5,39,29], "code": "    result = choose(keys(bg))" },
    "457": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 39, "column": 21, "endline": 39, "endcolumn": 28, "stmt": [39,5,39,29], "code": "    result = choose(keys(bg))" },
    "458": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 39, "column": 14, "endline": 39, "endcolumn": 29, "stmt": [39,5,39,29], "code": "    result = choose(keys(bg))" },
    "459": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 39, "column": 5, "endline": 39, "endcolumn": 12, "stmt": [39,5,39,29], "code": "    result = choose(keys(bg))" },
    "460": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 38, "column": 1, "endline": 38, "endcolumn": 16, "stmt": [38,1,38,16], "code": "def bchoose(bg):" },
    "461": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 41, "column": 9, "endline": 41, "endcolumn": 11, "stmt": [41,1,41,21], "code": "builtin add \"bag$add\"" },
    "462": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 41, "column": 1, "endline": 41, "endcolumn": 21, "stmt": [41,1,41,21], "code": "builtin add \"bag$add\"" },
    "463": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 42, "column": 1, "endline": 42, "endcolumn": 3, "stmt": [42,1,42,17], "code": "def add(bg, elt):" },
    "464": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 42, "column": 1, "endline": 42, "endcolumn": 17, "stmt": [42,1,42,17], "code": "def add(bg, elt):" },
    "465": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 43, "column": 14, "endline": 43, "endcolumn": 15, "stmt": [43,5,43,15], "code": "    result = bg" },
    "466": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 43, "column": 14, "endline": 43, "endcolumn": 15, "stmt": [43,5,43,15], "code": "    result = bg" },
    "467": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 43, "column": 14, "endline": 43, "endcolumn": 15, "stmt": [43,5,43,15], "code": "    result = bg" },
    "468": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 43, "column": 5, "endline": 43, "endcolumn": 12, "stmt": [43,5,43,15], "code": "    result = bg" },
    "469": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 44, "column": 8, "endline": 44, "endcolumn": 10, "stmt": [44,5,44,21], "code": "    if elt in result:" },
    "470": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 44, "column": 15, "endline": 44, "endcolumn": 20, "stmt": [44,5,44,21], "code": "    if elt in result:" },
    "471": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 44, "column": 8, "endline": 44, "endcolumn": 20, "stmt": [44,5,44,21], "code": "    if elt in result:" },
    "472": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 44, "column": 5, "endline": 44, "endcolumn": 6, "stmt": [44,5,44,21], "code": "    if elt in result:" },
    "473": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 45, "column": 9, "endline": 45, "endcolumn": 14, "stmt": [45,9,45,24], "code": "        result[elt] += 1" },
    "474": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 45, "column": 16, "endline": 45, "endcolumn": 18, "stmt": [45,9,45,24], "code": "        result[elt] += 1" },
    "475": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 45, "column": 16, "endline": 45, "endcolumn": 18, "stmt": [45,9,45,24], "code": "        result[elt] += 1" },
    "476": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 45, "column": 9, "endline": 45, "endcolumn": 19, "stmt": [45,9,45,24], "code": "        result[elt] += 1" },
    "477": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 45, "column": 9, "endline": 45, "endcolumn": 24, "stmt": [45,9,45,24], "code": "        result[elt] += 1" },
    "478": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 45, "column": 9, "endline": 45, "endcolumn": 24, "stmt": [45,9,45,24], "code": "        result[elt] += 1" },
    "479": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 45, "column": 24, "endline": 45, "endcolumn": 24, "stmt": [45,9,45,24], "code": "        result[elt] += 1" },
    "480": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 45, "column": 9, "endline": 45, "endcolumn": 24, "stmt": [45,9,45,24], "code": "        result[elt] += 1" },
    "481": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 45, "column": 9, "endline": 45, "endcolumn": 22, "stmt": [45,9,45,24], "code": "        result[elt] += 1" },
    "482": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 44, "column": 5, "endline": 44, "endcolumn": 21, "stmt": [44,5,44,21], "code": "    if elt in result:" },
    "483": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 47, "column": 9, "endline": 47, "endcolumn": 14, "stmt": [47,9,47,23], "code": "        result[elt] = 1" },
    "484": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 47, "column": 16, "endline": 47, "endcolumn": 18, "stmt": [47,9,47,23], "code": "        result[elt] = 1" },
    "485": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 47, "column": 16, "endline": 47, "endcolumn": 18, "stmt": [47,9,47,23], "code": "        result[elt] = 1" },
    "486": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 47, "column": 9, "endline": 47, "endcolumn": 19, "stmt": [47,9,47,23], "code": "        result[elt] = 1" },
    "487": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 47, "column": 23, "endline": 47, "endcolumn": 23, "stmt": [47,9,47,23], "code": "        result[elt] = 1" },
    "488": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 47, "column": 9, "endline": 47, "endcolumn": 21, "stmt": [47,9,47,23], "code": "        result[elt] = 1" },
    "489": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 42, "column": 1, "endline": 42, "endcolumn": 17, "stmt": [42,1,42,17], "code": "def add(bg, elt):" },
    "490": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 49, "column": 9, "endline": 49, "endcolumn": 14, "stmt": [49,1,49,27], "code": "builtin remove \"bag$remove\"" },
    "491": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 49, "column": 1, "endline": 49, "endcolumn": 27, "stmt": [49,1,49,27], "code": "builtin remove \"bag$remove\"" },
    "492": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 50, "column": 1, "endline": 50, "endcolumn": 3, "stmt": [50,1,50,20], "code": "def remove(bg, elt):" },
    "493": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 50, "column": 1, "endline": 50, "endcolumn": 20, "stmt": [50,1,50,20], "code": "def remove(bg, elt):" },
    "494": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 51, "column": 14, "endline": 51, "endcolumn": 15, "stmt": [51,5,51,15], "code": "    result = bg" },
    "495": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 51, "column": 14, "endline": 51, "endcolumn": 15, "stmt": [51,5,51,15], "code": "    result = bg" },
    "496": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 51, "column": 14, "endline": 51, "endcolumn": 15, "stmt": [51,5,51,15], "code": "    result = bg" },
    "497": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 51, "column": 5, "endline": 51, "endcolumn": 12, "stmt": [51,5,51,15], "code": "    result = bg" },
    "498": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 52, "column": 8, "endline": 52, "endcolumn": 10, "stmt": [52,5,52,21], "code": "    if elt in result:" },
    "499": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 52, "column": 15, "endline": 52, "endcolumn": 20, "stmt": [52,5,52,21], "code": "    if elt in result:" },
    "500": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 52, "column": 8, "endline": 52, "endcolumn": 20, "stmt": [52,5,52,21], "code": "    if elt in result:" },
    "501": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 52, "column": 5, "endline": 52, "endcolumn": 6, "stmt": [52,5,52,21], "code": "    if elt in result:" },
    "502": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 53, "column": 9, "endline": 53, "endcolumn": 14, "stmt": [53,9,53,24], "code": "        result[elt] -= 1" },
    "503": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 53, "column": 16, "endline": 53, "endcolumn": 18, "stmt": [53,9,53,24], "code": "        result[elt] -= 1" },
    "504": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 53, "column": 9, "endline": 53, "endcolumn": 19, "stmt": [53,9,53,24], "code": "        result[elt] -= 1" },
    "505": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 53, "column": 9, "endline": 53, "endcolumn": 24, "stmt": [53,9,53,24], "code": "        result[elt] -= 1" },
    "506": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 53, "column": 9, "endline": 53, "endcolumn": 24, "stmt": [53,9,53,24], "code": "        result[elt] -= 1" },
    "507": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 53, "column": 24, "endline": 53, "endcolumn": 24, "stmt": [53,9,53,24], "code": "        result[elt] -= 1" },
    "508": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 53, "column": 9, "endline": 53, "endcolumn": 24, "stmt": [53,9,53,24], "code": "        result[elt] -= 1" },
    "509": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 53, "column": 9, "endline": 53, "endcolumn": 22, "stmt": [53,9,53,24], "code": "        result[elt] -= 1" },
    "510": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 54, "column": 8, "endline": 54, "endcolumn": 13, "stmt": [54,5,54,24], "code": "    if result[elt] <= 0:" },
    "511": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 54, "column": 15, "endline": 54, "endcolumn": 17, "stmt": [54,5,54,24], "code": "    if result[elt] <= 0:" },
    "512": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 54, "column": 8, "endline": 54, "endcolumn": 18, "stmt": [54,5,54,24], "code": "    if result[elt] <= 0:" },
    "513": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 54, "column": 23, "endline": 54, "endcolumn": 23, "stmt": [54,5,54,24], "code": "    if result[elt] <= 0:" },
    "514": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 54, "column": 8, "endline": 54, "endcolumn": 23, "stmt": [54,5,54,24], "code": "    if result[elt] <= 0:" },
    "515": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 54, "column": 5, "endline": 54, "endcolumn": 6, "stmt": [54,5,54,24], "code": "    if result[elt] <= 0:" },
    "516": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 55, "column": 13, "endline": 55, "endcolumn": 18, "stmt": [55,9,55,23], "code": "        del result[elt]" },
    "517": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 55, "column": 20, "endline": 55, "endcolumn": 22, "stmt": [55,9,55,23], "code": "        del result[elt]" },
    "518": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 55, "column": 20, "endline": 55, "endcolumn": 22, "stmt": [55,9,55,23], "code": "        del result[elt]" },
    "519": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 55, "column": 13, "endline": 55, "endcolumn": 23, "stmt": [55,9,55,23], "code": "        del result[elt]" },
    "520": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 55, "column": 9, "endline": 55, "endcolumn": 23, "stmt": [55,9,55,23], "code": "        del result[elt]" },
    "521": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 50, "column": 1, "endline": 50, "endcolumn": 20, "stmt": [50,1,50,20], "code": "def remove(bg, elt):" },
    "522": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 50, "column": 1, "endline": 50, "endcolumn": 20, "stmt": [50,1,50,20], "code": "def remove(bg, elt):" },
    "523": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 58, "column": 1, "endline": 58, "endcolumn": 3, "stmt": [58,1,58,24], "code": "def combinations(bg, k):" },
    "524": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 58, "column": 1, "endline": 58, "endcolumn": 24, "stmt": [58,1,58,24], "code": "def combinations(bg, k):" },
    "525": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 59, "column": 8, "endline": 59, "endcolumn": 8, "stmt": [59,5,59,14], "code": "    if k == 0:" },
    "526": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 59, "column": 8, "endline": 59, "endcolumn": 8, "stmt": [59,5,59,14], "code": "    if k == 0:" },
    "527": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 59, "column": 13, "endline": 59, "endcolumn": 13, "stmt": [59,5,59,14], "code": "    if k == 0:" },
    "528": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 59, "column": 8, "endline": 59, "endcolumn": 13, "stmt": [59,5,59,14], "code": "    if k == 0:" },
    "529": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 59, "column": 5, "endline": 59, "endcolumn": 6, "stmt": [59,5,59,14], "code": "    if k == 0:" },
    "530": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 60, "column": 20, "endline": 60, "endcolumn": 22, "stmt": [60,9,60,24], "code": "        result = { {:} }" },
    "531": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 60, "column": 20, "endline": 60, "endcolumn": 22, "stmt": [60,9,60,24], "code": "        result = { {:} }" },
    "532": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 60, "column": 20, "endline": 60, "endcolumn": 22, "stmt": [60,9,60,24], "code": "        result = { {:} }" },
    "533": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 60, "column": 9, "endline": 60, "endcolumn": 16, "stmt": [60,9,60,24], "code": "        result = { {:} }" },
    "534": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 59, "column": 5, "endline": 59, "endcolumn": 14, "stmt": [59,5,59,14], "code": "    if k == 0:" },
    "535": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 62, "column": 17, "endline": 62, "endcolumn": 20, "stmt": [62,9,62,24], "code": "        let n = size(bg):" },
    "536": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 62, "column": 22, "endline": 62, "endcolumn": 23, "stmt": [62,9,62,24], "code": "        let n = size(bg):" },
    "537": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 62, "column": 17, "endline": 62, "endcolumn": 24, "stmt": [62,9,62,24], "code": "        let n = size(bg):" },
    "538": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 62, "column": 9, "endline": 62, "endcolumn": 15, "stmt": [62,9,62,24], "code": "        let n = size(bg):" },
    "539": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 63, "column": 16, "endline": 63, "endcolumn": 16, "stmt": [63,13,63,21], "code": "            if k > n:" },
    "540": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 63, "column": 20, "endline": 63, "endcolumn": 20, "stmt": [63,13,63,21], "code": "            if k > n:" },
    "541": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 63, "column": 16, "endline": 63, "endcolumn": 20, "stmt": [63,13,63,21], "code": "            if k > n:" },
    "542": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 63, "column": 13, "endline": 63, "endcolumn": 14, "stmt": [63,13,63,21], "code": "            if k > n:" },
    "543": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 64, "column": 26, "endline": 64, "endcolumn": 27, "stmt": [64,17,64,27], "code": "                result = {}" },
    "544": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 64, "column": 26, "endline": 64, "endcolumn": 27, "stmt": [64,17,64,27], "code": "                result = {}" },
    "545": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 64, "column": 26, "endline": 64, "endcolumn": 27, "stmt": [64,17,64,27], "code": "                result = {}" },
    "546": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 64, "column": 26, "endline": 64, "endcolumn": 27, "stmt": [64,17,64,27], "code": "                result = {}" },
    "547": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 64, "column": 17, "endline": 64, "endcolumn": 24, "stmt": [64,17,64,27], "code": "                result = {}" },
    "548": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 63, "column": 13, "endline": 63, "endcolumn": 21, "stmt": [63,13,63,21], "code": "            if k > n:" },
    "549": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 65, "column": 18, "endline": 65, "endcolumn": 18, "stmt": [65,13,65,24], "code": "            elif k == n:" },
    "550": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 65, "column": 23, "endline": 65, "endcolumn": 23, "stmt": [65,13,65,24], "code": "            elif k == n:" },
    "551": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 65, "column": 23, "endline": 65, "endcolumn": 23, "stmt": [65,13,65,24], "code": "            elif k == n:" },
    "552": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 65, "column": 18, "endline": 65, "endcolumn": 23, "stmt": [65,13,65,24], "code": "            elif k == n:" },
    "553": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 65, "column": 13, "endline": 65, "endcolumn": 16, "stmt": [65,13,65,24], "code": "            elif k == n:" },
    "554": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 66, "column": 28, "endline": 66, "endcolumn": 29, "stmt": [66,17,66,31], "code": "                result = { bg }" },
    "555": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 66, "column": 28, "endline": 66, "endcolumn": 29, "stmt": [66,17,66,31], "code": "                result = { bg }" },
    "556": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 66, "column": 28, "endline": 66, "endcolumn": 29, "stmt": [66,17,66,31], "code": "                result = { bg }" },
    "557": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 66, "column": 28, "endline": 66, "endcolumn": 29, "stmt": [66,17,66,31], "code": "                result = { bg }" },
    "558": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 66, "column": 28, "endline": 66, "endcolumn": 29, "stmt": [66,17,66,31], "code": "                result = { bg }" },
    "559": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 66, "column": 17, "endline": 66, "endcolumn": 24, "stmt": [66,17,66,31], "code": "                result = { bg }" },
    "560": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 65, "column": 13, "endline": 65, "endcolumn": 24, "stmt": [65,13,65,24], "code": "            elif k == n:" },
    "561": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 26, "endline": 68, "endcolumn": 29, "stmt": [68,17,68,33], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "562": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 31, "endline": 68, "endcolumn": 32, "stmt": [68,17,68,33], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "563": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 26, "endline": 68, "endcolumn": 33, "stmt": [68,17,68,33], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "564": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 17, "endline": 68, "endcolumn": 24, "stmt": [68,17,68,33], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "565": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 44, "endline": 68, "endcolumn": 49, "stmt": [68,35,68,57], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "566": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 51, "endline": 68, "endcolumn": 56, "stmt": [68,35,68,57], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "567": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 51, "endline": 68, "endcolumn": 52, "stmt": [68,35,68,57], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "568": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 51, "endline": 68, "endcolumn": 52, "stmt": [68,35,68,57], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "569": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 51, "endline": 68, "endcolumn": 56, "stmt": [68,35,68,57], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "570": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 55, "endline": 68, "endcolumn": 56, "stmt": [68,35,68,57], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "571": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 51, "endline": 68, "endcolumn": 56, "stmt": [68,35,68,57], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "572": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 44, "endline": 68, "endcolumn": 57, "stmt": [68,35,68,57], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "573": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 68, "column": 35, "endline": 68, "endcolumn": 42, "stmt": [68,35,68,57], "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "574": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "575": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "576": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 52, "endline": 69, "endcolumn": 63, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "577": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 65, "endline": 69, "endcolumn": 73, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "578": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 65, "endline": 69, "endcolumn": 66, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "579": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 65, "endline": 69, "endcolumn": 73, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "580": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 69, "endline": 69, "endcolumn": 69, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "581": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 73, "endline": 69, "endcolumn": 73, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "582": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 69, "endline": 69, "endcolumn": 73, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "583": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 65, "endline": 69, "endcolumn": 73, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "584": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 52, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "585": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 34, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "586": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 34, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "587": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 34, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "588": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "589": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "590": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 34, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "591": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 36, "endline": 69, "endcolumn": 40, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "592": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 36, "endline": 69, "endcolumn": 36, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "593": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 36, "endline": 69, "endcolumn": 36, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "594": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 36, "endline": 69, "endcolumn": 40, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "595": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 39, "endline": 69, "endcolumn": 40, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "596": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 36, "endline": 69, "endcolumn": 40, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "597": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 41, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "598": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "599": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "600": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 74, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "601": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "602": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "603": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "604": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 32, "endline": 69, "endcolumn": 74, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "605": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 70, "column": 35, "endline": 70, "endcolumn": 46, "stmt": [69,21,70,53], "code": "                                | combinations(tl, k)" },
    "606": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 70, "column": 48, "endline": 70, "endcolumn": 52, "stmt": [69,21,70,53], "code": "                                | combinations(tl, k)" },
    "607": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 70, "column": 48, "endline": 70, "endcolumn": 49, "stmt": [69,21,70,53], "code": "                                | combinations(tl, k)" },
    "608": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 70, "column": 48, "endline": 70, "endcolumn": 49, "stmt": [69,21,70,53], "code": "                                | combinations(tl, k)" },
    "609": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 70, "column": 48, "endline": 70, "endcolumn": 52, "stmt": [69,21,70,53], "code": "                                | combinations(tl, k)" },
    "610": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 70, "column": 52, "endline": 70, "endcolumn": 52, "stmt": [69,21,70,53], "code": "                                | combinations(tl, k)" },
    "611": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 70, "column": 52, "endline": 70, "endcolumn": 52, "stmt": [69,21,70,53], "code": "                                | combinations(tl, k)" },
    "612": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 70, "column": 48, "endline": 70, "endcolumn": 52, "stmt": [69,21,70,53], "code": "                                | combinations(tl, k)" },
    "613": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 70, "column": 35, "endline": 70, "endcolumn": 53, "stmt": [69,21,70,53], "code": "                                | combinations(tl, k)" },
    "614": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 30, "endline": 70, "endcolumn": 53, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "615": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 69, "column": 21, "endline": 69, "endcolumn": 28, "stmt": [69,21,70,53], "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "616": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/bag.hny", "line": 58, "column": 1, "endline": 58, "endcolumn": 24, "stmt": [58,1,58,24], "code": "def combinations(bg, k):" },
    "617": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 4, "column": 1, "endline": 4, "endcolumn": 3, "stmt": [4,1,4,19], "code": "def atomic_load(p):" },
    "618": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 4, "column": 1, "endline": 4, "endcolumn": 19, "stmt": [4,1,4,19], "code": "def atomic_load(p):" },
    "619": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 16, "stmt": [5,16,5,26], "code": "    atomically result = !p" },
    "620": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 16, "stmt": [5,16,5,26], "code": "    atomically result = !p" },
    "621": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 5, "column": 26, "endline": 5, "endcolumn": 26, "stmt": [5,16,5,26], "code": "    atomically result = !p" },
    "622": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 5, "column": 26, "endline": 5, "endcolumn": 26, "stmt": [5,16,5,26], "code": "    atomically result = !p" },
    "623": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 5, "column": 25, "endline": 5, "endcolumn": 26, "stmt": [5,16,5,26], "code": "    atomically result = !p" },
    "624": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 23, "stmt": [5,16,5,26], "code": "    atomically result = !p" },
    "625": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 5, "column": 16, "endline": 5, "endcolumn": 26, "stmt": [5,16,5,26], "code": "    atomically result = !p" },
    "626": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 4, "column": 1, "endline": 4, "endcolumn": 19, "stmt": [4,1,4,19], "code": "def atomic_load(p):" },
    "627": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 7, "column": 1, "endline": 7, "endcolumn": 3, "stmt": [7,1,7,23], "code": "def atomic_store(p, v):" },
    "628": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 7, "column": 1, "endline": 7, "endcolumn": 23, "stmt": [7,1,7,23], "code": "def atomic_store(p, v):" },
    "629": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 8, "column": 16, "endline": 8, "endcolumn": 16, "stmt": [8,16,8,21], "code": "    atomically !p = v" },
    "630": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 8, "column": 17, "endline": 8, "endcolumn": 17, "stmt": [8,16,8,21], "code": "    atomically !p = v" },
    "631": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 8, "column": 17, "endline": 8, "endcolumn": 17, "stmt": [8,16,8,21], "code": "    atomically !p = v" },
    "632": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 8, "column": 21, "endline": 8, "endcolumn": 21, "stmt": [8,16,8,21], "code": "    atomically !p = v" },
    "633": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 8, "column": 21, "endline": 8, "endcolumn": 21, "stmt": [8,16,8,21], "code": "    atomically !p = v" },
    "634": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 8, "column": 16, "endline": 8, "endcolumn": 19, "stmt": [8,16,8,21], "code": "    atomically !p = v" },
    "635": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 8, "column": 16, "endline": 8, "endcolumn": 21, "stmt": [8,16,8,21], "code": "    atomically !p = v" },
    "636": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 7, "column": 1, "endline": 7, "endcolumn": 23, "stmt": [7,1,7,23], "code": "def atomic_store(p, v):" },
    "637": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 10, "column": 1, "endline": 10, "endcolumn": 3, "stmt": [10,1,10,12], "code": "def tas(lk):" },
    "638": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 10, "column": 1, "endline": 10, "endcolumn": 12, "stmt": [10,1,10,12], "code": "def tas(lk):" },
    "639": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 11, "column": 5, "endline": 11, "endcolumn": 14, "stmt": [11,5,11,15], "code": "    atomically:" },
    "640": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 11, "column": 5, "endline": 11, "endcolumn": 14, "stmt": [11,5,11,15], "code": "    atomically:" },
    "641": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 12, "column": 19, "endline": 12, "endcolumn": 20, "stmt": [12,9,12,20], "code": "        result = !lk" },
    "642": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 12, "column": 18, "endline": 12, "endcolumn": 20, "stmt": [12,9,12,20], "code": "        result = !lk" },
    "643": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 12, "column": 9, "endline": 12, "endcolumn": 16, "stmt": [12,9,12,20], "code": "        result = !lk" },
    "644": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 13, "column": 10, "endline": 13, "endcolumn": 11, "stmt": [13,9,13,18], "code": "        !lk = True" },
    "645": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 13, "column": 10, "endline": 13, "endcolumn": 11, "stmt": [13,9,13,18], "code": "        !lk = True" },
    "646": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 13, "column": 15, "endline": 13, "endcolumn": 18, "stmt": [13,9,13,18], "code": "        !lk = True" },
    "647": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 13, "column": 9, "endline": 13, "endcolumn": 13, "stmt": [13,9,13,18], "code": "        !lk = True" },
    "648": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 11, "column": 5, "endline": 11, "endcolumn": 15, "stmt": [11,5,11,15], "code": "    atomically:" },
    "649": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 10, "column": 1, "endline": 10, "endcolumn": 12, "stmt": [10,1,10,12], "code": "def tas(lk):" },
    "650": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 15, "column": 1, "endline": 15, "endcolumn": 3, "stmt": [15,1,15,21], "code": "def cas(p, old, new):" },
    "651": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 15, "column": 1, "endline": 15, "endcolumn": 21, "stmt": [15,1,15,21], "code": "def cas(p, old, new):" },
    "652": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 16, "column": 5, "endline": 16, "endcolumn": 14, "stmt": [16,5,16,15], "code": "    atomically:" },
    "653": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 16, "column": 5, "endline": 16, "endcolumn": 14, "stmt": [16,5,16,15], "code": "    atomically:" },
    "654": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 17, "column": 19, "endline": 17, "endcolumn": 19, "stmt": [17,9,17,26], "code": "        result = !p == old" },
    "655": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 17, "column": 18, "endline": 17, "endcolumn": 19, "stmt": [17,9,17,26], "code": "        result = !p == old" },
    "656": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 17, "column": 24, "endline": 17, "endcolumn": 26, "stmt": [17,9,17,26], "code": "        result = !p == old" },
    "657": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 17, "column": 24, "endline": 17, "endcolumn": 26, "stmt": [17,9,17,26], "code": "        result = !p == old" },
    "658": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 17, "column": 18, "endline": 17, "endcolumn": 26, "stmt": [17,9,17,26], "code": "        result = !p == old" },
    "659": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 17, "column": 9, "endline": 17, "endcolumn": 16, "stmt": [17,9,17,26], "code": "        result = !p == old" },
    "660": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 18, "column": 12, "endline": 18, "endcolumn": 17, "stmt": [18,9,18,18], "code": "        if result:" },
    "661": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 18, "column": 9, "endline": 18, "endcolumn": 10, "stmt": [18,9,18,18], "code": "        if result:" },
    "662": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 19, "column": 14, "endline": 19, "endcolumn": 14, "stmt": [19,13,19,20], "code": "            !p = new" },
    "663": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 19, "column": 14, "endline": 19, "endcolumn": 14, "stmt": [19,13,19,20], "code": "            !p = new" },
    "664": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 19, "column": 18, "endline": 19, "endcolumn": 20, "stmt": [19,13,19,20], "code": "            !p = new" },
    "665": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 19, "column": 18, "endline": 19, "endcolumn": 20, "stmt": [19,13,19,20], "code": "            !p = new" },
    "666": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 19, "column": 13, "endline": 19, "endcolumn": 16, "stmt": [19,13,19,20], "code": "            !p = new" },
    "667": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 16, "column": 5, "endline": 16, "endcolumn": 15, "stmt": [16,5,16,15], "code": "    atomically:" },
    "668": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 16, "column": 5, "endline": 16, "endcolumn": 15, "stmt": [16,5,16,15], "code": "    atomically:" },
    "669": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 16, "column": 5, "endline": 16, "endcolumn": 15, "stmt": [16,5,16,15], "code": "    atomically:" },
    "670": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 15, "column": 1, "endline": 15, "endcolumn": 21, "stmt": [15,1,15,21], "code": "def cas(p, old, new):" },
    "671": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 21, "column": 1, "endline": 21, "endcolumn": 3, "stmt": [21,1,21,22], "code": "def BinSema(acquired):" },
    "672": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 21, "column": 1, "endline": 21, "endcolumn": 22, "stmt": [21,1,21,22], "code": "def BinSema(acquired):" },
    "673": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 22, "column": 14, "endline": 22, "endcolumn": 21, "stmt": [22,5,22,21], "code": "    result = acquired" },
    "674": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 22, "column": 14, "endline": 22, "endcolumn": 21, "stmt": [22,5,22,21], "code": "    result = acquired" },
    "675": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 22, "column": 14, "endline": 22, "endcolumn": 21, "stmt": [22,5,22,21], "code": "    result = acquired" },
    "676": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 22, "column": 5, "endline": 22, "endcolumn": 12, "stmt": [22,5,22,21], "code": "    result = acquired" },
    "677": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 21, "column": 1, "endline": 21, "endcolumn": 22, "stmt": [21,1,21,22], "code": "def BinSema(acquired):" },
    "678": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 24, "column": 1, "endline": 24, "endcolumn": 3, "stmt": [24,1,24,11], "code": "def Lock():" },
    "679": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 24, "column": 1, "endline": 24, "endcolumn": 11, "stmt": [24,1,24,11], "code": "def Lock():" },
    "680": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 25, "column": 14, "endline": 25, "endcolumn": 20, "stmt": [25,5,25,27], "code": "    result = BinSema(False)" },
    "681": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 25, "column": 14, "endline": 25, "endcolumn": 20, "stmt": [25,5,25,27], "code": "    result = BinSema(False)" },
    "682": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 25, "column": 22, "endline": 25, "endcolumn": 26, "stmt": [25,5,25,27], "code": "    result = BinSema(False)" },
    "683": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 25, "column": 14, "endline": 25, "endcolumn": 27, "stmt": [25,5,25,27], "code": "    result = BinSema(False)" },
    "684": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 25, "column": 5, "endline": 25, "endcolumn": 12, "stmt": [25,5,25,27], "code": "    result = BinSema(False)" },
    "685": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 24, "column": 1, "endline": 24, "endcolumn": 11, "stmt": [24,1,24,11], "code": "def Lock():" },
    "686": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 27, "column": 1, "endline": 27, "endcolumn": 3, "stmt": [27,1,27,22], "code": "def acquired(binsema):" },
    "687": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 27, "column": 1, "endline": 27, "endcolumn": 22, "stmt": [27,1,27,22], "code": "def acquired(binsema):" },
    "688": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 28, "column": 15, "endline": 28, "endcolumn": 21, "stmt": [28,5,28,21], "code": "    result = !binsema" },
    "689": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 28, "column": 15, "endline": 28, "endcolumn": 21, "stmt": [28,5,28,21], "code": "    result = !binsema" },
    "690": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 28, "column": 15, "endline": 28, "endcolumn": 21, "stmt": [28,5,28,21], "code": "    result = !binsema" },
    "691": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 28, "column": 14, "endline": 28, "endcolumn": 21, "stmt": [28,5,28,21], "code": "    result = !binsema" },
    "692": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 28, "column": 5, "endline": 28, "endcolumn": 12, "stmt": [28,5,28,21], "code": "    result = !binsema" },
    "693": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 27, "column": 1, "endline": 27, "endcolumn": 22, "stmt": [27,1,27,22], "code": "def acquired(binsema):" },
    "694": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 30, "column": 1, "endline": 30, "endcolumn": 3, "stmt": [30,1,30,21], "code": "def acquire(binsema):" },
    "695": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 30, "column": 1, "endline": 30, "endcolumn": 21, "stmt": [30,1,30,21], "code": "def acquire(binsema):" },
    "696": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 16, "stmt": [31,16,33,6], "code": "    atomically when not !binsema:" },
    "697": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 16, "stmt": [31,16,33,6], "code": "    atomically when not !binsema:" },
    "698": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 26, "endline": 31, "endcolumn": 32, "stmt": [31,16,31,32], "code": "    atomically when not !binsema:" },
    "699": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 25, "endline": 31, "endcolumn": 32, "stmt": [31,16,31,32], "code": "    atomically when not !binsema:" },
    "700": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 21, "endline": 31, "endcolumn": 32, "stmt": [31,16,31,32], "code": "    atomically when not !binsema:" },
    "701": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 32, "stmt": [31,16,31,32], "code": "    atomically when not !binsema:" },
    "702": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 32, "endline": 31, "endcolumn": 32, "stmt": [31,16,31,32], "code": "    atomically when not !binsema:" },
    "703": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 32, "stmt": [31,16,31,32], "code": "    atomically when not !binsema:" },
    "704": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 32, "stmt": [31,16,31,32], "code": "    atomically when not !binsema:" },
    "705": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 32, "endline": 31, "endcolumn": 32, "stmt": [31,16,31,32], "code": "    atomically when not !binsema:" },
    "706": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 32, "stmt": [31,16,31,32], "code": "    atomically when not !binsema:" },
    "707": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 32, "column": 10, "endline": 32, "endcolumn": 16, "stmt": [32,9,32,23], "code": "        !binsema = True" },
    "708": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 32, "column": 10, "endline": 32, "endcolumn": 16, "stmt": [32,9,32,23], "code": "        !binsema = True" },
    "709": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 32, "column": 20, "endline": 32, "endcolumn": 23, "stmt": [32,9,32,23], "code": "        !binsema = True" },
    "710": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 32, "column": 9, "endline": 32, "endcolumn": 18, "stmt": [32,9,32,23], "code": "        !binsema = True" },
    "711": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 31, "column": 16, "endline": 31, "endcolumn": 32, "stmt": [31,16,31,32], "code": "    atomically when not !binsema:" },
    "712": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 30, "column": 1, "endline": 30, "endcolumn": 21, "stmt": [30,1,30,21], "code": "def acquire(binsema):" },
    "713": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 34, "column": 1, "endline": 34, "endcolumn": 3, "stmt": [34,1,34,21], "code": "def release(binsema):" },
    "714": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 34, "column": 1, "endline": 34, "endcolumn": 21, "stmt": [34,1,34,21], "code": "def release(binsema):" },
    "715": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 35, "column": 5, "endline": 35, "endcolumn": 14, "stmt": [35,5,35,15], "code": "    atomically:" },
    "716": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 36, "column": 9, "endline": 36, "endcolumn": 23, "stmt": [36,9,36,23], "code": "        assert !binsema" },
    "717": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 36, "column": 9, "endline": 36, "endcolumn": 23, "stmt": [36,9,36,23], "code": "        assert !binsema" },
    "718": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 36, "column": 17, "endline": 36, "endcolumn": 23, "stmt": [36,9,36,23], "code": "        assert !binsema" },
    "719": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 36, "column": 16, "endline": 36, "endcolumn": 23, "stmt": [36,9,36,23], "code": "        assert !binsema" },
    "720": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 36, "column": 9, "endline": 36, "endcolumn": 14, "stmt": [36,9,36,23], "code": "        assert !binsema" },
    "721": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 36, "column": 9, "endline": 36, "endcolumn": 23, "stmt": [36,9,36,23], "code": "        assert !binsema" },
    "722": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 36, "column": 9, "endline": 36, "endcolumn": 23, "stmt": [36,9,36,23], "code": "        assert !binsema" },
    "723": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 37, "column": 10, "endline": 37, "endcolumn": 16, "stmt": [37,9,37,24], "code": "        !binsema = False" },
    "724": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 37, "column": 10, "endline": 37, "endcolumn": 16, "stmt": [37,9,37,24], "code": "        !binsema = False" },
    "725": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 37, "column": 20, "endline": 37, "endcolumn": 24, "stmt": [37,9,37,24], "code": "        !binsema = False" },
    "726": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 37, "column": 9, "endline": 37, "endcolumn": 18, "stmt": [37,9,37,24], "code": "        !binsema = False" },
    "727": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 35, "column": 5, "endline": 35, "endcolumn": 15, "stmt": [35,5,35,15], "code": "    atomically:" },
    "728": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 34, "column": 1, "endline": 34, "endcolumn": 21, "stmt": [34,1,34,21], "code": "def release(binsema):" },
    "729": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 39, "column": 1, "endline": 39, "endcolumn": 3, "stmt": [39,1,39,18], "code": "def held(binsema):" },
    "730": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 39, "column": 1, "endline": 39, "endcolumn": 18, "stmt": [39,1,39,18], "code": "def held(binsema):" },
    "731": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 40, "column": 15, "endline": 40, "endcolumn": 21, "stmt": [40,5,40,21], "code": "    result = !binsema" },
    "732": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 40, "column": 15, "endline": 40, "endcolumn": 21, "stmt": [40,5,40,21], "code": "    result = !binsema" },
    "733": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 40, "column": 15, "endline": 40, "endcolumn": 21, "stmt": [40,5,40,21], "code": "    result = !binsema" },
    "734": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 40, "column": 14, "endline": 40, "endcolumn": 21, "stmt": [40,5,40,21], "code": "    result = !binsema" },
    "735": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 40, "column": 5, "endline": 40, "endcolumn": 12, "stmt": [40,5,40,21], "code": "    result = !binsema" },
    "736": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 39, "column": 1, "endline": 39, "endcolumn": 18, "stmt": [39,1,39,18], "code": "def held(binsema):" },
    "737": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 42, "column": 1, "endline": 42, "endcolumn": 3, "stmt": [42,1,42,16], "code": "def Condition():" },
    "738": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 42, "column": 1, "endline": 42, "endcolumn": 16, "stmt": [42,1,42,16], "code": "def Condition():" },
    "739": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 43, "column": 14, "endline": 43, "endcolumn": 22, "stmt": [43,5,43,24], "code": "    result = bag.empty()" },
    "740": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 43, "column": 14, "endline": 43, "endcolumn": 22, "stmt": [43,5,43,24], "code": "    result = bag.empty()" },
    "741": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 43, "column": 23, "endline": 43, "endcolumn": 24, "stmt": [43,5,43,24], "code": "    result = bag.empty()" },
    "742": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 43, "column": 14, "endline": 43, "endcolumn": 24, "stmt": [43,5,43,24], "code": "    result = bag.empty()" },
    "743": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 43, "column": 5, "endline": 43, "endcolumn": 12, "stmt": [43,5,43,24], "code": "    result = bag.empty()" },
    "744": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 42, "column": 1, "endline": 42, "endcolumn": 16, "stmt": [42,1,42,16], "code": "def Condition():" },
    "745": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 45, "column": 1, "endline": 45, "endcolumn": 3, "stmt": [45,1,45,16], "code": "def wait(c, lk):" },
    "746": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 45, "column": 1, "endline": 45, "endcolumn": 16, "stmt": [45,1,45,16], "code": "def wait(c, lk):" },
    "747": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 46, "column": 15, "endline": 46, "endcolumn": 15, "stmt": [46,5,46,15], "code": "    var cnt = 0" },
    "748": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 46, "column": 5, "endline": 46, "endcolumn": 15, "stmt": [46,5,46,15], "code": "    var cnt = 0" },
    "749": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 47, "column": 23, "endline": 47, "endcolumn": 24, "stmt": [47,5,47,24], "code": "    let (), ctx = save():" },
    "750": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 47, "column": 23, "endline": 47, "endcolumn": 24, "stmt": [47,5,47,24], "code": "    let (), ctx = save():" },
    "751": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 47, "column": 19, "endline": 47, "endcolumn": 24, "stmt": [47,5,47,24], "code": "    let (), ctx = save():" },
    "752": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 47, "column": 19, "endline": 47, "endcolumn": 24, "stmt": [47,5,47,24], "code": "    let (), ctx = save():" },
    "753": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 47, "column": 5, "endline": 47, "endcolumn": 17, "stmt": [47,5,47,24], "code": "    let (), ctx = save():" },
    "754": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 48, "column": 9, "endline": 48, "endcolumn": 18, "stmt": [48,9,48,19], "code": "        atomically:" },
    "755": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 49, "column": 19, "endline": 49, "endcolumn": 34, "stmt": [49,13,49,43], "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "756": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 49, "column": 36, "endline": 49, "endcolumn": 42, "stmt": [49,13,49,43], "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "757": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 49, "column": 37, "endline": 49, "endcolumn": 37, "stmt": [49,13,49,43], "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "758": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 49, "column": 36, "endline": 49, "endcolumn": 37, "stmt": [49,13,49,43], "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "759": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 49, "column": 36, "endline": 49, "endcolumn": 42, "stmt": [49,13,49,43], "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "760": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 49, "column": 40, "endline": 49, "endcolumn": 42, "stmt": [49,13,49,43], "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "761": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 49, "column": 36, "endline": 49, "endcolumn": 42, "stmt": [49,13,49,43], "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "762": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 49, "column": 19, "endline": 49, "endcolumn": 43, "stmt": [49,13,49,43], "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "763": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 49, "column": 13, "endline": 49, "endcolumn": 17, "stmt": [49,13,49,43], "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "764": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 50, "column": 14, "endline": 50, "endcolumn": 14, "stmt": [50,13,50,33], "code": "            !c = bag.add(!c, ctx)" },
    "765": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 50, "column": 18, "endline": 50, "endcolumn": 24, "stmt": [50,13,50,33], "code": "            !c = bag.add(!c, ctx)" },
    "766": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 50, "column": 26, "endline": 50, "endcolumn": 32, "stmt": [50,13,50,33], "code": "            !c = bag.add(!c, ctx)" },
    "767": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 50, "column": 27, "endline": 50, "endcolumn": 27, "stmt": [50,13,50,33], "code": "            !c = bag.add(!c, ctx)" },
    "768": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 50, "column": 26, "endline": 50, "endcolumn": 27, "stmt": [50,13,50,33], "code": "            !c = bag.add(!c, ctx)" },
    "769": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 50, "column": 26, "endline": 50, "endcolumn": 32, "stmt": [50,13,50,33], "code": "            !c = bag.add(!c, ctx)" },
    "770": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 50, "column": 30, "endline": 50, "endcolumn": 32, "stmt": [50,13,50,33], "code": "            !c = bag.add(!c, ctx)" },
    "771": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 50, "column": 26, "endline": 50, "endcolumn": 32, "stmt": [50,13,50,33], "code": "            !c = bag.add(!c, ctx)" },
    "772": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 50, "column": 18, "endline": 50, "endcolumn": 33, "stmt": [50,13,50,33], "code": "            !c = bag.add(!c, ctx)" },
    "773": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 50, "column": 13, "endline": 50, "endcolumn": 16, "stmt": [50,13,50,33], "code": "            !c = bag.add(!c, ctx)" },
    "774": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 51, "column": 14, "endline": 51, "endcolumn": 15, "stmt": [51,13,51,23], "code": "            !lk = False" },
    "775": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 51, "column": 19, "endline": 51, "endcolumn": 23, "stmt": [51,13,51,23], "code": "            !lk = False" },
    "776": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 51, "column": 13, "endline": 51, "endcolumn": 17, "stmt": [51,13,51,23], "code": "            !lk = False" },
    "777": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 48, "column": 9, "endline": 48, "endcolumn": 19, "stmt": [48,9,48,19], "code": "        atomically:" },
    "778": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 20, "endline": 52, "endcolumn": 20, "stmt": [52,20,54,6], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "779": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 20, "endline": 52, "endcolumn": 20, "stmt": [52,20,54,6], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "780": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 31, "endline": 52, "endcolumn": 32, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "781": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 30, "endline": 52, "endcolumn": 32, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "782": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 26, "endline": 52, "endcolumn": 32, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "783": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 25, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "784": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 40, "endline": 52, "endcolumn": 55, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "785": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 57, "endline": 52, "endcolumn": 63, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "786": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 58, "endline": 52, "endcolumn": 58, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "787": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 57, "endline": 52, "endcolumn": 58, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "788": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 57, "endline": 52, "endcolumn": 63, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "789": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 61, "endline": 52, "endcolumn": 63, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "790": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 57, "endline": 52, "endcolumn": 63, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "791": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 40, "endline": 52, "endcolumn": 64, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "792": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 69, "endline": 52, "endcolumn": 71, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "793": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 40, "endline": 52, "endcolumn": 71, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "794": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 35, "endline": 52, "endcolumn": 37, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "795": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 25, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "796": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 20, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "797": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 72, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "798": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 72, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "799": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 72, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "800": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 72, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "801": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 20, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "802": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 20, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "803": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 72, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "804": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 20, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "805": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 53, "column": 14, "endline": 53, "endcolumn": 15, "stmt": [53,13,53,22], "code": "            !lk = True" },
    "806": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 53, "column": 14, "endline": 53, "endcolumn": 15, "stmt": [53,13,53,22], "code": "            !lk = True" },
    "807": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 53, "column": 19, "endline": 53, "endcolumn": 22, "stmt": [53,13,53,22], "code": "            !lk = True" },
    "808": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 53, "column": 13, "endline": 53, "endcolumn": 17, "stmt": [53,13,53,22], "code": "            !lk = True" },
    "809": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 52, "column": 20, "endline": 52, "endcolumn": 72, "stmt": [52,20,52,72], "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "810": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 45, "column": 1, "endline": 45, "endcolumn": 16, "stmt": [45,1,45,16], "code": "def wait(c, lk):" },
    "811": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 55, "column": 1, "endline": 55, "endcolumn": 3, "stmt": [55,1,55,14], "code": "def notify(c):" },
    "812": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 55, "column": 1, "endline": 55, "endcolumn": 14, "stmt": [55,1,55,14], "code": "def notify(c):" },
    "813": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 56, "column": 16, "endline": 56, "endcolumn": 16, "stmt": [56,16,58,6], "code": "    atomically if !c != bag.empty():" },
    "814": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 56, "column": 20, "endline": 56, "endcolumn": 20, "stmt": [56,16,56,36], "code": "    atomically if !c != bag.empty():" },
    "815": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 56, "column": 19, "endline": 56, "endcolumn": 20, "stmt": [56,16,56,36], "code": "    atomically if !c != bag.empty():" },
    "816": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 56, "column": 25, "endline": 56, "endcolumn": 33, "stmt": [56,16,56,36], "code": "    atomically if !c != bag.empty():" },
    "817": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 56, "column": 34, "endline": 56, "endcolumn": 35, "stmt": [56,16,56,36], "code": "    atomically if !c != bag.empty():" },
    "818": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 56, "column": 25, "endline": 56, "endcolumn": 35, "stmt": [56,16,56,36], "code": "    atomically if !c != bag.empty():" },
    "819": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 56, "column": 19, "endline": 56, "endcolumn": 35, "stmt": [56,16,56,36], "code": "    atomically if !c != bag.empty():" },
    "820": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 56, "column": 16, "endline": 56, "endcolumn": 17, "stmt": [56,16,56,36], "code": "    atomically if !c != bag.empty():" },
    "821": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 10, "endline": 57, "endcolumn": 10, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "822": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 14, "endline": 57, "endcolumn": 23, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "823": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 25, "endline": 57, "endcolumn": 43, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "824": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 26, "endline": 57, "endcolumn": 26, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "825": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 25, "endline": 57, "endcolumn": 26, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "826": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 25, "endline": 57, "endcolumn": 43, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "827": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 29, "endline": 57, "endcolumn": 39, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "828": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 42, "endline": 57, "endcolumn": 42, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "829": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 42, "endline": 57, "endcolumn": 42, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "830": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 41, "endline": 57, "endcolumn": 42, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "831": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 29, "endline": 57, "endcolumn": 43, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "832": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 25, "endline": 57, "endcolumn": 43, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "833": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 14, "endline": 57, "endcolumn": 44, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "834": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 57, "column": 9, "endline": 57, "endcolumn": 12, "stmt": [57,9,57,44], "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "835": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 56, "column": 16, "endline": 56, "endcolumn": 36, "stmt": [56,16,56,36], "code": "    atomically if !c != bag.empty():" },
    "836": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 56, "column": 16, "endline": 56, "endcolumn": 36, "stmt": [56,16,56,36], "code": "    atomically if !c != bag.empty():" },
    "837": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 55, "column": 1, "endline": 55, "endcolumn": 14, "stmt": [55,1,55,14], "code": "def notify(c):" },
    "838": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 59, "column": 1, "endline": 59, "endcolumn": 3, "stmt": [59,1,59,17], "code": "def notifyAll(c):" },
    "839": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 59, "column": 1, "endline": 59, "endcolumn": 17, "stmt": [59,1,59,17], "code": "def notifyAll(c):" },
    "840": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 60, "column": 16, "endline": 60, "endcolumn": 16, "stmt": [60,16,60,31], "code": "    atomically !c = bag.empty()" },
    "841": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 60, "column": 17, "endline": 60, "endcolumn": 17, "stmt": [60,16,60,31], "code": "    atomically !c = bag.empty()" },
    "842": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 60, "column": 17, "endline": 60, "endcolumn": 17, "stmt": [60,16,60,31], "code": "    atomically !c = bag.empty()" },
    "843": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 60, "column": 21, "endline": 60, "endcolumn": 29, "stmt": [60,16,60,31], "code": "    atomically !c = bag.empty()" },
    "844": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 60, "column": 30, "endline": 60, "endcolumn": 31, "stmt": [60,16,60,31], "code": "    atomically !c = bag.empty()" },
    "845": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 60, "column": 21, "endline": 60, "endcolumn": 31, "stmt": [60,16,60,31], "code": "    atomically !c = bag.empty()" },
    "846": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 60, "column": 16, "endline": 60, "endcolumn": 19, "stmt": [60,16,60,31], "code": "    atomically !c = bag.empty()" },
    "847": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 60, "column": 16, "endline": 60, "endcolumn": 31, "stmt": [60,16,60,31], "code": "    atomically !c = bag.empty()" },
    "848": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 59, "column": 1, "endline": 59, "endcolumn": 17, "stmt": [59,1,59,17], "code": "def notifyAll(c):" },
    "849": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 62, "column": 1, "endline": 62, "endcolumn": 3, "stmt": [62,1,62,19], "code": "def Semaphore(cnt):" },
    "850": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 62, "column": 1, "endline": 62, "endcolumn": 19, "stmt": [62,1,62,19], "code": "def Semaphore(cnt):" },
    "851": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 63, "column": 14, "endline": 63, "endcolumn": 16, "stmt": [63,5,63,16], "code": "    result = cnt" },
    "852": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 63, "column": 14, "endline": 63, "endcolumn": 16, "stmt": [63,5,63,16], "code": "    result = cnt" },
    "853": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 63, "column": 14, "endline": 63, "endcolumn": 16, "stmt": [63,5,63,16], "code": "    result = cnt" },
    "854": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 63, "column": 5, "endline": 63, "endcolumn": 12, "stmt": [63,5,63,16], "code": "    result = cnt" },
    "855": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 62, "column": 1, "endline": 62, "endcolumn": 19, "stmt": [62,1,62,19], "code": "def Semaphore(cnt):" },
    "856": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 65, "column": 1, "endline": 65, "endcolumn": 3, "stmt": [65,1,65,12], "code": "def P(sema):" },
    "857": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 65, "column": 1, "endline": 65, "endcolumn": 12, "stmt": [65,1,65,12], "code": "def P(sema):" },
    "858": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 16, "endline": 66, "endcolumn": 16, "stmt": [66,16,68,6], "code": "    atomically when !sema > 0:" },
    "859": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 16, "endline": 66, "endcolumn": 16, "stmt": [66,16,68,6], "code": "    atomically when !sema > 0:" },
    "860": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 22, "endline": 66, "endcolumn": 25, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "861": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 21, "endline": 66, "endcolumn": 25, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "862": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 29, "endline": 66, "endcolumn": 29, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "863": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 21, "endline": 66, "endcolumn": 29, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "864": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 16, "endline": 66, "endcolumn": 29, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "865": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 29, "endline": 66, "endcolumn": 29, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "866": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 16, "endline": 66, "endcolumn": 29, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "867": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 16, "endline": 66, "endcolumn": 29, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "868": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 29, "endline": 66, "endcolumn": 29, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "869": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 16, "endline": 66, "endcolumn": 29, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "870": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 67, "column": 10, "endline": 67, "endcolumn": 13, "stmt": [67,9,67,18], "code": "        !sema -= 1" },
    "871": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 67, "column": 10, "endline": 67, "endcolumn": 13, "stmt": [67,9,67,18], "code": "        !sema -= 1" },
    "872": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 67, "column": 9, "endline": 67, "endcolumn": 18, "stmt": [67,9,67,18], "code": "        !sema -= 1" },
    "873": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 67, "column": 9, "endline": 67, "endcolumn": 18, "stmt": [67,9,67,18], "code": "        !sema -= 1" },
    "874": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 67, "column": 18, "endline": 67, "endcolumn": 18, "stmt": [67,9,67,18], "code": "        !sema -= 1" },
    "875": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 67, "column": 9, "endline": 67, "endcolumn": 18, "stmt": [67,9,67,18], "code": "        !sema -= 1" },
    "876": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 67, "column": 9, "endline": 67, "endcolumn": 16, "stmt": [67,9,67,18], "code": "        !sema -= 1" },
    "877": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 66, "column": 16, "endline": 66, "endcolumn": 29, "stmt": [66,16,66,29], "code": "    atomically when !sema > 0:" },
    "878": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 65, "column": 1, "endline": 65, "endcolumn": 12, "stmt": [65,1,65,12], "code": "def P(sema):" },
    "879": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 69, "column": 1, "endline": 69, "endcolumn": 3, "stmt": [69,1,69,12], "code": "def V(sema):" },
    "880": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 69, "column": 1, "endline": 69, "endcolumn": 12, "stmt": [69,1,69,12], "code": "def V(sema):" },
    "881": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 70, "column": 16, "endline": 70, "endcolumn": 16, "stmt": [70,16,70,25], "code": "    atomically !sema += 1" },
    "882": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 70, "column": 17, "endline": 70, "endcolumn": 20, "stmt": [70,16,70,25], "code": "    atomically !sema += 1" },
    "883": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 70, "column": 17, "endline": 70, "endcolumn": 20, "stmt": [70,16,70,25], "code": "    atomically !sema += 1" },
    "884": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 70, "column": 16, "endline": 70, "endcolumn": 25, "stmt": [70,16,70,25], "code": "    atomically !sema += 1" },
    "885": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 70, "column": 16, "endline": 70, "endcolumn": 25, "stmt": [70,16,70,25], "code": "    atomically !sema += 1" },
    "886": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 70, "column": 25, "endline": 70, "endcolumn": 25, "stmt": [70,16,70,25], "code": "    atomically !sema += 1" },
    "887": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 70, "column": 16, "endline": 70, "endcolumn": 25, "stmt": [70,16,70,25], "code": "    atomically !sema += 1" },
    "888": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 70, "column": 16, "endline": 70, "endcolumn": 23, "stmt": [70,16,70,25], "code": "    atomically !sema += 1" },
    "889": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 70, "column": 16, "endline": 70, "endcolumn": 25, "stmt": [70,16,70,25], "code": "    atomically !sema += 1" },
    "890": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 69, "column": 1, "endline": 69, "endcolumn": 12, "stmt": [69,1,69,12], "code": "def V(sema):" },
    "891": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 72, "column": 1, "endline": 72, "endcolumn": 3, "stmt": [72,1,72,12], "code": "def Queue():" },
    "892": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 72, "column": 1, "endline": 72, "endcolumn": 12, "stmt": [72,1,72,12], "code": "def Queue():" },
    "893": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 73, "column": 14, "endline": 73, "endcolumn": 15, "stmt": [73,5,73,15], "code": "    result = []" },
    "894": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 73, "column": 14, "endline": 73, "endcolumn": 15, "stmt": [73,5,73,15], "code": "    result = []" },
    "895": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 73, "column": 5, "endline": 73, "endcolumn": 12, "stmt": [73,5,73,15], "code": "    result = []" },
    "896": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 72, "column": 1, "endline": 72, "endcolumn": 12, "stmt": [72,1,72,12], "code": "def Queue():" },
    "897": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 75, "column": 1, "endline": 75, "endcolumn": 3, "stmt": [75,1,75,11], "code": "def get(q):" },
    "898": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 75, "column": 1, "endline": 75, "endcolumn": 11, "stmt": [75,1,75,11], "code": "def get(q):" },
    "899": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 16, "endline": 76, "endcolumn": 16, "stmt": [76,16,79,6], "code": "    atomically when !q != []:" },
    "900": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 16, "endline": 76, "endcolumn": 16, "stmt": [76,16,79,6], "code": "    atomically when !q != []:" },
    "901": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 16, "endline": 76, "endcolumn": 16, "stmt": [76,16,79,6], "code": "    atomically when !q != []:" },
    "902": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 22, "endline": 76, "endcolumn": 22, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "903": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 21, "endline": 76, "endcolumn": 22, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "904": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 27, "endline": 76, "endcolumn": 28, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "905": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 21, "endline": 76, "endcolumn": 28, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "906": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 16, "endline": 76, "endcolumn": 28, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "907": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 28, "endline": 76, "endcolumn": 28, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "908": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 16, "endline": 76, "endcolumn": 28, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "909": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 16, "endline": 76, "endcolumn": 28, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "910": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 28, "endline": 76, "endcolumn": 28, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "911": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 16, "endline": 76, "endcolumn": 28, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "912": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 77, "column": 18, "endline": 77, "endcolumn": 26, "stmt": [77,9,77,30], "code": "        result = list.head(!q)" },
    "913": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 77, "column": 29, "endline": 77, "endcolumn": 29, "stmt": [77,9,77,30], "code": "        result = list.head(!q)" },
    "914": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 77, "column": 28, "endline": 77, "endcolumn": 29, "stmt": [77,9,77,30], "code": "        result = list.head(!q)" },
    "915": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 77, "column": 18, "endline": 77, "endcolumn": 30, "stmt": [77,9,77,30], "code": "        result = list.head(!q)" },
    "916": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 77, "column": 9, "endline": 77, "endcolumn": 16, "stmt": [77,9,77,30], "code": "        result = list.head(!q)" },
    "917": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 78, "column": 10, "endline": 78, "endcolumn": 10, "stmt": [78,9,78,26], "code": "        !q = list.tail(!q)" },
    "918": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 78, "column": 14, "endline": 78, "endcolumn": 22, "stmt": [78,9,78,26], "code": "        !q = list.tail(!q)" },
    "919": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 78, "column": 25, "endline": 78, "endcolumn": 25, "stmt": [78,9,78,26], "code": "        !q = list.tail(!q)" },
    "920": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 78, "column": 25, "endline": 78, "endcolumn": 25, "stmt": [78,9,78,26], "code": "        !q = list.tail(!q)" },
    "921": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 78, "column": 24, "endline": 78, "endcolumn": 25, "stmt": [78,9,78,26], "code": "        !q = list.tail(!q)" },
    "922": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 78, "column": 14, "endline": 78, "endcolumn": 26, "stmt": [78,9,78,26], "code": "        !q = list.tail(!q)" },
    "923": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 78, "column": 9, "endline": 78, "endcolumn": 12, "stmt": [78,9,78,26], "code": "        !q = list.tail(!q)" },
    "924": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 76, "column": 16, "endline": 76, "endcolumn": 28, "stmt": [76,16,76,28], "code": "    atomically when !q != []:" },
    "925": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 75, "column": 1, "endline": 75, "endcolumn": 11, "stmt": [75,1,75,11], "code": "def get(q):" },
    "926": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 80, "column": 1, "endline": 80, "endcolumn": 3, "stmt": [80,1,80,17], "code": "def put(q, item):" },
    "927": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 80, "column": 1, "endline": 80, "endcolumn": 17, "stmt": [80,1,80,17], "code": "def put(q, item):" },
    "928": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 16, "endline": 81, "endcolumn": 16, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "929": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 17, "endline": 81, "endcolumn": 17, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "930": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 21, "endline": 81, "endcolumn": 31, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "931": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 33, "endline": 81, "endcolumn": 40, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "932": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 34, "endline": 81, "endcolumn": 34, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "933": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 34, "endline": 81, "endcolumn": 34, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "934": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 33, "endline": 81, "endcolumn": 34, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "935": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 33, "endline": 81, "endcolumn": 40, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "936": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 37, "endline": 81, "endcolumn": 40, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "937": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 37, "endline": 81, "endcolumn": 40, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "938": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 33, "endline": 81, "endcolumn": 40, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "939": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 21, "endline": 81, "endcolumn": 41, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "940": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 16, "endline": 81, "endcolumn": 19, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "941": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 81, "column": 16, "endline": 81, "endcolumn": 41, "stmt": [81,16,81,41], "code": "    atomically !q = list.append(!q, item)" },
    "942": { "file": "/opt/homebrew/lib/python3.10/site-packages/harmony_model_checker/modules/synch.hny", "line": 80, "column": 1, "endline": 80, "endcolumn": 17, "stmt": [80,1,80,17], "code": "def put(q, item):" },
    "943": { "file": "stacksbs.hny", "line": 4, "column": 1, "endline": 4, "endcolumn": 3, "stmt": [4,1,4,13], "code": "def Stack(l):" },
    "944": { "file": "stacksbs.hny", "line": 4, "column": 1, "endline": 4, "endcolumn": 13, "stmt": [4,1,4,13], "code": "def Stack(l):" },
    "945": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "946": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "947": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 9, "endcolumn": 10, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "948": { "file": "stacksbs.hny", "line": 9, "column": 13, "endline": 9, "endcolumn": 19, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "949": { "file": "stacksbs.hny", "line": 9, "column": 21, "endline": 9, "endcolumn": 25, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "950": { "file": "stacksbs.hny", "line": 9, "column": 13, "endline": 9, "endcolumn": 26, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "951": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "952": { "file": "stacksbs.hny", "line": 10, "column": 5, "endline": 10, "endcolumn": 14, "stmt": [6,3,22,3], "code": "    .push_gate: { .sema: BinSema(True), .count: 0 }," },
    "953": { "file": "stacksbs.hny", "line": 10, "column": 19, "endline": 10, "endcolumn": 49, "stmt": [6,3,22,3], "code": "    .push_gate: { .sema: BinSema(True), .count: 0 }," },
    "954": { "file": "stacksbs.hny", "line": 10, "column": 19, "endline": 10, "endcolumn": 23, "stmt": [6,3,22,3], "code": "    .push_gate: { .sema: BinSema(True), .count: 0 }," },
    "955": { "file": "stacksbs.hny", "line": 10, "column": 26, "endline": 10, "endcolumn": 32, "stmt": [6,3,22,3], "code": "    .push_gate: { .sema: BinSema(True), .count: 0 }," },
    "956": { "file": "stacksbs.hny", "line": 10, "column": 34, "endline": 10, "endcolumn": 37, "stmt": [6,3,22,3], "code": "    .push_gate: { .sema: BinSema(True), .count: 0 }," },
    "957": { "file": "stacksbs.hny", "line": 10, "column": 26, "endline": 10, "endcolumn": 38, "stmt": [6,3,22,3], "code": "    .push_gate: { .sema: BinSema(True), .count: 0 }," },
    "958": { "file": "stacksbs.hny", "line": 10, "column": 19, "endline": 10, "endcolumn": 49, "stmt": [6,3,22,3], "code": "    .push_gate: { .sema: BinSema(True), .count: 0 }," },
    "959": { "file": "stacksbs.hny", "line": 10, "column": 41, "endline": 10, "endcolumn": 46, "stmt": [6,3,22,3], "code": "    .push_gate: { .sema: BinSema(True), .count: 0 }," },
    "960": { "file": "stacksbs.hny", "line": 10, "column": 49, "endline": 10, "endcolumn": 49, "stmt": [6,3,22,3], "code": "    .push_gate: { .sema: BinSema(True), .count: 0 }," },
    "961": { "file": "stacksbs.hny", "line": 10, "column": 19, "endline": 10, "endcolumn": 49, "stmt": [6,3,22,3], "code": "    .push_gate: { .sema: BinSema(True), .count: 0 }," },
    "962": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "963": { "file": "stacksbs.hny", "line": 11, "column": 5, "endline": 11, "endcolumn": 13, "stmt": [6,3,22,3], "code": "    .pop_gate: { .sema: BinSema(True), .count: 0 }," },
    "964": { "file": "stacksbs.hny", "line": 11, "column": 18, "endline": 11, "endcolumn": 48, "stmt": [6,3,22,3], "code": "    .pop_gate: { .sema: BinSema(True), .count: 0 }," },
    "965": { "file": "stacksbs.hny", "line": 11, "column": 18, "endline": 11, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .pop_gate: { .sema: BinSema(True), .count: 0 }," },
    "966": { "file": "stacksbs.hny", "line": 11, "column": 25, "endline": 11, "endcolumn": 31, "stmt": [6,3,22,3], "code": "    .pop_gate: { .sema: BinSema(True), .count: 0 }," },
    "967": { "file": "stacksbs.hny", "line": 11, "column": 33, "endline": 11, "endcolumn": 36, "stmt": [6,3,22,3], "code": "    .pop_gate: { .sema: BinSema(True), .count: 0 }," },
    "968": { "file": "stacksbs.hny", "line": 11, "column": 25, "endline": 11, "endcolumn": 37, "stmt": [6,3,22,3], "code": "    .pop_gate: { .sema: BinSema(True), .count: 0 }," },
    "969": { "file": "stacksbs.hny", "line": 11, "column": 18, "endline": 11, "endcolumn": 48, "stmt": [6,3,22,3], "code": "    .pop_gate: { .sema: BinSema(True), .count: 0 }," },
    "970": { "file": "stacksbs.hny", "line": 11, "column": 40, "endline": 11, "endcolumn": 45, "stmt": [6,3,22,3], "code": "    .pop_gate: { .sema: BinSema(True), .count: 0 }," },
    "971": { "file": "stacksbs.hny", "line": 11, "column": 48, "endline": 11, "endcolumn": 48, "stmt": [6,3,22,3], "code": "    .pop_gate: { .sema: BinSema(True), .count: 0 }," },
    "972": { "file": "stacksbs.hny", "line": 11, "column": 18, "endline": 11, "endcolumn": 48, "stmt": [6,3,22,3], "code": "    .pop_gate: { .sema: BinSema(True), .count: 0 }," },
    "973": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "974": { "file": "stacksbs.hny", "line": 12, "column": 5, "endline": 12, "endcolumn": 18, "stmt": [6,3,22,3], "code": "    .validate_gate: { .sema: BinSema(True), .count: 0 }," },
    "975": { "file": "stacksbs.hny", "line": 12, "column": 23, "endline": 12, "endcolumn": 53, "stmt": [6,3,22,3], "code": "    .validate_gate: { .sema: BinSema(True), .count: 0 }," },
    "976": { "file": "stacksbs.hny", "line": 12, "column": 23, "endline": 12, "endcolumn": 27, "stmt": [6,3,22,3], "code": "    .validate_gate: { .sema: BinSema(True), .count: 0 }," },
    "977": { "file": "stacksbs.hny", "line": 12, "column": 30, "endline": 12, "endcolumn": 36, "stmt": [6,3,22,3], "code": "    .validate_gate: { .sema: BinSema(True), .count: 0 }," },
    "978": { "file": "stacksbs.hny", "line": 12, "column": 38, "endline": 12, "endcolumn": 41, "stmt": [6,3,22,3], "code": "    .validate_gate: { .sema: BinSema(True), .count: 0 }," },
    "979": { "file": "stacksbs.hny", "line": 12, "column": 30, "endline": 12, "endcolumn": 42, "stmt": [6,3,22,3], "code": "    .validate_gate: { .sema: BinSema(True), .count: 0 }," },
    "980": { "file": "stacksbs.hny", "line": 12, "column": 23, "endline": 12, "endcolumn": 53, "stmt": [6,3,22,3], "code": "    .validate_gate: { .sema: BinSema(True), .count: 0 }," },
    "981": { "file": "stacksbs.hny", "line": 12, "column": 45, "endline": 12, "endcolumn": 50, "stmt": [6,3,22,3], "code": "    .validate_gate: { .sema: BinSema(True), .count: 0 }," },
    "982": { "file": "stacksbs.hny", "line": 12, "column": 53, "endline": 12, "endcolumn": 53, "stmt": [6,3,22,3], "code": "    .validate_gate: { .sema: BinSema(True), .count: 0 }," },
    "983": { "file": "stacksbs.hny", "line": 12, "column": 23, "endline": 12, "endcolumn": 53, "stmt": [6,3,22,3], "code": "    .validate_gate: { .sema: BinSema(True), .count: 0 }," },
    "984": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "985": { "file": "stacksbs.hny", "line": 15, "column": 5, "endline": 15, "endcolumn": 10, "stmt": [6,3,22,3], "code": "    .stack: []," },
    "986": { "file": "stacksbs.hny", "line": 15, "column": 13, "endline": 15, "endcolumn": 14, "stmt": [6,3,22,3], "code": "    .stack: []," },
    "987": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "988": { "file": "stacksbs.hny", "line": 16, "column": 5, "endline": 16, "endcolumn": 9, "stmt": [6,3,22,3], "code": "    .size: 0, # how do we make sure the max size is l" },
    "989": { "file": "stacksbs.hny", "line": 16, "column": 12, "endline": 16, "endcolumn": 12, "stmt": [6,3,22,3], "code": "    .size: 0, # how do we make sure the max size is l" },
    "990": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "991": { "file": "stacksbs.hny", "line": 17, "column": 5, "endline": 17, "endcolumn": 13, "stmt": [6,3,22,3], "code": "    .max_size: l, # capture maxSize parameter" },
    "992": { "file": "stacksbs.hny", "line": 17, "column": 16, "endline": 17, "endcolumn": 16, "stmt": [6,3,22,3], "code": "    .max_size: l, # capture maxSize parameter" },
    "993": { "file": "stacksbs.hny", "line": 17, "column": 16, "endline": 17, "endcolumn": 16, "stmt": [6,3,22,3], "code": "    .max_size: l, # capture maxSize parameter" },
    "994": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "995": { "file": "stacksbs.hny", "line": 18, "column": 5, "endline": 18, "endcolumn": 10, "stmt": [6,3,22,3], "code": "    .valid: 0,#+1 to this when '(' and -1 when ')'" },
    "996": { "file": "stacksbs.hny", "line": 18, "column": 13, "endline": 18, "endcolumn": 13, "stmt": [6,3,22,3], "code": "    .valid: 0,#+1 to this when '(' and -1 when ')'" },
    "997": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "998": { "file": "stacksbs.hny", "line": 19, "column": 5, "endline": 19, "endcolumn": 18, "stmt": [6,3,22,3], "code": "    .ever_negative: False, #whenever pushing, check after if valid is negative and if so make True" },
    "999": { "file": "stacksbs.hny", "line": 19, "column": 21, "endline": 19, "endcolumn": 25, "stmt": [6,3,22,3], "code": "    .ever_negative: False, #whenever pushing, check after if valid is negative and if so make True" },
    "1000": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "1001": { "file": "stacksbs.hny", "line": 20, "column": 5, "endline": 20, "endcolumn": 18, "stmt": [6,3,22,3], "code": "    .problem_index: -1" },
    "1002": { "file": "stacksbs.hny", "line": 20, "column": 21, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .problem_index: -1" },
    "1003": { "file": "stacksbs.hny", "line": 9, "column": 5, "endline": 20, "endcolumn": 22, "stmt": [6,3,22,3], "code": "    .mutex: BinSema(False), #main gate" },
    "1004": { "file": "stacksbs.hny", "line": 6, "column": 3, "endline": 6, "endcolumn": 10, "stmt": [6,3,22,3], "code": "  result = {" },
    "1005": { "file": "stacksbs.hny", "line": 4, "column": 1, "endline": 4, "endcolumn": 13, "stmt": [4,1,4,13], "code": "def Stack(l):" },
    "1006": { "file": "stacksbs.hny", "line": 24, "column": 1, "endline": 24, "endcolumn": 3, "stmt": [24,1,24,15], "code": "def push(s, c):" },
    "1007": { "file": "stacksbs.hny", "line": 24, "column": 1, "endline": 24, "endcolumn": 15, "stmt": [24,1,24,15], "code": "def push(s, c):" },
    "1008": { "file": "stacksbs.hny", "line": 26, "column": 3, "endline": 26, "endcolumn": 9, "stmt": [26,3,26,20], "code": "  acquire(?s->mutex)" },
    "1009": { "file": "stacksbs.hny", "line": 26, "column": 12, "endline": 26, "endcolumn": 12, "stmt": [26,3,26,20], "code": "  acquire(?s->mutex)" },
    "1010": { "file": "stacksbs.hny", "line": 26, "column": 15, "endline": 26, "endcolumn": 19, "stmt": [26,3,26,20], "code": "  acquire(?s->mutex)" },
    "1011": { "file": "stacksbs.hny", "line": 26, "column": 12, "endline": 26, "endcolumn": 19, "stmt": [26,3,26,20], "code": "  acquire(?s->mutex)" },
    "1012": { "file": "stacksbs.hny", "line": 26, "column": 3, "endline": 26, "endcolumn": 20, "stmt": [26,3,26,20], "code": "  acquire(?s->mutex)" },
    "1013": { "file": "stacksbs.hny", "line": 26, "column": 3, "endline": 26, "endcolumn": 20, "stmt": [26,3,26,20], "code": "  acquire(?s->mutex)" },
    "1014": { "file": "stacksbs.hny", "line": 27, "column": 12, "endline": 27, "endcolumn": 12, "stmt": [27,3,27,35], "code": "  if (not (s->size < s->max_size)):" },
    "1015": { "file": "stacksbs.hny", "line": 27, "column": 15, "endline": 27, "endcolumn": 18, "stmt": [27,3,27,35], "code": "  if (not (s->size < s->max_size)):" },
    "1016": { "file": "stacksbs.hny", "line": 27, "column": 12, "endline": 27, "endcolumn": 18, "stmt": [27,3,27,35], "code": "  if (not (s->size < s->max_size)):" },
    "1017": { "file": "stacksbs.hny", "line": 27, "column": 12, "endline": 27, "endcolumn": 18, "stmt": [27,3,27,35], "code": "  if (not (s->size < s->max_size)):" },
    "1018": { "file": "stacksbs.hny", "line": 27, "column": 22, "endline": 27, "endcolumn": 22, "stmt": [27,3,27,35], "code": "  if (not (s->size < s->max_size)):" },
    "1019": { "file": "stacksbs.hny", "line": 27, "column": 25, "endline": 27, "endcolumn": 32, "stmt": [27,3,27,35], "code": "  if (not (s->size < s->max_size)):" },
    "1020": { "file": "stacksbs.hny", "line": 27, "column": 22, "endline": 27, "endcolumn": 32, "stmt": [27,3,27,35], "code": "  if (not (s->size < s->max_size)):" },
    "1021": { "file": "stacksbs.hny", "line": 27, "column": 22, "endline": 27, "endcolumn": 32, "stmt": [27,3,27,35], "code": "  if (not (s->size < s->max_size)):" },
    "1022": { "file": "stacksbs.hny", "line": 27, "column": 12, "endline": 27, "endcolumn": 32, "stmt": [27,3,27,35], "code": "  if (not (s->size < s->max_size)):" },
    "1023": { "file": "stacksbs.hny", "line": 27, "column": 3, "endline": 27, "endcolumn": 4, "stmt": [27,3,27,35], "code": "  if (not (s->size < s->max_size)):" },
    "1024": { "file": "stacksbs.hny", "line": 28, "column": 5, "endline": 28, "endcolumn": 5, "stmt": [28,5,28,27], "code": "    s->push_gate.count += 1" },
    "1025": { "file": "stacksbs.hny", "line": 28, "column": 8, "endline": 28, "endcolumn": 16, "stmt": [28,5,28,27], "code": "    s->push_gate.count += 1" },
    "1026": { "file": "stacksbs.hny", "line": 28, "column": 5, "endline": 28, "endcolumn": 16, "stmt": [28,5,28,27], "code": "    s->push_gate.count += 1" },
    "1027": { "file": "stacksbs.hny", "line": 28, "column": 17, "endline": 28, "endcolumn": 22, "stmt": [28,5,28,27], "code": "    s->push_gate.count += 1" },
    "1028": { "file": "stacksbs.hny", "line": 28, "column": 5, "endline": 28, "endcolumn": 22, "stmt": [28,5,28,27], "code": "    s->push_gate.count += 1" },
    "1029": { "file": "stacksbs.hny", "line": 28, "column": 5, "endline": 28, "endcolumn": 27, "stmt": [28,5,28,27], "code": "    s->push_gate.count += 1" },
    "1030": { "file": "stacksbs.hny", "line": 28, "column": 5, "endline": 28, "endcolumn": 27, "stmt": [28,5,28,27], "code": "    s->push_gate.count += 1" },
    "1031": { "file": "stacksbs.hny", "line": 28, "column": 27, "endline": 28, "endcolumn": 27, "stmt": [28,5,28,27], "code": "    s->push_gate.count += 1" },
    "1032": { "file": "stacksbs.hny", "line": 28, "column": 5, "endline": 28, "endcolumn": 27, "stmt": [28,5,28,27], "code": "    s->push_gate.count += 1" },
    "1033": { "file": "stacksbs.hny", "line": 28, "column": 5, "endline": 28, "endcolumn": 25, "stmt": [28,5,28,27], "code": "    s->push_gate.count += 1" },
    "1034": { "file": "stacksbs.hny", "line": 29, "column": 5, "endline": 29, "endcolumn": 11, "stmt": [29,5,29,22], "code": "    release(?s->mutex)" },
    "1035": { "file": "stacksbs.hny", "line": 29, "column": 14, "endline": 29, "endcolumn": 14, "stmt": [29,5,29,22], "code": "    release(?s->mutex)" },
    "1036": { "file": "stacksbs.hny", "line": 29, "column": 17, "endline": 29, "endcolumn": 21, "stmt": [29,5,29,22], "code": "    release(?s->mutex)" },
    "1037": { "file": "stacksbs.hny", "line": 29, "column": 14, "endline": 29, "endcolumn": 21, "stmt": [29,5,29,22], "code": "    release(?s->mutex)" },
    "1038": { "file": "stacksbs.hny", "line": 29, "column": 5, "endline": 29, "endcolumn": 22, "stmt": [29,5,29,22], "code": "    release(?s->mutex)" },
    "1039": { "file": "stacksbs.hny", "line": 29, "column": 5, "endline": 29, "endcolumn": 22, "stmt": [29,5,29,22], "code": "    release(?s->mutex)" },
    "1040": { "file": "stacksbs.hny", "line": 30, "column": 5, "endline": 30, "endcolumn": 11, "stmt": [30,5,30,31], "code": "    acquire(?s->push_gate.sema)" },
    "1041": { "file": "stacksbs.hny", "line": 30, "column": 14, "endline": 30, "endcolumn": 14, "stmt": [30,5,30,31], "code": "    acquire(?s->push_gate.sema)" },
    "1042": { "file": "stacksbs.hny", "line": 30, "column": 17, "endline": 30, "endcolumn": 25, "stmt": [30,5,30,31], "code": "    acquire(?s->push_gate.sema)" },
    "1043": { "file": "stacksbs.hny", "line": 30, "column": 14, "endline": 30, "endcolumn": 25, "stmt": [30,5,30,31], "code": "    acquire(?s->push_gate.sema)" },
    "1044": { "file": "stacksbs.hny", "line": 30, "column": 26, "endline": 30, "endcolumn": 30, "stmt": [30,5,30,31], "code": "    acquire(?s->push_gate.sema)" },
    "1045": { "file": "stacksbs.hny", "line": 30, "column": 14, "endline": 30, "endcolumn": 30, "stmt": [30,5,30,31], "code": "    acquire(?s->push_gate.sema)" },
    "1046": { "file": "stacksbs.hny", "line": 30, "column": 5, "endline": 30, "endcolumn": 31, "stmt": [30,5,30,31], "code": "    acquire(?s->push_gate.sema)" },
    "1047": { "file": "stacksbs.hny", "line": 30, "column": 5, "endline": 30, "endcolumn": 31, "stmt": [30,5,30,31], "code": "    acquire(?s->push_gate.sema)" },
    "1048": { "file": "stacksbs.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 5, "stmt": [31,5,31,27], "code": "    s->push_gate.count -= 1" },
    "1049": { "file": "stacksbs.hny", "line": 31, "column": 8, "endline": 31, "endcolumn": 16, "stmt": [31,5,31,27], "code": "    s->push_gate.count -= 1" },
    "1050": { "file": "stacksbs.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 16, "stmt": [31,5,31,27], "code": "    s->push_gate.count -= 1" },
    "1051": { "file": "stacksbs.hny", "line": 31, "column": 17, "endline": 31, "endcolumn": 22, "stmt": [31,5,31,27], "code": "    s->push_gate.count -= 1" },
    "1052": { "file": "stacksbs.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 22, "stmt": [31,5,31,27], "code": "    s->push_gate.count -= 1" },
    "1053": { "file": "stacksbs.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 27, "stmt": [31,5,31,27], "code": "    s->push_gate.count -= 1" },
    "1054": { "file": "stacksbs.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 27, "stmt": [31,5,31,27], "code": "    s->push_gate.count -= 1" },
    "1055": { "file": "stacksbs.hny", "line": 31, "column": 27, "endline": 31, "endcolumn": 27, "stmt": [31,5,31,27], "code": "    s->push_gate.count -= 1" },
    "1056": { "file": "stacksbs.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 27, "stmt": [31,5,31,27], "code": "    s->push_gate.count -= 1" },
    "1057": { "file": "stacksbs.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 25, "stmt": [31,5,31,27], "code": "    s->push_gate.count -= 1" },
    "1058": { "file": "stacksbs.hny", "line": 34, "column": 3, "endline": 34, "endcolumn": 3, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1059": { "file": "stacksbs.hny", "line": 34, "column": 6, "endline": 34, "endcolumn": 10, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1060": { "file": "stacksbs.hny", "line": 34, "column": 3, "endline": 34, "endcolumn": 10, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1061": { "file": "stacksbs.hny", "line": 34, "column": 14, "endline": 34, "endcolumn": 24, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1062": { "file": "stacksbs.hny", "line": 34, "column": 26, "endline": 34, "endcolumn": 36, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1063": { "file": "stacksbs.hny", "line": 34, "column": 26, "endline": 34, "endcolumn": 26, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1064": { "file": "stacksbs.hny", "line": 34, "column": 29, "endline": 34, "endcolumn": 33, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1065": { "file": "stacksbs.hny", "line": 34, "column": 26, "endline": 34, "endcolumn": 33, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1066": { "file": "stacksbs.hny", "line": 34, "column": 26, "endline": 34, "endcolumn": 33, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1067": { "file": "stacksbs.hny", "line": 34, "column": 26, "endline": 34, "endcolumn": 36, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1068": { "file": "stacksbs.hny", "line": 34, "column": 36, "endline": 34, "endcolumn": 36, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1069": { "file": "stacksbs.hny", "line": 34, "column": 26, "endline": 34, "endcolumn": 36, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1070": { "file": "stacksbs.hny", "line": 34, "column": 14, "endline": 34, "endcolumn": 37, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1071": { "file": "stacksbs.hny", "line": 34, "column": 3, "endline": 34, "endcolumn": 12, "stmt": [34,3,34,37], "code": "  s->stack = list.append(s->stack, c)" },
    "1072": { "file": "stacksbs.hny", "line": 36, "column": 3, "endline": 36, "endcolumn": 3, "stmt": [36,3,36,14], "code": "  s->size += 1" },
    "1073": { "file": "stacksbs.hny", "line": 36, "column": 6, "endline": 36, "endcolumn": 9, "stmt": [36,3,36,14], "code": "  s->size += 1" },
    "1074": { "file": "stacksbs.hny", "line": 36, "column": 3, "endline": 36, "endcolumn": 9, "stmt": [36,3,36,14], "code": "  s->size += 1" },
    "1075": { "file": "stacksbs.hny", "line": 36, "column": 3, "endline": 36, "endcolumn": 14, "stmt": [36,3,36,14], "code": "  s->size += 1" },
    "1076": { "file": "stacksbs.hny", "line": 36, "column": 3, "endline": 36, "endcolumn": 14, "stmt": [36,3,36,14], "code": "  s->size += 1" },
    "1077": { "file": "stacksbs.hny", "line": 36, "column": 14, "endline": 36, "endcolumn": 14, "stmt": [36,3,36,14], "code": "  s->size += 1" },
    "1078": { "file": "stacksbs.hny", "line": 36, "column": 3, "endline": 36, "endcolumn": 14, "stmt": [36,3,36,14], "code": "  s->size += 1" },
    "1079": { "file": "stacksbs.hny", "line": 36, "column": 3, "endline": 36, "endcolumn": 12, "stmt": [36,3,36,14], "code": "  s->size += 1" },
    "1080": { "file": "stacksbs.hny", "line": 37, "column": 6, "endline": 37, "endcolumn": 6, "stmt": [37,3,37,14], "code": "  if c == \"(\":" },
    "1081": { "file": "stacksbs.hny", "line": 37, "column": 11, "endline": 37, "endcolumn": 13, "stmt": [37,3,37,14], "code": "  if c == \"(\":" },
    "1082": { "file": "stacksbs.hny", "line": 37, "column": 6, "endline": 37, "endcolumn": 13, "stmt": [37,3,37,14], "code": "  if c == \"(\":" },
    "1083": { "file": "stacksbs.hny", "line": 37, "column": 3, "endline": 37, "endcolumn": 4, "stmt": [37,3,37,14], "code": "  if c == \"(\":" },
    "1084": { "file": "stacksbs.hny", "line": 38, "column": 7, "endline": 38, "endcolumn": 7, "stmt": [38,7,38,19], "code": "      s->valid += 1" },
    "1085": { "file": "stacksbs.hny", "line": 38, "column": 7, "endline": 38, "endcolumn": 7, "stmt": [38,7,38,19], "code": "      s->valid += 1" },
    "1086": { "file": "stacksbs.hny", "line": 38, "column": 10, "endline": 38, "endcolumn": 14, "stmt": [38,7,38,19], "code": "      s->valid += 1" },
    "1087": { "file": "stacksbs.hny", "line": 38, "column": 7, "endline": 38, "endcolumn": 14, "stmt": [38,7,38,19], "code": "      s->valid += 1" },
    "1088": { "file": "stacksbs.hny", "line": 38, "column": 7, "endline": 38, "endcolumn": 19, "stmt": [38,7,38,19], "code": "      s->valid += 1" },
    "1089": { "file": "stacksbs.hny", "line": 38, "column": 7, "endline": 38, "endcolumn": 19, "stmt": [38,7,38,19], "code": "      s->valid += 1" },
    "1090": { "file": "stacksbs.hny", "line": 38, "column": 19, "endline": 38, "endcolumn": 19, "stmt": [38,7,38,19], "code": "      s->valid += 1" },
    "1091": { "file": "stacksbs.hny", "line": 38, "column": 7, "endline": 38, "endcolumn": 19, "stmt": [38,7,38,19], "code": "      s->valid += 1" },
    "1092": { "file": "stacksbs.hny", "line": 38, "column": 7, "endline": 38, "endcolumn": 17, "stmt": [38,7,38,19], "code": "      s->valid += 1" },
    "1093": { "file": "stacksbs.hny", "line": 37, "column": 3, "endline": 37, "endcolumn": 14, "stmt": [37,3,37,14], "code": "  if c == \"(\":" },
    "1094": { "file": "stacksbs.hny", "line": 39, "column": 8, "endline": 39, "endcolumn": 8, "stmt": [39,3,39,16], "code": "  elif c == \")\":" },
    "1095": { "file": "stacksbs.hny", "line": 39, "column": 8, "endline": 39, "endcolumn": 8, "stmt": [39,3,39,16], "code": "  elif c == \")\":" },
    "1096": { "file": "stacksbs.hny", "line": 39, "column": 13, "endline": 39, "endcolumn": 15, "stmt": [39,3,39,16], "code": "  elif c == \")\":" },
    "1097": { "file": "stacksbs.hny", "line": 39, "column": 8, "endline": 39, "endcolumn": 15, "stmt": [39,3,39,16], "code": "  elif c == \")\":" },
    "1098": { "file": "stacksbs.hny", "line": 39, "column": 3, "endline": 39, "endcolumn": 6, "stmt": [39,3,39,16], "code": "  elif c == \")\":" },
    "1099": { "file": "stacksbs.hny", "line": 40, "column": 7, "endline": 40, "endcolumn": 7, "stmt": [40,7,40,19], "code": "      s->valid -= 1" },
    "1100": { "file": "stacksbs.hny", "line": 40, "column": 10, "endline": 40, "endcolumn": 14, "stmt": [40,7,40,19], "code": "      s->valid -= 1" },
    "1101": { "file": "stacksbs.hny", "line": 40, "column": 7, "endline": 40, "endcolumn": 14, "stmt": [40,7,40,19], "code": "      s->valid -= 1" },
    "1102": { "file": "stacksbs.hny", "line": 40, "column": 7, "endline": 40, "endcolumn": 19, "stmt": [40,7,40,19], "code": "      s->valid -= 1" },
    "1103": { "file": "stacksbs.hny", "line": 40, "column": 7, "endline": 40, "endcolumn": 19, "stmt": [40,7,40,19], "code": "      s->valid -= 1" },
    "1104": { "file": "stacksbs.hny", "line": 40, "column": 19, "endline": 40, "endcolumn": 19, "stmt": [40,7,40,19], "code": "      s->valid -= 1" },
    "1105": { "file": "stacksbs.hny", "line": 40, "column": 7, "endline": 40, "endcolumn": 19, "stmt": [40,7,40,19], "code": "      s->valid -= 1" },
    "1106": { "file": "stacksbs.hny", "line": 40, "column": 7, "endline": 40, "endcolumn": 17, "stmt": [40,7,40,19], "code": "      s->valid -= 1" },
    "1107": { "file": "stacksbs.hny", "line": 41, "column": 8, "endline": 41, "endcolumn": 8, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1108": { "file": "stacksbs.hny", "line": 41, "column": 11, "endline": 41, "endcolumn": 15, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1109": { "file": "stacksbs.hny", "line": 41, "column": 8, "endline": 41, "endcolumn": 15, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1110": { "file": "stacksbs.hny", "line": 41, "column": 8, "endline": 41, "endcolumn": 15, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1111": { "file": "stacksbs.hny", "line": 41, "column": 19, "endline": 41, "endcolumn": 19, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1112": { "file": "stacksbs.hny", "line": 41, "column": 8, "endline": 41, "endcolumn": 19, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1113": { "file": "stacksbs.hny", "line": 41, "column": 7, "endline": 41, "endcolumn": 49, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1114": { "file": "stacksbs.hny", "line": 41, "column": 32, "endline": 41, "endcolumn": 32, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1115": { "file": "stacksbs.hny", "line": 41, "column": 35, "endline": 41, "endcolumn": 47, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1116": { "file": "stacksbs.hny", "line": 41, "column": 32, "endline": 41, "endcolumn": 47, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1117": { "file": "stacksbs.hny", "line": 41, "column": 32, "endline": 41, "endcolumn": 47, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1118": { "file": "stacksbs.hny", "line": 41, "column": 27, "endline": 41, "endcolumn": 48, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1119": { "file": "stacksbs.hny", "line": 41, "column": 22, "endline": 41, "endcolumn": 24, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1120": { "file": "stacksbs.hny", "line": 41, "column": 7, "endline": 41, "endcolumn": 49, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1121": { "file": "stacksbs.hny", "line": 41, "column": 3, "endline": 41, "endcolumn": 4, "stmt": [41,3,41,51], "code": "  if ((s->valid < 0) and (not (s->ever_negative))):" },
    "1122": { "file": "stacksbs.hny", "line": 42, "column": 7, "endline": 42, "endcolumn": 7, "stmt": [42,7,42,29], "code": "      s->ever_negative = True" },
    "1123": { "file": "stacksbs.hny", "line": 42, "column": 10, "endline": 42, "endcolumn": 22, "stmt": [42,7,42,29], "code": "      s->ever_negative = True" },
    "1124": { "file": "stacksbs.hny", "line": 42, "column": 7, "endline": 42, "endcolumn": 22, "stmt": [42,7,42,29], "code": "      s->ever_negative = True" },
    "1125": { "file": "stacksbs.hny", "line": 42, "column": 26, "endline": 42, "endcolumn": 29, "stmt": [42,7,42,29], "code": "      s->ever_negative = True" },
    "1126": { "file": "stacksbs.hny", "line": 42, "column": 7, "endline": 42, "endcolumn": 24, "stmt": [42,7,42,29], "code": "      s->ever_negative = True" },
    "1127": { "file": "stacksbs.hny", "line": 43, "column": 7, "endline": 43, "endcolumn": 7, "stmt": [43,7,43,36], "code": "      s->problem_index = (s->size-1)" },
    "1128": { "file": "stacksbs.hny", "line": 43, "column": 10, "endline": 43, "endcolumn": 22, "stmt": [43,7,43,36], "code": "      s->problem_index = (s->size-1)" },
    "1129": { "file": "stacksbs.hny", "line": 43, "column": 7, "endline": 43, "endcolumn": 22, "stmt": [43,7,43,36], "code": "      s->problem_index = (s->size-1)" },
    "1130": { "file": "stacksbs.hny", "line": 43, "column": 27, "endline": 43, "endcolumn": 27, "stmt": [43,7,43,36], "code": "      s->problem_index = (s->size-1)" },
    "1131": { "file": "stacksbs.hny", "line": 43, "column": 30, "endline": 43, "endcolumn": 33, "stmt": [43,7,43,36], "code": "      s->problem_index = (s->size-1)" },
    "1132": { "file": "stacksbs.hny", "line": 43, "column": 27, "endline": 43, "endcolumn": 33, "stmt": [43,7,43,36], "code": "      s->problem_index = (s->size-1)" },
    "1133": { "file": "stacksbs.hny", "line": 43, "column": 27, "endline": 43, "endcolumn": 33, "stmt": [43,7,43,36], "code": "      s->problem_index = (s->size-1)" },
    "1134": { "file": "stacksbs.hny", "line": 43, "column": 35, "endline": 43, "endcolumn": 35, "stmt": [43,7,43,36], "code": "      s->problem_index = (s->size-1)" },
    "1135": { "file": "stacksbs.hny", "line": 43, "column": 27, "endline": 43, "endcolumn": 35, "stmt": [43,7,43,36], "code": "      s->problem_index = (s->size-1)" },
    "1136": { "file": "stacksbs.hny", "line": 43, "column": 7, "endline": 43, "endcolumn": 24, "stmt": [43,7,43,36], "code": "      s->problem_index = (s->size-1)" },
    "1137": { "file": "stacksbs.hny", "line": 45, "column": 3, "endline": 45, "endcolumn": 13, "stmt": [45,3,45,16], "code": "  release_one(s)" },
    "1138": { "file": "stacksbs.hny", "line": 45, "column": 15, "endline": 45, "endcolumn": 15, "stmt": [45,3,45,16], "code": "  release_one(s)" },
    "1139": { "file": "stacksbs.hny", "line": 45, "column": 15, "endline": 45, "endcolumn": 15, "stmt": [45,3,45,16], "code": "  release_one(s)" },
    "1140": { "file": "stacksbs.hny", "line": 45, "column": 3, "endline": 45, "endcolumn": 16, "stmt": [45,3,45,16], "code": "  release_one(s)" },
    "1141": { "file": "stacksbs.hny", "line": 45, "column": 3, "endline": 45, "endcolumn": 16, "stmt": [45,3,45,16], "code": "  release_one(s)" },
    "1142": { "file": "stacksbs.hny", "line": 24, "column": 1, "endline": 24, "endcolumn": 15, "stmt": [24,1,24,15], "code": "def push(s, c):" },
    "1143": { "file": "stacksbs.hny", "line": 47, "column": 1, "endline": 47, "endcolumn": 3, "stmt": [47,1,47,11], "code": "def pop(s):" },
    "1144": { "file": "stacksbs.hny", "line": 47, "column": 1, "endline": 47, "endcolumn": 11, "stmt": [47,1,47,11], "code": "def pop(s):" },
    "1145": { "file": "stacksbs.hny", "line": 49, "column": 3, "endline": 49, "endcolumn": 9, "stmt": [49,3,49,20], "code": "  acquire(?s->mutex)" },
    "1146": { "file": "stacksbs.hny", "line": 49, "column": 3, "endline": 49, "endcolumn": 9, "stmt": [49,3,49,20], "code": "  acquire(?s->mutex)" },
    "1147": { "file": "stacksbs.hny", "line": 49, "column": 12, "endline": 49, "endcolumn": 12, "stmt": [49,3,49,20], "code": "  acquire(?s->mutex)" },
    "1148": { "file": "stacksbs.hny", "line": 49, "column": 15, "endline": 49, "endcolumn": 19, "stmt": [49,3,49,20], "code": "  acquire(?s->mutex)" },
    "1149": { "file": "stacksbs.hny", "line": 49, "column": 12, "endline": 49, "endcolumn": 19, "stmt": [49,3,49,20], "code": "  acquire(?s->mutex)" },
    "1150": { "file": "stacksbs.hny", "line": 49, "column": 3, "endline": 49, "endcolumn": 20, "stmt": [49,3,49,20], "code": "  acquire(?s->mutex)" },
    "1151": { "file": "stacksbs.hny", "line": 49, "column": 3, "endline": 49, "endcolumn": 20, "stmt": [49,3,49,20], "code": "  acquire(?s->mutex)" },
    "1152": { "file": "stacksbs.hny", "line": 50, "column": 12, "endline": 50, "endcolumn": 12, "stmt": [50,3,50,25], "code": "  if (not (s->size > 0)):" },
    "1153": { "file": "stacksbs.hny", "line": 50, "column": 15, "endline": 50, "endcolumn": 18, "stmt": [50,3,50,25], "code": "  if (not (s->size > 0)):" },
    "1154": { "file": "stacksbs.hny", "line": 50, "column": 12, "endline": 50, "endcolumn": 18, "stmt": [50,3,50,25], "code": "  if (not (s->size > 0)):" },
    "1155": { "file": "stacksbs.hny", "line": 50, "column": 12, "endline": 50, "endcolumn": 18, "stmt": [50,3,50,25], "code": "  if (not (s->size > 0)):" },
    "1156": { "file": "stacksbs.hny", "line": 50, "column": 22, "endline": 50, "endcolumn": 22, "stmt": [50,3,50,25], "code": "  if (not (s->size > 0)):" },
    "1157": { "file": "stacksbs.hny", "line": 50, "column": 12, "endline": 50, "endcolumn": 22, "stmt": [50,3,50,25], "code": "  if (not (s->size > 0)):" },
    "1158": { "file": "stacksbs.hny", "line": 50, "column": 3, "endline": 50, "endcolumn": 4, "stmt": [50,3,50,25], "code": "  if (not (s->size > 0)):" },
    "1159": { "file": "stacksbs.hny", "line": 51, "column": 5, "endline": 51, "endcolumn": 5, "stmt": [51,5,51,26], "code": "    s->pop_gate.count += 1" },
    "1160": { "file": "stacksbs.hny", "line": 51, "column": 8, "endline": 51, "endcolumn": 15, "stmt": [51,5,51,26], "code": "    s->pop_gate.count += 1" },
    "1161": { "file": "stacksbs.hny", "line": 51, "column": 5, "endline": 51, "endcolumn": 15, "stmt": [51,5,51,26], "code": "    s->pop_gate.count += 1" },
    "1162": { "file": "stacksbs.hny", "line": 51, "column": 16, "endline": 51, "endcolumn": 21, "stmt": [51,5,51,26], "code": "    s->pop_gate.count += 1" },
    "1163": { "file": "stacksbs.hny", "line": 51, "column": 5, "endline": 51, "endcolumn": 21, "stmt": [51,5,51,26], "code": "    s->pop_gate.count += 1" },
    "1164": { "file": "stacksbs.hny", "line": 51, "column": 5, "endline": 51, "endcolumn": 26, "stmt": [51,5,51,26], "code": "    s->pop_gate.count += 1" },
    "1165": { "file": "stacksbs.hny", "line": 51, "column": 5, "endline": 51, "endcolumn": 26, "stmt": [51,5,51,26], "code": "    s->pop_gate.count += 1" },
    "1166": { "file": "stacksbs.hny", "line": 51, "column": 26, "endline": 51, "endcolumn": 26, "stmt": [51,5,51,26], "code": "    s->pop_gate.count += 1" },
    "1167": { "file": "stacksbs.hny", "line": 51, "column": 5, "endline": 51, "endcolumn": 26, "stmt": [51,5,51,26], "code": "    s->pop_gate.count += 1" },
    "1168": { "file": "stacksbs.hny", "line": 51, "column": 5, "endline": 51, "endcolumn": 24, "stmt": [51,5,51,26], "code": "    s->pop_gate.count += 1" },
    "1169": { "file": "stacksbs.hny", "line": 52, "column": 5, "endline": 52, "endcolumn": 11, "stmt": [52,5,52,22], "code": "    release(?s->mutex)                                                            " },
    "1170": { "file": "stacksbs.hny", "line": 52, "column": 14, "endline": 52, "endcolumn": 14, "stmt": [52,5,52,22], "code": "    release(?s->mutex)                                                            " },
    "1171": { "file": "stacksbs.hny", "line": 52, "column": 17, "endline": 52, "endcolumn": 21, "stmt": [52,5,52,22], "code": "    release(?s->mutex)                                                            " },
    "1172": { "file": "stacksbs.hny", "line": 52, "column": 14, "endline": 52, "endcolumn": 21, "stmt": [52,5,52,22], "code": "    release(?s->mutex)                                                            " },
    "1173": { "file": "stacksbs.hny", "line": 52, "column": 5, "endline": 52, "endcolumn": 22, "stmt": [52,5,52,22], "code": "    release(?s->mutex)                                                            " },
    "1174": { "file": "stacksbs.hny", "line": 52, "column": 5, "endline": 52, "endcolumn": 22, "stmt": [52,5,52,22], "code": "    release(?s->mutex)                                                            " },
    "1175": { "file": "stacksbs.hny", "line": 53, "column": 5, "endline": 53, "endcolumn": 11, "stmt": [53,5,53,30], "code": "    acquire(?s->pop_gate.sema)" },
    "1176": { "file": "stacksbs.hny", "line": 53, "column": 14, "endline": 53, "endcolumn": 14, "stmt": [53,5,53,30], "code": "    acquire(?s->pop_gate.sema)" },
    "1177": { "file": "stacksbs.hny", "line": 53, "column": 17, "endline": 53, "endcolumn": 24, "stmt": [53,5,53,30], "code": "    acquire(?s->pop_gate.sema)" },
    "1178": { "file": "stacksbs.hny", "line": 53, "column": 14, "endline": 53, "endcolumn": 24, "stmt": [53,5,53,30], "code": "    acquire(?s->pop_gate.sema)" },
    "1179": { "file": "stacksbs.hny", "line": 53, "column": 25, "endline": 53, "endcolumn": 29, "stmt": [53,5,53,30], "code": "    acquire(?s->pop_gate.sema)" },
    "1180": { "file": "stacksbs.hny", "line": 53, "column": 14, "endline": 53, "endcolumn": 29, "stmt": [53,5,53,30], "code": "    acquire(?s->pop_gate.sema)" },
    "1181": { "file": "stacksbs.hny", "line": 53, "column": 5, "endline": 53, "endcolumn": 30, "stmt": [53,5,53,30], "code": "    acquire(?s->pop_gate.sema)" },
    "1182": { "file": "stacksbs.hny", "line": 53, "column": 5, "endline": 53, "endcolumn": 30, "stmt": [53,5,53,30], "code": "    acquire(?s->pop_gate.sema)" },
    "1183": { "file": "stacksbs.hny", "line": 54, "column": 5, "endline": 54, "endcolumn": 5, "stmt": [54,5,54,26], "code": "    s->pop_gate.count -= 1" },
    "1184": { "file": "stacksbs.hny", "line": 54, "column": 8, "endline": 54, "endcolumn": 15, "stmt": [54,5,54,26], "code": "    s->pop_gate.count -= 1" },
    "1185": { "file": "stacksbs.hny", "line": 54, "column": 5, "endline": 54, "endcolumn": 15, "stmt": [54,5,54,26], "code": "    s->pop_gate.count -= 1" },
    "1186": { "file": "stacksbs.hny", "line": 54, "column": 16, "endline": 54, "endcolumn": 21, "stmt": [54,5,54,26], "code": "    s->pop_gate.count -= 1" },
    "1187": { "file": "stacksbs.hny", "line": 54, "column": 5, "endline": 54, "endcolumn": 21, "stmt": [54,5,54,26], "code": "    s->pop_gate.count -= 1" },
    "1188": { "file": "stacksbs.hny", "line": 54, "column": 5, "endline": 54, "endcolumn": 26, "stmt": [54,5,54,26], "code": "    s->pop_gate.count -= 1" },
    "1189": { "file": "stacksbs.hny", "line": 54, "column": 5, "endline": 54, "endcolumn": 26, "stmt": [54,5,54,26], "code": "    s->pop_gate.count -= 1" },
    "1190": { "file": "stacksbs.hny", "line": 54, "column": 26, "endline": 54, "endcolumn": 26, "stmt": [54,5,54,26], "code": "    s->pop_gate.count -= 1" },
    "1191": { "file": "stacksbs.hny", "line": 54, "column": 5, "endline": 54, "endcolumn": 26, "stmt": [54,5,54,26], "code": "    s->pop_gate.count -= 1" },
    "1192": { "file": "stacksbs.hny", "line": 54, "column": 5, "endline": 54, "endcolumn": 24, "stmt": [54,5,54,26], "code": "    s->pop_gate.count -= 1" },
    "1193": { "file": "stacksbs.hny", "line": 56, "column": 13, "endline": 56, "endcolumn": 25, "stmt": [56,3,56,35], "code": "  let rev = list.reversed(s->stack):" },
    "1194": { "file": "stacksbs.hny", "line": 56, "column": 27, "endline": 56, "endcolumn": 27, "stmt": [56,3,56,35], "code": "  let rev = list.reversed(s->stack):" },
    "1195": { "file": "stacksbs.hny", "line": 56, "column": 30, "endline": 56, "endcolumn": 34, "stmt": [56,3,56,35], "code": "  let rev = list.reversed(s->stack):" },
    "1196": { "file": "stacksbs.hny", "line": 56, "column": 27, "endline": 56, "endcolumn": 34, "stmt": [56,3,56,35], "code": "  let rev = list.reversed(s->stack):" },
    "1197": { "file": "stacksbs.hny", "line": 56, "column": 27, "endline": 56, "endcolumn": 34, "stmt": [56,3,56,35], "code": "  let rev = list.reversed(s->stack):" },
    "1198": { "file": "stacksbs.hny", "line": 56, "column": 13, "endline": 56, "endcolumn": 35, "stmt": [56,3,56,35], "code": "  let rev = list.reversed(s->stack):" },
    "1199": { "file": "stacksbs.hny", "line": 56, "column": 3, "endline": 56, "endcolumn": 11, "stmt": [56,3,56,35], "code": "  let rev = list.reversed(s->stack):" },
    "1200": { "file": "stacksbs.hny", "line": 57, "column": 16, "endline": 57, "endcolumn": 24, "stmt": [57,7,57,29], "code": "      result = list.head(rev)" },
    "1201": { "file": "stacksbs.hny", "line": 57, "column": 26, "endline": 57, "endcolumn": 28, "stmt": [57,7,57,29], "code": "      result = list.head(rev)" },
    "1202": { "file": "stacksbs.hny", "line": 57, "column": 16, "endline": 57, "endcolumn": 29, "stmt": [57,7,57,29], "code": "      result = list.head(rev)" },
    "1203": { "file": "stacksbs.hny", "line": 57, "column": 7, "endline": 57, "endcolumn": 14, "stmt": [57,7,57,29], "code": "      result = list.head(rev)" },
    "1204": { "file": "stacksbs.hny", "line": 58, "column": 7, "endline": 58, "endcolumn": 7, "stmt": [58,7,58,46], "code": "      s->stack = list.reversed(list.tail(rev))" },
    "1205": { "file": "stacksbs.hny", "line": 58, "column": 10, "endline": 58, "endcolumn": 14, "stmt": [58,7,58,46], "code": "      s->stack = list.reversed(list.tail(rev))" },
    "1206": { "file": "stacksbs.hny", "line": 58, "column": 7, "endline": 58, "endcolumn": 14, "stmt": [58,7,58,46], "code": "      s->stack = list.reversed(list.tail(rev))" },
    "1207": { "file": "stacksbs.hny", "line": 58, "column": 18, "endline": 58, "endcolumn": 30, "stmt": [58,7,58,46], "code": "      s->stack = list.reversed(list.tail(rev))" },
    "1208": { "file": "stacksbs.hny", "line": 58, "column": 32, "endline": 58, "endcolumn": 40, "stmt": [58,7,58,46], "code": "      s->stack = list.reversed(list.tail(rev))" },
    "1209": { "file": "stacksbs.hny", "line": 58, "column": 42, "endline": 58, "endcolumn": 44, "stmt": [58,7,58,46], "code": "      s->stack = list.reversed(list.tail(rev))" },
    "1210": { "file": "stacksbs.hny", "line": 58, "column": 42, "endline": 58, "endcolumn": 44, "stmt": [58,7,58,46], "code": "      s->stack = list.reversed(list.tail(rev))" },
    "1211": { "file": "stacksbs.hny", "line": 58, "column": 32, "endline": 58, "endcolumn": 45, "stmt": [58,7,58,46], "code": "      s->stack = list.reversed(list.tail(rev))" },
    "1212": { "file": "stacksbs.hny", "line": 58, "column": 18, "endline": 58, "endcolumn": 46, "stmt": [58,7,58,46], "code": "      s->stack = list.reversed(list.tail(rev))" },
    "1213": { "file": "stacksbs.hny", "line": 58, "column": 7, "endline": 58, "endcolumn": 16, "stmt": [58,7,58,46], "code": "      s->stack = list.reversed(list.tail(rev))" },
    "1214": { "file": "stacksbs.hny", "line": 60, "column": 7, "endline": 60, "endcolumn": 7, "stmt": [60,7,60,18], "code": "      s->size -= 1" },
    "1215": { "file": "stacksbs.hny", "line": 60, "column": 10, "endline": 60, "endcolumn": 13, "stmt": [60,7,60,18], "code": "      s->size -= 1" },
    "1216": { "file": "stacksbs.hny", "line": 60, "column": 7, "endline": 60, "endcolumn": 13, "stmt": [60,7,60,18], "code": "      s->size -= 1" },
    "1217": { "file": "stacksbs.hny", "line": 60, "column": 7, "endline": 60, "endcolumn": 18, "stmt": [60,7,60,18], "code": "      s->size -= 1" },
    "1218": { "file": "stacksbs.hny", "line": 60, "column": 7, "endline": 60, "endcolumn": 18, "stmt": [60,7,60,18], "code": "      s->size -= 1" },
    "1219": { "file": "stacksbs.hny", "line": 60, "column": 18, "endline": 60, "endcolumn": 18, "stmt": [60,7,60,18], "code": "      s->size -= 1" },
    "1220": { "file": "stacksbs.hny", "line": 60, "column": 7, "endline": 60, "endcolumn": 18, "stmt": [60,7,60,18], "code": "      s->size -= 1" },
    "1221": { "file": "stacksbs.hny", "line": 60, "column": 7, "endline": 60, "endcolumn": 16, "stmt": [60,7,60,18], "code": "      s->size -= 1" },
    "1222": { "file": "stacksbs.hny", "line": 61, "column": 10, "endline": 61, "endcolumn": 15, "stmt": [61,7,61,23], "code": "      if result == \"(\":" },
    "1223": { "file": "stacksbs.hny", "line": 61, "column": 20, "endline": 61, "endcolumn": 22, "stmt": [61,7,61,23], "code": "      if result == \"(\":" },
    "1224": { "file": "stacksbs.hny", "line": 61, "column": 10, "endline": 61, "endcolumn": 22, "stmt": [61,7,61,23], "code": "      if result == \"(\":" },
    "1225": { "file": "stacksbs.hny", "line": 61, "column": 7, "endline": 61, "endcolumn": 8, "stmt": [61,7,61,23], "code": "      if result == \"(\":" },
    "1226": { "file": "stacksbs.hny", "line": 62, "column": 11, "endline": 62, "endcolumn": 11, "stmt": [62,11,62,23], "code": "          s->valid -= 1" },
    "1227": { "file": "stacksbs.hny", "line": 62, "column": 14, "endline": 62, "endcolumn": 18, "stmt": [62,11,62,23], "code": "          s->valid -= 1" },
    "1228": { "file": "stacksbs.hny", "line": 62, "column": 11, "endline": 62, "endcolumn": 18, "stmt": [62,11,62,23], "code": "          s->valid -= 1" },
    "1229": { "file": "stacksbs.hny", "line": 62, "column": 11, "endline": 62, "endcolumn": 23, "stmt": [62,11,62,23], "code": "          s->valid -= 1" },
    "1230": { "file": "stacksbs.hny", "line": 62, "column": 11, "endline": 62, "endcolumn": 23, "stmt": [62,11,62,23], "code": "          s->valid -= 1" },
    "1231": { "file": "stacksbs.hny", "line": 62, "column": 23, "endline": 62, "endcolumn": 23, "stmt": [62,11,62,23], "code": "          s->valid -= 1" },
    "1232": { "file": "stacksbs.hny", "line": 62, "column": 11, "endline": 62, "endcolumn": 23, "stmt": [62,11,62,23], "code": "          s->valid -= 1" },
    "1233": { "file": "stacksbs.hny", "line": 62, "column": 11, "endline": 62, "endcolumn": 21, "stmt": [62,11,62,23], "code": "          s->valid -= 1" },
    "1234": { "file": "stacksbs.hny", "line": 61, "column": 7, "endline": 61, "endcolumn": 23, "stmt": [61,7,61,23], "code": "      if result == \"(\":" },
    "1235": { "file": "stacksbs.hny", "line": 63, "column": 12, "endline": 63, "endcolumn": 17, "stmt": [63,7,63,25], "code": "      elif result == \")\":" },
    "1236": { "file": "stacksbs.hny", "line": 63, "column": 22, "endline": 63, "endcolumn": 24, "stmt": [63,7,63,25], "code": "      elif result == \")\":" },
    "1237": { "file": "stacksbs.hny", "line": 63, "column": 12, "endline": 63, "endcolumn": 24, "stmt": [63,7,63,25], "code": "      elif result == \")\":" },
    "1238": { "file": "stacksbs.hny", "line": 63, "column": 7, "endline": 63, "endcolumn": 10, "stmt": [63,7,63,25], "code": "      elif result == \")\":" },
    "1239": { "file": "stacksbs.hny", "line": 64, "column": 11, "endline": 64, "endcolumn": 11, "stmt": [64,11,64,23], "code": "          s->valid += 1" },
    "1240": { "file": "stacksbs.hny", "line": 64, "column": 14, "endline": 64, "endcolumn": 18, "stmt": [64,11,64,23], "code": "          s->valid += 1" },
    "1241": { "file": "stacksbs.hny", "line": 64, "column": 11, "endline": 64, "endcolumn": 18, "stmt": [64,11,64,23], "code": "          s->valid += 1" },
    "1242": { "file": "stacksbs.hny", "line": 64, "column": 11, "endline": 64, "endcolumn": 23, "stmt": [64,11,64,23], "code": "          s->valid += 1" },
    "1243": { "file": "stacksbs.hny", "line": 64, "column": 11, "endline": 64, "endcolumn": 23, "stmt": [64,11,64,23], "code": "          s->valid += 1" },
    "1244": { "file": "stacksbs.hny", "line": 64, "column": 23, "endline": 64, "endcolumn": 23, "stmt": [64,11,64,23], "code": "          s->valid += 1" },
    "1245": { "file": "stacksbs.hny", "line": 64, "column": 11, "endline": 64, "endcolumn": 23, "stmt": [64,11,64,23], "code": "          s->valid += 1" },
    "1246": { "file": "stacksbs.hny", "line": 64, "column": 11, "endline": 64, "endcolumn": 21, "stmt": [64,11,64,23], "code": "          s->valid += 1" },
    "1247": { "file": "stacksbs.hny", "line": 65, "column": 10, "endline": 65, "endcolumn": 10, "stmt": [65,7,65,37], "code": "      if s->size == s->problem_index:" },
    "1248": { "file": "stacksbs.hny", "line": 65, "column": 13, "endline": 65, "endcolumn": 16, "stmt": [65,7,65,37], "code": "      if s->size == s->problem_index:" },
    "1249": { "file": "stacksbs.hny", "line": 65, "column": 10, "endline": 65, "endcolumn": 16, "stmt": [65,7,65,37], "code": "      if s->size == s->problem_index:" },
    "1250": { "file": "stacksbs.hny", "line": 65, "column": 10, "endline": 65, "endcolumn": 16, "stmt": [65,7,65,37], "code": "      if s->size == s->problem_index:" },
    "1251": { "file": "stacksbs.hny", "line": 65, "column": 21, "endline": 65, "endcolumn": 21, "stmt": [65,7,65,37], "code": "      if s->size == s->problem_index:" },
    "1252": { "file": "stacksbs.hny", "line": 65, "column": 24, "endline": 65, "endcolumn": 36, "stmt": [65,7,65,37], "code": "      if s->size == s->problem_index:" },
    "1253": { "file": "stacksbs.hny", "line": 65, "column": 21, "endline": 65, "endcolumn": 36, "stmt": [65,7,65,37], "code": "      if s->size == s->problem_index:" },
    "1254": { "file": "stacksbs.hny", "line": 65, "column": 21, "endline": 65, "endcolumn": 36, "stmt": [65,7,65,37], "code": "      if s->size == s->problem_index:" },
    "1255": { "file": "stacksbs.hny", "line": 65, "column": 10, "endline": 65, "endcolumn": 36, "stmt": [65,7,65,37], "code": "      if s->size == s->problem_index:" },
    "1256": { "file": "stacksbs.hny", "line": 65, "column": 7, "endline": 65, "endcolumn": 8, "stmt": [65,7,65,37], "code": "      if s->size == s->problem_index:" },
    "1257": { "file": "stacksbs.hny", "line": 66, "column": 11, "endline": 66, "endcolumn": 11, "stmt": [66,11,66,31], "code": "          s->problem_index = -1" },
    "1258": { "file": "stacksbs.hny", "line": 66, "column": 14, "endline": 66, "endcolumn": 26, "stmt": [66,11,66,31], "code": "          s->problem_index = -1" },
    "1259": { "file": "stacksbs.hny", "line": 66, "column": 11, "endline": 66, "endcolumn": 26, "stmt": [66,11,66,31], "code": "          s->problem_index = -1" },
    "1260": { "file": "stacksbs.hny", "line": 66, "column": 30, "endline": 66, "endcolumn": 31, "stmt": [66,11,66,31], "code": "          s->problem_index = -1" },
    "1261": { "file": "stacksbs.hny", "line": 66, "column": 11, "endline": 66, "endcolumn": 28, "stmt": [66,11,66,31], "code": "          s->problem_index = -1" },
    "1262": { "file": "stacksbs.hny", "line": 67, "column": 11, "endline": 67, "endcolumn": 11, "stmt": [67,11,67,34], "code": "          s->ever_negative = False" },
    "1263": { "file": "stacksbs.hny", "line": 67, "column": 14, "endline": 67, "endcolumn": 26, "stmt": [67,11,67,34], "code": "          s->ever_negative = False" },
    "1264": { "file": "stacksbs.hny", "line": 67, "column": 11, "endline": 67, "endcolumn": 26, "stmt": [67,11,67,34], "code": "          s->ever_negative = False" },
    "1265": { "file": "stacksbs.hny", "line": 67, "column": 30, "endline": 67, "endcolumn": 34, "stmt": [67,11,67,34], "code": "          s->ever_negative = False" },
    "1266": { "file": "stacksbs.hny", "line": 67, "column": 11, "endline": 67, "endcolumn": 28, "stmt": [67,11,67,34], "code": "          s->ever_negative = False" },
    "1267": { "file": "stacksbs.hny", "line": 69, "column": 3, "endline": 69, "endcolumn": 13, "stmt": [69,3,69,16], "code": "  release_one(s)" },
    "1268": { "file": "stacksbs.hny", "line": 69, "column": 15, "endline": 69, "endcolumn": 15, "stmt": [69,3,69,16], "code": "  release_one(s)" },
    "1269": { "file": "stacksbs.hny", "line": 69, "column": 15, "endline": 69, "endcolumn": 15, "stmt": [69,3,69,16], "code": "  release_one(s)" },
    "1270": { "file": "stacksbs.hny", "line": 69, "column": 3, "endline": 69, "endcolumn": 16, "stmt": [69,3,69,16], "code": "  release_one(s)" },
    "1271": { "file": "stacksbs.hny", "line": 69, "column": 3, "endline": 69, "endcolumn": 16, "stmt": [69,3,69,16], "code": "  release_one(s)" },
    "1272": { "file": "stacksbs.hny", "line": 47, "column": 1, "endline": 47, "endcolumn": 11, "stmt": [47,1,47,11], "code": "def pop(s):" },
    "1273": { "file": "stacksbs.hny", "line": 71, "column": 1, "endline": 71, "endcolumn": 3, "stmt": [71,1,71,16], "code": "def validate(s):" },
    "1274": { "file": "stacksbs.hny", "line": 71, "column": 1, "endline": 71, "endcolumn": 16, "stmt": [71,1,71,16], "code": "def validate(s):" },
    "1275": { "file": "stacksbs.hny", "line": 73, "column": 3, "endline": 73, "endcolumn": 9, "stmt": [73,3,73,20], "code": "  acquire(?s->mutex)" },
    "1276": { "file": "stacksbs.hny", "line": 73, "column": 3, "endline": 73, "endcolumn": 9, "stmt": [73,3,73,20], "code": "  acquire(?s->mutex)" },
    "1277": { "file": "stacksbs.hny", "line": 73, "column": 12, "endline": 73, "endcolumn": 12, "stmt": [73,3,73,20], "code": "  acquire(?s->mutex)" },
    "1278": { "file": "stacksbs.hny", "line": 73, "column": 15, "endline": 73, "endcolumn": 19, "stmt": [73,3,73,20], "code": "  acquire(?s->mutex)" },
    "1279": { "file": "stacksbs.hny", "line": 73, "column": 12, "endline": 73, "endcolumn": 19, "stmt": [73,3,73,20], "code": "  acquire(?s->mutex)" },
    "1280": { "file": "stacksbs.hny", "line": 73, "column": 3, "endline": 73, "endcolumn": 20, "stmt": [73,3,73,20], "code": "  acquire(?s->mutex)" },
    "1281": { "file": "stacksbs.hny", "line": 73, "column": 3, "endline": 73, "endcolumn": 20, "stmt": [73,3,73,20], "code": "  acquire(?s->mutex)" },
    "1282": { "file": "stacksbs.hny", "line": 74, "column": 12, "endline": 74, "endcolumn": 12, "stmt": [74,3,74,36], "code": "  if (not (s->size == s->max_size)):" },
    "1283": { "file": "stacksbs.hny", "line": 74, "column": 15, "endline": 74, "endcolumn": 18, "stmt": [74,3,74,36], "code": "  if (not (s->size == s->max_size)):" },
    "1284": { "file": "stacksbs.hny", "line": 74, "column": 12, "endline": 74, "endcolumn": 18, "stmt": [74,3,74,36], "code": "  if (not (s->size == s->max_size)):" },
    "1285": { "file": "stacksbs.hny", "line": 74, "column": 12, "endline": 74, "endcolumn": 18, "stmt": [74,3,74,36], "code": "  if (not (s->size == s->max_size)):" },
    "1286": { "file": "stacksbs.hny", "line": 74, "column": 23, "endline": 74, "endcolumn": 23, "stmt": [74,3,74,36], "code": "  if (not (s->size == s->max_size)):" },
    "1287": { "file": "stacksbs.hny", "line": 74, "column": 26, "endline": 74, "endcolumn": 33, "stmt": [74,3,74,36], "code": "  if (not (s->size == s->max_size)):" },
    "1288": { "file": "stacksbs.hny", "line": 74, "column": 23, "endline": 74, "endcolumn": 33, "stmt": [74,3,74,36], "code": "  if (not (s->size == s->max_size)):" },
    "1289": { "file": "stacksbs.hny", "line": 74, "column": 23, "endline": 74, "endcolumn": 33, "stmt": [74,3,74,36], "code": "  if (not (s->size == s->max_size)):" },
    "1290": { "file": "stacksbs.hny", "line": 74, "column": 12, "endline": 74, "endcolumn": 33, "stmt": [74,3,74,36], "code": "  if (not (s->size == s->max_size)):" },
    "1291": { "file": "stacksbs.hny", "line": 74, "column": 3, "endline": 74, "endcolumn": 4, "stmt": [74,3,74,36], "code": "  if (not (s->size == s->max_size)):" },
    "1292": { "file": "stacksbs.hny", "line": 75, "column": 5, "endline": 75, "endcolumn": 5, "stmt": [75,5,75,31], "code": "    s->validate_gate.count += 1" },
    "1293": { "file": "stacksbs.hny", "line": 75, "column": 8, "endline": 75, "endcolumn": 20, "stmt": [75,5,75,31], "code": "    s->validate_gate.count += 1" },
    "1294": { "file": "stacksbs.hny", "line": 75, "column": 5, "endline": 75, "endcolumn": 20, "stmt": [75,5,75,31], "code": "    s->validate_gate.count += 1" },
    "1295": { "file": "stacksbs.hny", "line": 75, "column": 21, "endline": 75, "endcolumn": 26, "stmt": [75,5,75,31], "code": "    s->validate_gate.count += 1" },
    "1296": { "file": "stacksbs.hny", "line": 75, "column": 5, "endline": 75, "endcolumn": 26, "stmt": [75,5,75,31], "code": "    s->validate_gate.count += 1" },
    "1297": { "file": "stacksbs.hny", "line": 75, "column": 5, "endline": 75, "endcolumn": 31, "stmt": [75,5,75,31], "code": "    s->validate_gate.count += 1" },
    "1298": { "file": "stacksbs.hny", "line": 75, "column": 5, "endline": 75, "endcolumn": 31, "stmt": [75,5,75,31], "code": "    s->validate_gate.count += 1" },
    "1299": { "file": "stacksbs.hny", "line": 75, "column": 31, "endline": 75, "endcolumn": 31, "stmt": [75,5,75,31], "code": "    s->validate_gate.count += 1" },
    "1300": { "file": "stacksbs.hny", "line": 75, "column": 5, "endline": 75, "endcolumn": 31, "stmt": [75,5,75,31], "code": "    s->validate_gate.count += 1" },
    "1301": { "file": "stacksbs.hny", "line": 75, "column": 5, "endline": 75, "endcolumn": 29, "stmt": [75,5,75,31], "code": "    s->validate_gate.count += 1" },
    "1302": { "file": "stacksbs.hny", "line": 76, "column": 5, "endline": 76, "endcolumn": 11, "stmt": [76,5,76,22], "code": "    release(?s->mutex)" },
    "1303": { "file": "stacksbs.hny", "line": 76, "column": 14, "endline": 76, "endcolumn": 14, "stmt": [76,5,76,22], "code": "    release(?s->mutex)" },
    "1304": { "file": "stacksbs.hny", "line": 76, "column": 17, "endline": 76, "endcolumn": 21, "stmt": [76,5,76,22], "code": "    release(?s->mutex)" },
    "1305": { "file": "stacksbs.hny", "line": 76, "column": 14, "endline": 76, "endcolumn": 21, "stmt": [76,5,76,22], "code": "    release(?s->mutex)" },
    "1306": { "file": "stacksbs.hny", "line": 76, "column": 5, "endline": 76, "endcolumn": 22, "stmt": [76,5,76,22], "code": "    release(?s->mutex)" },
    "1307": { "file": "stacksbs.hny", "line": 76, "column": 5, "endline": 76, "endcolumn": 22, "stmt": [76,5,76,22], "code": "    release(?s->mutex)" },
    "1308": { "file": "stacksbs.hny", "line": 77, "column": 5, "endline": 77, "endcolumn": 11, "stmt": [77,5,77,35], "code": "    acquire(?s->validate_gate.sema)" },
    "1309": { "file": "stacksbs.hny", "line": 77, "column": 14, "endline": 77, "endcolumn": 14, "stmt": [77,5,77,35], "code": "    acquire(?s->validate_gate.sema)" },
    "1310": { "file": "stacksbs.hny", "line": 77, "column": 17, "endline": 77, "endcolumn": 29, "stmt": [77,5,77,35], "code": "    acquire(?s->validate_gate.sema)" },
    "1311": { "file": "stacksbs.hny", "line": 77, "column": 14, "endline": 77, "endcolumn": 29, "stmt": [77,5,77,35], "code": "    acquire(?s->validate_gate.sema)" },
    "1312": { "file": "stacksbs.hny", "line": 77, "column": 30, "endline": 77, "endcolumn": 34, "stmt": [77,5,77,35], "code": "    acquire(?s->validate_gate.sema)" },
    "1313": { "file": "stacksbs.hny", "line": 77, "column": 14, "endline": 77, "endcolumn": 34, "stmt": [77,5,77,35], "code": "    acquire(?s->validate_gate.sema)" },
    "1314": { "file": "stacksbs.hny", "line": 77, "column": 5, "endline": 77, "endcolumn": 35, "stmt": [77,5,77,35], "code": "    acquire(?s->validate_gate.sema)" },
    "1315": { "file": "stacksbs.hny", "line": 77, "column": 5, "endline": 77, "endcolumn": 35, "stmt": [77,5,77,35], "code": "    acquire(?s->validate_gate.sema)" },
    "1316": { "file": "stacksbs.hny", "line": 78, "column": 5, "endline": 78, "endcolumn": 5, "stmt": [78,5,78,31], "code": "    s->validate_gate.count -= 1" },
    "1317": { "file": "stacksbs.hny", "line": 78, "column": 8, "endline": 78, "endcolumn": 20, "stmt": [78,5,78,31], "code": "    s->validate_gate.count -= 1" },
    "1318": { "file": "stacksbs.hny", "line": 78, "column": 5, "endline": 78, "endcolumn": 20, "stmt": [78,5,78,31], "code": "    s->validate_gate.count -= 1" },
    "1319": { "file": "stacksbs.hny", "line": 78, "column": 21, "endline": 78, "endcolumn": 26, "stmt": [78,5,78,31], "code": "    s->validate_gate.count -= 1" },
    "1320": { "file": "stacksbs.hny", "line": 78, "column": 5, "endline": 78, "endcolumn": 26, "stmt": [78,5,78,31], "code": "    s->validate_gate.count -= 1" },
    "1321": { "file": "stacksbs.hny", "line": 78, "column": 5, "endline": 78, "endcolumn": 31, "stmt": [78,5,78,31], "code": "    s->validate_gate.count -= 1" },
    "1322": { "file": "stacksbs.hny", "line": 78, "column": 5, "endline": 78, "endcolumn": 31, "stmt": [78,5,78,31], "code": "    s->validate_gate.count -= 1" },
    "1323": { "file": "stacksbs.hny", "line": 78, "column": 31, "endline": 78, "endcolumn": 31, "stmt": [78,5,78,31], "code": "    s->validate_gate.count -= 1" },
    "1324": { "file": "stacksbs.hny", "line": 78, "column": 5, "endline": 78, "endcolumn": 31, "stmt": [78,5,78,31], "code": "    s->validate_gate.count -= 1" },
    "1325": { "file": "stacksbs.hny", "line": 78, "column": 5, "endline": 78, "endcolumn": 29, "stmt": [78,5,78,31], "code": "    s->validate_gate.count -= 1" },
    "1326": { "file": "stacksbs.hny", "line": 80, "column": 14, "endline": 80, "endcolumn": 14, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1327": { "file": "stacksbs.hny", "line": 80, "column": 17, "endline": 80, "endcolumn": 29, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1328": { "file": "stacksbs.hny", "line": 80, "column": 14, "endline": 80, "endcolumn": 29, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1329": { "file": "stacksbs.hny", "line": 80, "column": 14, "endline": 80, "endcolumn": 29, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1330": { "file": "stacksbs.hny", "line": 80, "column": 34, "endline": 80, "endcolumn": 38, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1331": { "file": "stacksbs.hny", "line": 80, "column": 14, "endline": 80, "endcolumn": 38, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1332": { "file": "stacksbs.hny", "line": 80, "column": 13, "endline": 80, "endcolumn": 59, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1333": { "file": "stacksbs.hny", "line": 80, "column": 46, "endline": 80, "endcolumn": 46, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1334": { "file": "stacksbs.hny", "line": 80, "column": 49, "endline": 80, "endcolumn": 53, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1335": { "file": "stacksbs.hny", "line": 80, "column": 46, "endline": 80, "endcolumn": 53, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1336": { "file": "stacksbs.hny", "line": 80, "column": 46, "endline": 80, "endcolumn": 53, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1337": { "file": "stacksbs.hny", "line": 80, "column": 58, "endline": 80, "endcolumn": 58, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1338": { "file": "stacksbs.hny", "line": 80, "column": 46, "endline": 80, "endcolumn": 58, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1339": { "file": "stacksbs.hny", "line": 80, "column": 41, "endline": 80, "endcolumn": 43, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1340": { "file": "stacksbs.hny", "line": 80, "column": 13, "endline": 80, "endcolumn": 59, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1341": { "file": "stacksbs.hny", "line": 80, "column": 3, "endline": 80, "endcolumn": 10, "stmt": [80,3,80,60], "code": "  result = ((s->ever_negative == False) and (s->valid == 0))" },
    "1342": { "file": "stacksbs.hny", "line": 82, "column": 3, "endline": 82, "endcolumn": 13, "stmt": [82,3,82,16], "code": "  release_one(s)" },
    "1343": { "file": "stacksbs.hny", "line": 82, "column": 15, "endline": 82, "endcolumn": 15, "stmt": [82,3,82,16], "code": "  release_one(s)" },
    "1344": { "file": "stacksbs.hny", "line": 82, "column": 15, "endline": 82, "endcolumn": 15, "stmt": [82,3,82,16], "code": "  release_one(s)" },
    "1345": { "file": "stacksbs.hny", "line": 82, "column": 3, "endline": 82, "endcolumn": 16, "stmt": [82,3,82,16], "code": "  release_one(s)" },
    "1346": { "file": "stacksbs.hny", "line": 82, "column": 3, "endline": 82, "endcolumn": 16, "stmt": [82,3,82,16], "code": "  release_one(s)" },
    "1347": { "file": "stacksbs.hny", "line": 71, "column": 1, "endline": 71, "endcolumn": 16, "stmt": [71,1,71,16], "code": "def validate(s):" },
    "1348": { "file": "stacksbs.hny", "line": 84, "column": 1, "endline": 84, "endcolumn": 3, "stmt": [84,1,84,19], "code": "def release_one(s):" },
    "1349": { "file": "stacksbs.hny", "line": 84, "column": 1, "endline": 84, "endcolumn": 19, "stmt": [84,1,84,19], "code": "def release_one(s):" },
    "1350": { "file": "stacksbs.hny", "line": 85, "column": 7, "endline": 85, "endcolumn": 7, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1351": { "file": "stacksbs.hny", "line": 85, "column": 10, "endline": 85, "endcolumn": 13, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1352": { "file": "stacksbs.hny", "line": 85, "column": 7, "endline": 85, "endcolumn": 13, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1353": { "file": "stacksbs.hny", "line": 85, "column": 7, "endline": 85, "endcolumn": 13, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1354": { "file": "stacksbs.hny", "line": 85, "column": 18, "endline": 85, "endcolumn": 18, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1355": { "file": "stacksbs.hny", "line": 85, "column": 21, "endline": 85, "endcolumn": 28, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1356": { "file": "stacksbs.hny", "line": 85, "column": 18, "endline": 85, "endcolumn": 28, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1357": { "file": "stacksbs.hny", "line": 85, "column": 18, "endline": 85, "endcolumn": 28, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1358": { "file": "stacksbs.hny", "line": 85, "column": 7, "endline": 85, "endcolumn": 28, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1359": { "file": "stacksbs.hny", "line": 85, "column": 6, "endline": 85, "endcolumn": 58, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1360": { "file": "stacksbs.hny", "line": 85, "column": 36, "endline": 85, "endcolumn": 36, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1361": { "file": "stacksbs.hny", "line": 85, "column": 39, "endline": 85, "endcolumn": 47, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1362": { "file": "stacksbs.hny", "line": 85, "column": 36, "endline": 85, "endcolumn": 47, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1363": { "file": "stacksbs.hny", "line": 85, "column": 48, "endline": 85, "endcolumn": 53, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1364": { "file": "stacksbs.hny", "line": 85, "column": 36, "endline": 85, "endcolumn": 53, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1365": { "file": "stacksbs.hny", "line": 85, "column": 36, "endline": 85, "endcolumn": 53, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1366": { "file": "stacksbs.hny", "line": 85, "column": 57, "endline": 85, "endcolumn": 57, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1367": { "file": "stacksbs.hny", "line": 85, "column": 36, "endline": 85, "endcolumn": 57, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1368": { "file": "stacksbs.hny", "line": 85, "column": 31, "endline": 85, "endcolumn": 33, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1369": { "file": "stacksbs.hny", "line": 85, "column": 6, "endline": 85, "endcolumn": 58, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1370": { "file": "stacksbs.hny", "line": 85, "column": 3, "endline": 85, "endcolumn": 4, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1371": { "file": "stacksbs.hny", "line": 86, "column": 5, "endline": 86, "endcolumn": 11, "stmt": [86,5,86,31], "code": "    release(?s->push_gate.sema)" },
    "1372": { "file": "stacksbs.hny", "line": 86, "column": 14, "endline": 86, "endcolumn": 14, "stmt": [86,5,86,31], "code": "    release(?s->push_gate.sema)" },
    "1373": { "file": "stacksbs.hny", "line": 86, "column": 14, "endline": 86, "endcolumn": 14, "stmt": [86,5,86,31], "code": "    release(?s->push_gate.sema)" },
    "1374": { "file": "stacksbs.hny", "line": 86, "column": 17, "endline": 86, "endcolumn": 25, "stmt": [86,5,86,31], "code": "    release(?s->push_gate.sema)" },
    "1375": { "file": "stacksbs.hny", "line": 86, "column": 14, "endline": 86, "endcolumn": 25, "stmt": [86,5,86,31], "code": "    release(?s->push_gate.sema)" },
    "1376": { "file": "stacksbs.hny", "line": 86, "column": 26, "endline": 86, "endcolumn": 30, "stmt": [86,5,86,31], "code": "    release(?s->push_gate.sema)" },
    "1377": { "file": "stacksbs.hny", "line": 86, "column": 14, "endline": 86, "endcolumn": 30, "stmt": [86,5,86,31], "code": "    release(?s->push_gate.sema)" },
    "1378": { "file": "stacksbs.hny", "line": 86, "column": 5, "endline": 86, "endcolumn": 31, "stmt": [86,5,86,31], "code": "    release(?s->push_gate.sema)" },
    "1379": { "file": "stacksbs.hny", "line": 86, "column": 5, "endline": 86, "endcolumn": 31, "stmt": [86,5,86,31], "code": "    release(?s->push_gate.sema)" },
    "1380": { "file": "stacksbs.hny", "line": 85, "column": 3, "endline": 85, "endcolumn": 59, "stmt": [85,3,85,59], "code": "  if (s->size != s->max_size) and (s->push_gate.count > 0):" },
    "1381": { "file": "stacksbs.hny", "line": 87, "column": 9, "endline": 87, "endcolumn": 9, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1382": { "file": "stacksbs.hny", "line": 87, "column": 12, "endline": 87, "endcolumn": 15, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1383": { "file": "stacksbs.hny", "line": 87, "column": 9, "endline": 87, "endcolumn": 15, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1384": { "file": "stacksbs.hny", "line": 87, "column": 9, "endline": 87, "endcolumn": 15, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1385": { "file": "stacksbs.hny", "line": 87, "column": 20, "endline": 87, "endcolumn": 20, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1386": { "file": "stacksbs.hny", "line": 87, "column": 9, "endline": 87, "endcolumn": 20, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1387": { "file": "stacksbs.hny", "line": 87, "column": 8, "endline": 87, "endcolumn": 49, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1388": { "file": "stacksbs.hny", "line": 87, "column": 28, "endline": 87, "endcolumn": 28, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1389": { "file": "stacksbs.hny", "line": 87, "column": 31, "endline": 87, "endcolumn": 38, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1390": { "file": "stacksbs.hny", "line": 87, "column": 28, "endline": 87, "endcolumn": 38, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1391": { "file": "stacksbs.hny", "line": 87, "column": 39, "endline": 87, "endcolumn": 44, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1392": { "file": "stacksbs.hny", "line": 87, "column": 28, "endline": 87, "endcolumn": 44, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1393": { "file": "stacksbs.hny", "line": 87, "column": 28, "endline": 87, "endcolumn": 44, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1394": { "file": "stacksbs.hny", "line": 87, "column": 48, "endline": 87, "endcolumn": 48, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1395": { "file": "stacksbs.hny", "line": 87, "column": 28, "endline": 87, "endcolumn": 48, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1396": { "file": "stacksbs.hny", "line": 87, "column": 23, "endline": 87, "endcolumn": 25, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1397": { "file": "stacksbs.hny", "line": 87, "column": 8, "endline": 87, "endcolumn": 49, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1398": { "file": "stacksbs.hny", "line": 87, "column": 3, "endline": 87, "endcolumn": 6, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1399": { "file": "stacksbs.hny", "line": 88, "column": 5, "endline": 88, "endcolumn": 11, "stmt": [88,5,88,30], "code": "    release(?s->pop_gate.sema)" },
    "1400": { "file": "stacksbs.hny", "line": 88, "column": 14, "endline": 88, "endcolumn": 14, "stmt": [88,5,88,30], "code": "    release(?s->pop_gate.sema)" },
    "1401": { "file": "stacksbs.hny", "line": 88, "column": 14, "endline": 88, "endcolumn": 14, "stmt": [88,5,88,30], "code": "    release(?s->pop_gate.sema)" },
    "1402": { "file": "stacksbs.hny", "line": 88, "column": 17, "endline": 88, "endcolumn": 24, "stmt": [88,5,88,30], "code": "    release(?s->pop_gate.sema)" },
    "1403": { "file": "stacksbs.hny", "line": 88, "column": 14, "endline": 88, "endcolumn": 24, "stmt": [88,5,88,30], "code": "    release(?s->pop_gate.sema)" },
    "1404": { "file": "stacksbs.hny", "line": 88, "column": 25, "endline": 88, "endcolumn": 29, "stmt": [88,5,88,30], "code": "    release(?s->pop_gate.sema)" },
    "1405": { "file": "stacksbs.hny", "line": 88, "column": 14, "endline": 88, "endcolumn": 29, "stmt": [88,5,88,30], "code": "    release(?s->pop_gate.sema)" },
    "1406": { "file": "stacksbs.hny", "line": 88, "column": 5, "endline": 88, "endcolumn": 30, "stmt": [88,5,88,30], "code": "    release(?s->pop_gate.sema)" },
    "1407": { "file": "stacksbs.hny", "line": 88, "column": 5, "endline": 88, "endcolumn": 30, "stmt": [88,5,88,30], "code": "    release(?s->pop_gate.sema)" },
    "1408": { "file": "stacksbs.hny", "line": 87, "column": 3, "endline": 87, "endcolumn": 50, "stmt": [87,3,87,50], "code": "  elif (s->size != 0) and (s->pop_gate.count > 0):" },
    "1409": { "file": "stacksbs.hny", "line": 89, "column": 9, "endline": 89, "endcolumn": 9, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1410": { "file": "stacksbs.hny", "line": 89, "column": 12, "endline": 89, "endcolumn": 15, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1411": { "file": "stacksbs.hny", "line": 89, "column": 9, "endline": 89, "endcolumn": 15, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1412": { "file": "stacksbs.hny", "line": 89, "column": 9, "endline": 89, "endcolumn": 15, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1413": { "file": "stacksbs.hny", "line": 89, "column": 20, "endline": 89, "endcolumn": 20, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1414": { "file": "stacksbs.hny", "line": 89, "column": 23, "endline": 89, "endcolumn": 30, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1415": { "file": "stacksbs.hny", "line": 89, "column": 20, "endline": 89, "endcolumn": 30, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1416": { "file": "stacksbs.hny", "line": 89, "column": 20, "endline": 89, "endcolumn": 30, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1417": { "file": "stacksbs.hny", "line": 89, "column": 9, "endline": 89, "endcolumn": 30, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1418": { "file": "stacksbs.hny", "line": 89, "column": 8, "endline": 89, "endcolumn": 64, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1419": { "file": "stacksbs.hny", "line": 89, "column": 38, "endline": 89, "endcolumn": 38, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1420": { "file": "stacksbs.hny", "line": 89, "column": 41, "endline": 89, "endcolumn": 53, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1421": { "file": "stacksbs.hny", "line": 89, "column": 38, "endline": 89, "endcolumn": 53, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1422": { "file": "stacksbs.hny", "line": 89, "column": 54, "endline": 89, "endcolumn": 59, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1423": { "file": "stacksbs.hny", "line": 89, "column": 38, "endline": 89, "endcolumn": 59, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1424": { "file": "stacksbs.hny", "line": 89, "column": 38, "endline": 89, "endcolumn": 59, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1425": { "file": "stacksbs.hny", "line": 89, "column": 63, "endline": 89, "endcolumn": 63, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1426": { "file": "stacksbs.hny", "line": 89, "column": 38, "endline": 89, "endcolumn": 63, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1427": { "file": "stacksbs.hny", "line": 89, "column": 33, "endline": 89, "endcolumn": 35, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1428": { "file": "stacksbs.hny", "line": 89, "column": 8, "endline": 89, "endcolumn": 64, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1429": { "file": "stacksbs.hny", "line": 89, "column": 3, "endline": 89, "endcolumn": 6, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1430": { "file": "stacksbs.hny", "line": 90, "column": 5, "endline": 90, "endcolumn": 11, "stmt": [90,5,90,35], "code": "    release(?s->validate_gate.sema)" },
    "1431": { "file": "stacksbs.hny", "line": 90, "column": 14, "endline": 90, "endcolumn": 14, "stmt": [90,5,90,35], "code": "    release(?s->validate_gate.sema)" },
    "1432": { "file": "stacksbs.hny", "line": 90, "column": 14, "endline": 90, "endcolumn": 14, "stmt": [90,5,90,35], "code": "    release(?s->validate_gate.sema)" },
    "1433": { "file": "stacksbs.hny", "line": 90, "column": 17, "endline": 90, "endcolumn": 29, "stmt": [90,5,90,35], "code": "    release(?s->validate_gate.sema)" },
    "1434": { "file": "stacksbs.hny", "line": 90, "column": 14, "endline": 90, "endcolumn": 29, "stmt": [90,5,90,35], "code": "    release(?s->validate_gate.sema)" },
    "1435": { "file": "stacksbs.hny", "line": 90, "column": 30, "endline": 90, "endcolumn": 34, "stmt": [90,5,90,35], "code": "    release(?s->validate_gate.sema)" },
    "1436": { "file": "stacksbs.hny", "line": 90, "column": 14, "endline": 90, "endcolumn": 34, "stmt": [90,5,90,35], "code": "    release(?s->validate_gate.sema)" },
    "1437": { "file": "stacksbs.hny", "line": 90, "column": 5, "endline": 90, "endcolumn": 35, "stmt": [90,5,90,35], "code": "    release(?s->validate_gate.sema)" },
    "1438": { "file": "stacksbs.hny", "line": 90, "column": 5, "endline": 90, "endcolumn": 35, "stmt": [90,5,90,35], "code": "    release(?s->validate_gate.sema)" },
    "1439": { "file": "stacksbs.hny", "line": 89, "column": 3, "endline": 89, "endcolumn": 65, "stmt": [89,3,89,65], "code": "  elif (s->size == s->max_size) and (s->validate_gate.count > 0):" },
    "1440": { "file": "stacksbs.hny", "line": 92, "column": 5, "endline": 92, "endcolumn": 11, "stmt": [92,5,92,22], "code": "    release(?s->mutex)" },
    "1441": { "file": "stacksbs.hny", "line": 92, "column": 14, "endline": 92, "endcolumn": 14, "stmt": [92,5,92,22], "code": "    release(?s->mutex)" },
    "1442": { "file": "stacksbs.hny", "line": 92, "column": 14, "endline": 92, "endcolumn": 14, "stmt": [92,5,92,22], "code": "    release(?s->mutex)" },
    "1443": { "file": "stacksbs.hny", "line": 92, "column": 17, "endline": 92, "endcolumn": 21, "stmt": [92,5,92,22], "code": "    release(?s->mutex)" },
    "1444": { "file": "stacksbs.hny", "line": 92, "column": 14, "endline": 92, "endcolumn": 21, "stmt": [92,5,92,22], "code": "    release(?s->mutex)" },
    "1445": { "file": "stacksbs.hny", "line": 92, "column": 5, "endline": 92, "endcolumn": 22, "stmt": [92,5,92,22], "code": "    release(?s->mutex)" },
    "1446": { "file": "stacksbs.hny", "line": 92, "column": 5, "endline": 92, "endcolumn": 22, "stmt": [92,5,92,22], "code": "    release(?s->mutex)" },
    "1447": { "file": "stacksbs.hny", "line": 84, "column": 1, "endline": 84, "endcolumn": 19, "stmt": [84,1,84,19], "code": "def release_one(s):" },
    "1448": { "file": "stacktest.hny", "line": 7, "column": 5, "endline": 7, "endcolumn": 15, "stmt": [7,1,7,25], "code": "s = stack.Stack(MAX_SIZE)" },
    "1449": { "file": "stacktest.hny", "line": 7, "column": 17, "endline": 7, "endcolumn": 24, "stmt": [7,1,7,25], "code": "s = stack.Stack(MAX_SIZE)" },
    "1450": { "file": "stacktest.hny", "line": 7, "column": 5, "endline": 7, "endcolumn": 25, "stmt": [7,1,7,25], "code": "s = stack.Stack(MAX_SIZE)" },
    "1451": { "file": "stacktest.hny", "line": 7, "column": 1, "endline": 7, "endcolumn": 3, "stmt": [7,1,7,25], "code": "s = stack.Stack(MAX_SIZE)" },
    "1452": { "file": "stacktest.hny", "line": 9, "column": 1, "endline": 9, "endcolumn": 3, "stmt": [9,1,9,26], "code": "def push_test(self, char):" },
    "1453": { "file": "stacktest.hny", "line": 9, "column": 1, "endline": 9, "endcolumn": 26, "stmt": [9,1,9,26], "code": "def push_test(self, char):" },
    "1454": { "file": "stacktest.hny", "line": 10, "column": 11, "endline": 10, "endcolumn": 33, "stmt": [10,5,10,34], "code": "    print(\"call push\", self, char)" },
    "1455": { "file": "stacktest.hny", "line": 10, "column": 11, "endline": 10, "endcolumn": 21, "stmt": [10,5,10,34], "code": "    print(\"call push\", self, char)" },
    "1456": { "file": "stacktest.hny", "line": 10, "column": 11, "endline": 10, "endcolumn": 33, "stmt": [10,5,10,34], "code": "    print(\"call push\", self, char)" },
    "1457": { "file": "stacktest.hny", "line": 10, "column": 24, "endline": 10, "endcolumn": 27, "stmt": [10,5,10,34], "code": "    print(\"call push\", self, char)" },
    "1458": { "file": "stacktest.hny", "line": 10, "column": 11, "endline": 10, "endcolumn": 33, "stmt": [10,5,10,34], "code": "    print(\"call push\", self, char)" },
    "1459": { "file": "stacktest.hny", "line": 10, "column": 30, "endline": 10, "endcolumn": 33, "stmt": [10,5,10,34], "code": "    print(\"call push\", self, char)" },
    "1460": { "file": "stacktest.hny", "line": 10, "column": 11, "endline": 10, "endcolumn": 33, "stmt": [10,5,10,34], "code": "    print(\"call push\", self, char)" },
    "1461": { "file": "stacktest.hny", "line": 10, "column": 5, "endline": 10, "endcolumn": 34, "stmt": [10,5,10,34], "code": "    print(\"call push\", self, char)" },
    "1462": { "file": "stacktest.hny", "line": 11, "column": 5, "endline": 11, "endcolumn": 14, "stmt": [11,5,11,24], "code": "    stack.push(?s, char)" },
    "1463": { "file": "stacktest.hny", "line": 11, "column": 16, "endline": 11, "endcolumn": 23, "stmt": [11,5,11,24], "code": "    stack.push(?s, char)" },
    "1464": { "file": "stacktest.hny", "line": 11, "column": 17, "endline": 11, "endcolumn": 17, "stmt": [11,5,11,24], "code": "    stack.push(?s, char)" },
    "1465": { "file": "stacktest.hny", "line": 11, "column": 16, "endline": 11, "endcolumn": 23, "stmt": [11,5,11,24], "code": "    stack.push(?s, char)" },
    "1466": { "file": "stacktest.hny", "line": 11, "column": 20, "endline": 11, "endcolumn": 23, "stmt": [11,5,11,24], "code": "    stack.push(?s, char)" },
    "1467": { "file": "stacktest.hny", "line": 11, "column": 16, "endline": 11, "endcolumn": 23, "stmt": [11,5,11,24], "code": "    stack.push(?s, char)" },
    "1468": { "file": "stacktest.hny", "line": 11, "column": 5, "endline": 11, "endcolumn": 24, "stmt": [11,5,11,24], "code": "    stack.push(?s, char)" },
    "1469": { "file": "stacktest.hny", "line": 11, "column": 5, "endline": 11, "endcolumn": 24, "stmt": [11,5,11,24], "code": "    stack.push(?s, char)" },
    "1470": { "file": "stacktest.hny", "line": 12, "column": 11, "endline": 12, "endcolumn": 33, "stmt": [12,5,12,34], "code": "    print(\"done push\", self, char)" },
    "1471": { "file": "stacktest.hny", "line": 12, "column": 11, "endline": 12, "endcolumn": 21, "stmt": [12,5,12,34], "code": "    print(\"done push\", self, char)" },
    "1472": { "file": "stacktest.hny", "line": 12, "column": 11, "endline": 12, "endcolumn": 33, "stmt": [12,5,12,34], "code": "    print(\"done push\", self, char)" },
    "1473": { "file": "stacktest.hny", "line": 12, "column": 24, "endline": 12, "endcolumn": 27, "stmt": [12,5,12,34], "code": "    print(\"done push\", self, char)" },
    "1474": { "file": "stacktest.hny", "line": 12, "column": 24, "endline": 12, "endcolumn": 27, "stmt": [12,5,12,34], "code": "    print(\"done push\", self, char)" },
    "1475": { "file": "stacktest.hny", "line": 12, "column": 11, "endline": 12, "endcolumn": 33, "stmt": [12,5,12,34], "code": "    print(\"done push\", self, char)" },
    "1476": { "file": "stacktest.hny", "line": 12, "column": 30, "endline": 12, "endcolumn": 33, "stmt": [12,5,12,34], "code": "    print(\"done push\", self, char)" },
    "1477": { "file": "stacktest.hny", "line": 12, "column": 30, "endline": 12, "endcolumn": 33, "stmt": [12,5,12,34], "code": "    print(\"done push\", self, char)" },
    "1478": { "file": "stacktest.hny", "line": 12, "column": 11, "endline": 12, "endcolumn": 33, "stmt": [12,5,12,34], "code": "    print(\"done push\", self, char)" },
    "1479": { "file": "stacktest.hny", "line": 12, "column": 5, "endline": 12, "endcolumn": 34, "stmt": [12,5,12,34], "code": "    print(\"done push\", self, char)" },
    "1480": { "file": "stacktest.hny", "line": 9, "column": 1, "endline": 9, "endcolumn": 26, "stmt": [9,1,9,26], "code": "def push_test(self, char):" },
    "1481": { "file": "stacktest.hny", "line": 14, "column": 1, "endline": 14, "endcolumn": 3, "stmt": [14,1,14,19], "code": "def pop_test(self):" },
    "1482": { "file": "stacktest.hny", "line": 14, "column": 1, "endline": 14, "endcolumn": 19, "stmt": [14,1,14,19], "code": "def pop_test(self):" },
    "1483": { "file": "stacktest.hny", "line": 15, "column": 11, "endline": 15, "endcolumn": 26, "stmt": [15,5,15,27], "code": "    print(\"call pop\", self)" },
    "1484": { "file": "stacktest.hny", "line": 15, "column": 11, "endline": 15, "endcolumn": 20, "stmt": [15,5,15,27], "code": "    print(\"call pop\", self)" },
    "1485": { "file": "stacktest.hny", "line": 15, "column": 11, "endline": 15, "endcolumn": 26, "stmt": [15,5,15,27], "code": "    print(\"call pop\", self)" },
    "1486": { "file": "stacktest.hny", "line": 15, "column": 23, "endline": 15, "endcolumn": 26, "stmt": [15,5,15,27], "code": "    print(\"call pop\", self)" },
    "1487": { "file": "stacktest.hny", "line": 15, "column": 11, "endline": 15, "endcolumn": 26, "stmt": [15,5,15,27], "code": "    print(\"call pop\", self)" },
    "1488": { "file": "stacktest.hny", "line": 15, "column": 5, "endline": 15, "endcolumn": 27, "stmt": [15,5,15,27], "code": "    print(\"call pop\", self)" },
    "1489": { "file": "stacktest.hny", "line": 16, "column": 13, "endline": 16, "endcolumn": 21, "stmt": [16,5,16,25], "code": "    let v = stack.pop(?s):" },
    "1490": { "file": "stacktest.hny", "line": 16, "column": 24, "endline": 16, "endcolumn": 24, "stmt": [16,5,16,25], "code": "    let v = stack.pop(?s):" },
    "1491": { "file": "stacktest.hny", "line": 16, "column": 13, "endline": 16, "endcolumn": 25, "stmt": [16,5,16,25], "code": "    let v = stack.pop(?s):" },
    "1492": { "file": "stacktest.hny", "line": 16, "column": 5, "endline": 16, "endcolumn": 11, "stmt": [16,5,16,25], "code": "    let v = stack.pop(?s):" },
    "1493": { "file": "stacktest.hny", "line": 17, "column": 15, "endline": 17, "endcolumn": 33, "stmt": [17,9,17,34], "code": "        print(\"done pop\", self, v)" },
    "1494": { "file": "stacktest.hny", "line": 17, "column": 15, "endline": 17, "endcolumn": 24, "stmt": [17,9,17,34], "code": "        print(\"done pop\", self, v)" },
    "1495": { "file": "stacktest.hny", "line": 17, "column": 15, "endline": 17, "endcolumn": 33, "stmt": [17,9,17,34], "code": "        print(\"done pop\", self, v)" },
    "1496": { "file": "stacktest.hny", "line": 17, "column": 27, "endline": 17, "endcolumn": 30, "stmt": [17,9,17,34], "code": "        print(\"done pop\", self, v)" },
    "1497": { "file": "stacktest.hny", "line": 17, "column": 27, "endline": 17, "endcolumn": 30, "stmt": [17,9,17,34], "code": "        print(\"done pop\", self, v)" },
    "1498": { "file": "stacktest.hny", "line": 17, "column": 15, "endline": 17, "endcolumn": 33, "stmt": [17,9,17,34], "code": "        print(\"done pop\", self, v)" },
    "1499": { "file": "stacktest.hny", "line": 17, "column": 33, "endline": 17, "endcolumn": 33, "stmt": [17,9,17,34], "code": "        print(\"done pop\", self, v)" },
    "1500": { "file": "stacktest.hny", "line": 17, "column": 33, "endline": 17, "endcolumn": 33, "stmt": [17,9,17,34], "code": "        print(\"done pop\", self, v)" },
    "1501": { "file": "stacktest.hny", "line": 17, "column": 15, "endline": 17, "endcolumn": 33, "stmt": [17,9,17,34], "code": "        print(\"done pop\", self, v)" },
    "1502": { "file": "stacktest.hny", "line": 17, "column": 9, "endline": 17, "endcolumn": 34, "stmt": [17,9,17,34], "code": "        print(\"done pop\", self, v)" },
    "1503": { "file": "stacktest.hny", "line": 14, "column": 1, "endline": 14, "endcolumn": 19, "stmt": [14,1,14,19], "code": "def pop_test(self):" },
    "1504": { "file": "stacktest.hny", "line": 19, "column": 1, "endline": 19, "endcolumn": 3, "stmt": [19,1,19,20], "code": "def validate_test():" },
    "1505": { "file": "stacktest.hny", "line": 19, "column": 1, "endline": 19, "endcolumn": 20, "stmt": [19,1,19,20], "code": "def validate_test():" },
    "1506": { "file": "stacktest.hny", "line": 20, "column": 11, "endline": 20, "endcolumn": 25, "stmt": [20,5,20,26], "code": "    print(\"call validate\")" },
    "1507": { "file": "stacktest.hny", "line": 20, "column": 5, "endline": 20, "endcolumn": 26, "stmt": [20,5,20,26], "code": "    print(\"call validate\")" },
    "1508": { "file": "stacktest.hny", "line": 21, "column": 8, "endline": 21, "endcolumn": 21, "stmt": [21,5,21,26], "code": "    if stack.validate(?s):" },
    "1509": { "file": "stacktest.hny", "line": 21, "column": 24, "endline": 21, "endcolumn": 24, "stmt": [21,5,21,26], "code": "    if stack.validate(?s):" },
    "1510": { "file": "stacktest.hny", "line": 21, "column": 8, "endline": 21, "endcolumn": 25, "stmt": [21,5,21,26], "code": "    if stack.validate(?s):" },
    "1511": { "file": "stacktest.hny", "line": 21, "column": 5, "endline": 21, "endcolumn": 6, "stmt": [21,5,21,26], "code": "    if stack.validate(?s):" },
    "1512": { "file": "stacktest.hny", "line": 22, "column": 13, "endline": 22, "endcolumn": 23, "stmt": [22,7,22,24], "code": "      print(\"hooray :)\")" },
    "1513": { "file": "stacktest.hny", "line": 22, "column": 7, "endline": 22, "endcolumn": 24, "stmt": [22,7,22,24], "code": "      print(\"hooray :)\")" },
    "1514": { "file": "stacktest.hny", "line": 21, "column": 5, "endline": 21, "endcolumn": 26, "stmt": [21,5,21,26], "code": "    if stack.validate(?s):" },
    "1515": { "file": "stacktest.hny", "line": 24, "column": 13, "endline": 24, "endcolumn": 20, "stmt": [24,7,24,21], "code": "      print(\"boo :(\")" },
    "1516": { "file": "stacktest.hny", "line": 24, "column": 7, "endline": 24, "endcolumn": 21, "stmt": [24,7,24,21], "code": "      print(\"boo :(\")" },
    "1517": { "file": "stacktest.hny", "line": 19, "column": 1, "endline": 19, "endcolumn": 20, "stmt": [19,1,19,20], "code": "def validate_test():" },
    "1518": { "file": "stacktest.hny", "line": 26, "column": 11, "endline": 26, "endcolumn": 23, "stmt": [26,1,26,24], "code": "for i in {1..NPUSH_OPEN}:" },
    "1519": { "file": "stacktest.hny", "line": 26, "column": 1, "endline": 26, "endcolumn": 3, "stmt": [26,1,26,24], "code": "for i in {1..NPUSH_OPEN}:" },
    "1520": { "file": "stacktest.hny", "line": 26, "column": 1, "endline": 26, "endcolumn": 3, "stmt": [26,1,26,24], "code": "for i in {1..NPUSH_OPEN}:" },
    "1521": { "file": "stacktest.hny", "line": 26, "column": 1, "endline": 26, "endcolumn": 3, "stmt": [26,1,26,24], "code": "for i in {1..NPUSH_OPEN}:" },
    "1522": { "file": "stacktest.hny", "line": 27, "column": 11, "endline": 27, "endcolumn": 19, "stmt": [27,5,27,27], "code": "    spawn push_test(i, \"(\")" },
    "1523": { "file": "stacktest.hny", "line": 27, "column": 21, "endline": 27, "endcolumn": 26, "stmt": [27,5,27,27], "code": "    spawn push_test(i, \"(\")" },
    "1524": { "file": "stacktest.hny", "line": 27, "column": 21, "endline": 27, "endcolumn": 21, "stmt": [27,5,27,27], "code": "    spawn push_test(i, \"(\")" },
    "1525": { "file": "stacktest.hny", "line": 27, "column": 21, "endline": 27, "endcolumn": 21, "stmt": [27,5,27,27], "code": "    spawn push_test(i, \"(\")" },
    "1526": { "file": "stacktest.hny", "line": 27, "column": 21, "endline": 27, "endcolumn": 26, "stmt": [27,5,27,27], "code": "    spawn push_test(i, \"(\")" },
    "1527": { "file": "stacktest.hny", "line": 27, "column": 24, "endline": 27, "endcolumn": 26, "stmt": [27,5,27,27], "code": "    spawn push_test(i, \"(\")" },
    "1528": { "file": "stacktest.hny", "line": 27, "column": 21, "endline": 27, "endcolumn": 26, "stmt": [27,5,27,27], "code": "    spawn push_test(i, \"(\")" },
    "1529": { "file": "stacktest.hny", "line": 27, "column": 5, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,27], "code": "    spawn push_test(i, \"(\")" },
    "1530": { "file": "stacktest.hny", "line": 27, "column": 5, "endline": 27, "endcolumn": 27, "stmt": [27,5,27,27], "code": "    spawn push_test(i, \"(\")" },
    "1531": { "file": "stacktest.hny", "line": 26, "column": 24, "endline": 26, "endcolumn": 24, "stmt": [26,1,26,24], "code": "for i in {1..NPUSH_OPEN}:" },
    "1532": { "file": "stacktest.hny", "line": 28, "column": 11, "endline": 28, "endcolumn": 24, "stmt": [28,1,28,25], "code": "for i in {1..NPUSH_CLOSE}:" },
    "1533": { "file": "stacktest.hny", "line": 28, "column": 11, "endline": 28, "endcolumn": 24, "stmt": [28,1,28,25], "code": "for i in {1..NPUSH_CLOSE}:" },
    "1534": { "file": "stacktest.hny", "line": 28, "column": 1, "endline": 28, "endcolumn": 3, "stmt": [28,1,28,25], "code": "for i in {1..NPUSH_CLOSE}:" },
    "1535": { "file": "stacktest.hny", "line": 28, "column": 1, "endline": 28, "endcolumn": 3, "stmt": [28,1,28,25], "code": "for i in {1..NPUSH_CLOSE}:" },
    "1536": { "file": "stacktest.hny", "line": 28, "column": 1, "endline": 28, "endcolumn": 3, "stmt": [28,1,28,25], "code": "for i in {1..NPUSH_CLOSE}:" },
    "1537": { "file": "stacktest.hny", "line": 29, "column": 11, "endline": 29, "endcolumn": 19, "stmt": [29,5,29,27], "code": "    spawn push_test(i, \")\")" },
    "1538": { "file": "stacktest.hny", "line": 29, "column": 21, "endline": 29, "endcolumn": 26, "stmt": [29,5,29,27], "code": "    spawn push_test(i, \")\")" },
    "1539": { "file": "stacktest.hny", "line": 29, "column": 21, "endline": 29, "endcolumn": 21, "stmt": [29,5,29,27], "code": "    spawn push_test(i, \")\")" },
    "1540": { "file": "stacktest.hny", "line": 29, "column": 21, "endline": 29, "endcolumn": 21, "stmt": [29,5,29,27], "code": "    spawn push_test(i, \")\")" },
    "1541": { "file": "stacktest.hny", "line": 29, "column": 21, "endline": 29, "endcolumn": 26, "stmt": [29,5,29,27], "code": "    spawn push_test(i, \")\")" },
    "1542": { "file": "stacktest.hny", "line": 29, "column": 24, "endline": 29, "endcolumn": 26, "stmt": [29,5,29,27], "code": "    spawn push_test(i, \")\")" },
    "1543": { "file": "stacktest.hny", "line": 29, "column": 21, "endline": 29, "endcolumn": 26, "stmt": [29,5,29,27], "code": "    spawn push_test(i, \")\")" },
    "1544": { "file": "stacktest.hny", "line": 29, "column": 5, "endline": 29, "endcolumn": 27, "stmt": [29,5,29,27], "code": "    spawn push_test(i, \")\")" },
    "1545": { "file": "stacktest.hny", "line": 29, "column": 5, "endline": 29, "endcolumn": 27, "stmt": [29,5,29,27], "code": "    spawn push_test(i, \")\")" },
    "1546": { "file": "stacktest.hny", "line": 28, "column": 25, "endline": 28, "endcolumn": 25, "stmt": [28,1,28,25], "code": "for i in {1..NPUSH_CLOSE}:" },
    "1547": { "file": "stacktest.hny", "line": 30, "column": 11, "endline": 30, "endcolumn": 17, "stmt": [30,1,30,18], "code": "for i in {1..NPOP}:" },
    "1548": { "file": "stacktest.hny", "line": 30, "column": 11, "endline": 30, "endcolumn": 17, "stmt": [30,1,30,18], "code": "for i in {1..NPOP}:" },
    "1549": { "file": "stacktest.hny", "line": 30, "column": 1, "endline": 30, "endcolumn": 3, "stmt": [30,1,30,18], "code": "for i in {1..NPOP}:" },
    "1550": { "file": "stacktest.hny", "line": 30, "column": 1, "endline": 30, "endcolumn": 3, "stmt": [30,1,30,18], "code": "for i in {1..NPOP}:" },
    "1551": { "file": "stacktest.hny", "line": 30, "column": 1, "endline": 30, "endcolumn": 3, "stmt": [30,1,30,18], "code": "for i in {1..NPOP}:" },
    "1552": { "file": "stacktest.hny", "line": 31, "column": 11, "endline": 31, "endcolumn": 18, "stmt": [31,5,31,21], "code": "    spawn pop_test(i)" },
    "1553": { "file": "stacktest.hny", "line": 31, "column": 20, "endline": 31, "endcolumn": 20, "stmt": [31,5,31,21], "code": "    spawn pop_test(i)" },
    "1554": { "file": "stacktest.hny", "line": 31, "column": 20, "endline": 31, "endcolumn": 20, "stmt": [31,5,31,21], "code": "    spawn pop_test(i)" },
    "1555": { "file": "stacktest.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 21, "stmt": [31,5,31,21], "code": "    spawn pop_test(i)" },
    "1556": { "file": "stacktest.hny", "line": 31, "column": 5, "endline": 31, "endcolumn": 21, "stmt": [31,5,31,21], "code": "    spawn pop_test(i)" },
    "1557": { "file": "stacktest.hny", "line": 30, "column": 18, "endline": 30, "endcolumn": 18, "stmt": [30,1,30,18], "code": "for i in {1..NPOP}:" },
    "1558": { "file": "stacktest.hny", "line": 33, "column": 7, "endline": 33, "endcolumn": 19, "stmt": [33,1,33,21], "code": "spawn validate_test()" },
    "1559": { "file": "stacktest.hny", "line": 33, "column": 7, "endline": 33, "endcolumn": 19, "stmt": [33,1,33,21], "code": "spawn validate_test()" },
    "1560": { "file": "stacktest.hny", "line": 33, "column": 20, "endline": 33, "endcolumn": 21, "stmt": [33,1,33,21], "code": "spawn validate_test()" },
    "1561": { "file": "stacktest.hny", "line": 33, "column": 1, "endline": 33, "endcolumn": 21, "stmt": [33,1,33,21], "code": "spawn validate_test()" },
    "1562": { "file": "stacktest.hny", "line": 33, "column": 1, "endline": 33, "endcolumn": 21, "stmt": [33,1,33,21], "code": "spawn validate_test()" },
    "1563": { "file": "stacktest.hny", "line": 1, "column": 1, "endline": 33, "endcolumn": 28, "stmt": [1,1,33,28], "code": "import stack" },
    "1564": { "file": "stacktest.hny", "line": 1, "column": 1, "endline": 33, "endcolumn": 28, "stmt": [1,1,33,28], "code": "import stack" }
  }
}
